{"ast":null,"code":"var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar _rates;\nimport { MediaChromeButton } from \"./media-chrome-button.js\";\nimport { globalThis } from \"./utils/server-safe-globals.js\";\nimport { MediaUIEvents, MediaUIAttributes } from \"./constants.js\";\nimport { AttributeTokenList } from \"./utils/attribute-token-list.js\";\nimport { getNumericAttr, setNumericAttr } from \"./utils/element-utils.js\";\nimport { t } from \"./utils/i18n.js\";\nconst Attributes = {\n  RATES: \"rates\"\n};\nconst DEFAULT_RATES = [1, 1.2, 1.5, 1.7, 2];\nconst DEFAULT_RATE = 1;\nfunction getSlotTemplateHTML(attrs) {\n  return /*html*/`\n    <style>\n      :host {\n        min-width: 5ch;\n        padding: var(--media-button-padding, var(--media-control-padding, 10px 5px));\n      }\n    </style>\n    <slot name=\"icon\">${attrs[\"mediaplaybackrate\"] || DEFAULT_RATE}x</slot>\n  `;\n}\nfunction getTooltipContentHTML() {\n  return t(\"Playback rate\");\n}\nclass MediaPlaybackRateButton extends MediaChromeButton {\n  constructor() {\n    var _a;\n    super();\n    __privateAdd(this, _rates, new AttributeTokenList(this, Attributes.RATES, {\n      defaultValue: DEFAULT_RATES\n    }));\n    this.container = this.shadowRoot.querySelector('slot[name=\"icon\"]');\n    this.container.innerHTML = `${(_a = this.mediaPlaybackRate) != null ? _a : DEFAULT_RATE}x`;\n  }\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_PLAYBACK_RATE, Attributes.RATES];\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n    if (attrName === Attributes.RATES) {\n      __privateGet(this, _rates).value = newValue;\n    }\n    if (attrName === MediaUIAttributes.MEDIA_PLAYBACK_RATE) {\n      const newPlaybackRate = newValue ? +newValue : Number.NaN;\n      const playbackRate = !Number.isNaN(newPlaybackRate) ? newPlaybackRate : DEFAULT_RATE;\n      this.container.innerHTML = `${playbackRate}x`;\n      this.setAttribute(\"aria-label\", t(\"Playback rate {playbackRate}\", {\n        playbackRate\n      }));\n    }\n  }\n  /**\n   * Get the playback rates for the button.\n   */\n  get rates() {\n    return __privateGet(this, _rates);\n  }\n  /**\n   * Set the playback rates for the button.\n   * For React 19+ compatibility, accept a string of space-separated rates.\n   */\n  set rates(value) {\n    if (!value) {\n      __privateGet(this, _rates).value = \"\";\n    } else if (Array.isArray(value)) {\n      __privateGet(this, _rates).value = value.join(\" \");\n    } else if (typeof value === \"string\") {\n      __privateGet(this, _rates).value = value;\n    }\n  }\n  /**\n   * @type {number} The current playback rate\n   */\n  get mediaPlaybackRate() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, DEFAULT_RATE);\n  }\n  set mediaPlaybackRate(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, value);\n  }\n  handleClick() {\n    var _a, _b;\n    const availableRates = Array.from(__privateGet(this, _rates).values(), str => +str).sort((a, b) => a - b);\n    const detail = (_b = (_a = availableRates.find(r => r > this.mediaPlaybackRate)) != null ? _a : availableRates[0]) != null ? _b : DEFAULT_RATE;\n    const evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_PLAYBACK_RATE_REQUEST, {\n      composed: true,\n      bubbles: true,\n      detail\n    });\n    this.dispatchEvent(evt);\n  }\n}\n_rates = new WeakMap();\nMediaPlaybackRateButton.getSlotTemplateHTML = getSlotTemplateHTML;\nMediaPlaybackRateButton.getTooltipContentHTML = getTooltipContentHTML;\nif (!globalThis.customElements.get(\"media-playback-rate-button\")) {\n  globalThis.customElements.define(\"media-playback-rate-button\", MediaPlaybackRateButton);\n}\nvar media_playback_rate_button_default = MediaPlaybackRateButton;\nexport { Attributes, DEFAULT_RATE, DEFAULT_RATES, media_playback_rate_button_default as default };","map":{"version":3,"names":["__accessCheck","obj","member","msg","has","TypeError","__privateGet","getter","call","get","__privateAdd","value","WeakSet","add","set","_rates","MediaChromeButton","globalThis","MediaUIEvents","MediaUIAttributes","AttributeTokenList","getNumericAttr","setNumericAttr","t","Attributes","RATES","DEFAULT_RATES","DEFAULT_RATE","getSlotTemplateHTML","attrs","getTooltipContentHTML","MediaPlaybackRateButton","constructor","_a","defaultValue","container","shadowRoot","querySelector","innerHTML","mediaPlaybackRate","observedAttributes","MEDIA_PLAYBACK_RATE","attributeChangedCallback","attrName","oldValue","newValue","newPlaybackRate","Number","NaN","playbackRate","isNaN","setAttribute","rates","Array","isArray","join","handleClick","_b","availableRates","from","values","str","sort","a","b","detail","find","r","evt","CustomEvent","MEDIA_PLAYBACK_RATE_REQUEST","composed","bubbles","dispatchEvent","WeakMap","customElements","define","media_playback_rate_button_default","default"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/media-chrome/dist/media-playback-rate-button.js"],"sourcesContent":["var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar _rates;\nimport { MediaChromeButton } from \"./media-chrome-button.js\";\nimport { globalThis } from \"./utils/server-safe-globals.js\";\nimport { MediaUIEvents, MediaUIAttributes } from \"./constants.js\";\nimport { AttributeTokenList } from \"./utils/attribute-token-list.js\";\nimport { getNumericAttr, setNumericAttr } from \"./utils/element-utils.js\";\nimport { t } from \"./utils/i18n.js\";\nconst Attributes = {\n  RATES: \"rates\"\n};\nconst DEFAULT_RATES = [1, 1.2, 1.5, 1.7, 2];\nconst DEFAULT_RATE = 1;\nfunction getSlotTemplateHTML(attrs) {\n  return (\n    /*html*/\n    `\n    <style>\n      :host {\n        min-width: 5ch;\n        padding: var(--media-button-padding, var(--media-control-padding, 10px 5px));\n      }\n    </style>\n    <slot name=\"icon\">${attrs[\"mediaplaybackrate\"] || DEFAULT_RATE}x</slot>\n  `\n  );\n}\nfunction getTooltipContentHTML() {\n  return t(\"Playback rate\");\n}\nclass MediaPlaybackRateButton extends MediaChromeButton {\n  constructor() {\n    var _a;\n    super();\n    __privateAdd(this, _rates, new AttributeTokenList(this, Attributes.RATES, {\n      defaultValue: DEFAULT_RATES\n    }));\n    this.container = this.shadowRoot.querySelector('slot[name=\"icon\"]');\n    this.container.innerHTML = `${(_a = this.mediaPlaybackRate) != null ? _a : DEFAULT_RATE}x`;\n  }\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_PLAYBACK_RATE,\n      Attributes.RATES\n    ];\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n    if (attrName === Attributes.RATES) {\n      __privateGet(this, _rates).value = newValue;\n    }\n    if (attrName === MediaUIAttributes.MEDIA_PLAYBACK_RATE) {\n      const newPlaybackRate = newValue ? +newValue : Number.NaN;\n      const playbackRate = !Number.isNaN(newPlaybackRate) ? newPlaybackRate : DEFAULT_RATE;\n      this.container.innerHTML = `${playbackRate}x`;\n      this.setAttribute(\n        \"aria-label\",\n        t(\"Playback rate {playbackRate}\", { playbackRate })\n      );\n    }\n  }\n  /**\n   * Get the playback rates for the button.\n   */\n  get rates() {\n    return __privateGet(this, _rates);\n  }\n  /**\n   * Set the playback rates for the button.\n   * For React 19+ compatibility, accept a string of space-separated rates.\n   */\n  set rates(value) {\n    if (!value) {\n      __privateGet(this, _rates).value = \"\";\n    } else if (Array.isArray(value)) {\n      __privateGet(this, _rates).value = value.join(\" \");\n    } else if (typeof value === \"string\") {\n      __privateGet(this, _rates).value = value;\n    }\n  }\n  /**\n   * @type {number} The current playback rate\n   */\n  get mediaPlaybackRate() {\n    return getNumericAttr(\n      this,\n      MediaUIAttributes.MEDIA_PLAYBACK_RATE,\n      DEFAULT_RATE\n    );\n  }\n  set mediaPlaybackRate(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, value);\n  }\n  handleClick() {\n    var _a, _b;\n    const availableRates = Array.from(__privateGet(this, _rates).values(), (str) => +str).sort(\n      (a, b) => a - b\n    );\n    const detail = (_b = (_a = availableRates.find((r) => r > this.mediaPlaybackRate)) != null ? _a : availableRates[0]) != null ? _b : DEFAULT_RATE;\n    const evt = new globalThis.CustomEvent(\n      MediaUIEvents.MEDIA_PLAYBACK_RATE_REQUEST,\n      { composed: true, bubbles: true, detail }\n    );\n    this.dispatchEvent(evt);\n  }\n}\n_rates = new WeakMap();\nMediaPlaybackRateButton.getSlotTemplateHTML = getSlotTemplateHTML;\nMediaPlaybackRateButton.getTooltipContentHTML = getTooltipContentHTML;\nif (!globalThis.customElements.get(\"media-playback-rate-button\")) {\n  globalThis.customElements.define(\n    \"media-playback-rate-button\",\n    MediaPlaybackRateButton\n  );\n}\nvar media_playback_rate_button_default = MediaPlaybackRateButton;\nexport {\n  Attributes,\n  DEFAULT_RATE,\n  DEFAULT_RATES,\n  media_playback_rate_button_default as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}