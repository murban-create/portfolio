{"ast":null,"code":"import { MediaUIAttributes } from \"../constants.js\";\nimport { MediaChromeMenuButton } from \"./media-chrome-menu-button.js\";\nimport { globalThis } from \"../utils/server-safe-globals.js\";\nimport { getStringAttr, setStringAttr, getMediaController } from \"../utils/element-utils.js\";\nimport { t } from \"../utils/i18n.js\";\nconst audioTrackIcon = /*html*/\n`<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"M11 17H9.5V7H11v10Zm-3-3H6.5v-4H8v4Zm6-5h-1.5v6H14V9Zm3 7h-1.5V8H17v8Z\"/>\n  <path d=\"M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10Zm-2 0a8 8 0 1 0-16 0 8 8 0 0 0 16 0Z\"/>\n</svg>`;\nfunction getSlotTemplateHTML() {\n  return /*html*/`\n    <style>\n      :host([aria-expanded=\"true\"]) slot[name=tooltip] {\n        display: none;\n      }\n    </style>\n    <slot name=\"icon\">${audioTrackIcon}</slot>\n  `;\n}\nfunction getTooltipContentHTML() {\n  return t(\"Audio\");\n}\nclass MediaAudioTrackMenuButton extends MediaChromeMenuButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_AUDIO_TRACK_ENABLED, MediaUIAttributes.MEDIA_AUDIO_TRACK_UNAVAILABLE];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"aria-label\", t(\"Audio\"));\n  }\n  /**\n   * Returns the element with the id specified by the `invoketarget` attribute.\n   * @return {HTMLElement | null}\n   */\n  get invokeTargetElement() {\n    var _a;\n    if (this.invokeTarget != void 0) return super.invokeTargetElement;\n    return (_a = getMediaController(this)) == null ? void 0 : _a.querySelector(\"media-audio-track-menu\");\n  }\n  /**\n   * Get enabled audio track id.\n   * @return {string}\n   */\n  get mediaAudioTrackEnabled() {\n    var _a;\n    return (_a = getStringAttr(this, MediaUIAttributes.MEDIA_AUDIO_TRACK_ENABLED)) != null ? _a : \"\";\n  }\n  set mediaAudioTrackEnabled(id) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_AUDIO_TRACK_ENABLED, id);\n  }\n}\nMediaAudioTrackMenuButton.getSlotTemplateHTML = getSlotTemplateHTML;\nMediaAudioTrackMenuButton.getTooltipContentHTML = getTooltipContentHTML;\nif (!globalThis.customElements.get(\"media-audio-track-menu-button\")) {\n  globalThis.customElements.define(\"media-audio-track-menu-button\", MediaAudioTrackMenuButton);\n}\nvar media_audio_track_menu_button_default = MediaAudioTrackMenuButton;\nexport { MediaAudioTrackMenuButton, media_audio_track_menu_button_default as default };","map":null,"metadata":{},"sourceType":"module"}