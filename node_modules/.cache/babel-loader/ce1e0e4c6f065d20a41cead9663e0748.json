{"ast":null,"code":"import { globalThis, document } from \"./server-safe-globals.js\";\nimport { delay } from \"./utils.js\";\nimport { isFullscreenEnabled } from \"./fullscreen-api.js\";\nlet testMediaEl;\nconst getTestMediaEl = () => {\n  var _a, _b;\n  if (testMediaEl) return testMediaEl;\n  testMediaEl = (_b = (_a = document) == null ? void 0 : _a.createElement) == null ? void 0 : _b.call(_a, \"video\");\n  return testMediaEl;\n};\nconst hasVolumeSupportAsync = async function () {\n  let mediaEl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getTestMediaEl();\n  if (!mediaEl) return false;\n  const prevVolume = mediaEl.volume;\n  mediaEl.volume = prevVolume / 2 + 0.1;\n  const abortController = new AbortController();\n  const volumeSupported = await Promise.race([dispatchedVolumeChange(mediaEl, abortController.signal), volumeChanged(mediaEl, prevVolume)]);\n  abortController.abort();\n  return volumeSupported;\n};\nconst dispatchedVolumeChange = (mediaEl, signal) => {\n  return new Promise(resolve => {\n    mediaEl.addEventListener(\"volumechange\", () => resolve(true), {\n      signal\n    });\n  });\n};\nconst volumeChanged = async (mediaEl, prevVolume) => {\n  for (let i = 0; i < 10; i++) {\n    if (mediaEl.volume === prevVolume) return false;\n    await delay(10);\n  }\n  return mediaEl.volume !== prevVolume;\n};\nconst isSafari = /.*Version\\/.*Safari\\/.*/.test(globalThis.navigator.userAgent);\nconst hasPipSupport = function () {\n  let mediaEl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getTestMediaEl();\n  if (globalThis.matchMedia(\"(display-mode: standalone)\").matches && isSafari) return false;\n  return typeof (mediaEl == null ? void 0 : mediaEl.requestPictureInPicture) === \"function\";\n};\nconst hasFullscreenSupport = function () {\n  let mediaEl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getTestMediaEl();\n  return isFullscreenEnabled({\n    documentElement: document,\n    media: mediaEl\n  });\n};\nconst fullscreenSupported = hasFullscreenSupport();\nconst pipSupported = hasPipSupport();\nconst airplaySupported = !!globalThis.WebKitPlaybackTargetAvailabilityEvent;\nconst castSupported = !!globalThis.chrome;\nexport { airplaySupported, castSupported, fullscreenSupported, getTestMediaEl, hasFullscreenSupport, hasPipSupport, hasVolumeSupportAsync, pipSupported };","map":{"version":3,"names":["globalThis","document","delay","isFullscreenEnabled","testMediaEl","getTestMediaEl","_a","_b","createElement","call","hasVolumeSupportAsync","mediaEl","arguments","length","undefined","prevVolume","volume","abortController","AbortController","volumeSupported","Promise","race","dispatchedVolumeChange","signal","volumeChanged","abort","resolve","addEventListener","i","isSafari","test","navigator","userAgent","hasPipSupport","matchMedia","matches","requestPictureInPicture","hasFullscreenSupport","documentElement","media","fullscreenSupported","pipSupported","airplaySupported","WebKitPlaybackTargetAvailabilityEvent","castSupported","chrome"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/media-chrome/dist/utils/platform-tests.js"],"sourcesContent":["import { globalThis, document } from \"./server-safe-globals.js\";\nimport { delay } from \"./utils.js\";\nimport { isFullscreenEnabled } from \"./fullscreen-api.js\";\nlet testMediaEl;\nconst getTestMediaEl = () => {\n  var _a, _b;\n  if (testMediaEl)\n    return testMediaEl;\n  testMediaEl = (_b = (_a = document) == null ? void 0 : _a.createElement) == null ? void 0 : _b.call(_a, \"video\");\n  return testMediaEl;\n};\nconst hasVolumeSupportAsync = async (mediaEl = getTestMediaEl()) => {\n  if (!mediaEl)\n    return false;\n  const prevVolume = mediaEl.volume;\n  mediaEl.volume = prevVolume / 2 + 0.1;\n  const abortController = new AbortController();\n  const volumeSupported = await Promise.race([\n    dispatchedVolumeChange(mediaEl, abortController.signal),\n    volumeChanged(mediaEl, prevVolume)\n  ]);\n  abortController.abort();\n  return volumeSupported;\n};\nconst dispatchedVolumeChange = (mediaEl, signal) => {\n  return new Promise((resolve) => {\n    mediaEl.addEventListener(\"volumechange\", () => resolve(true), { signal });\n  });\n};\nconst volumeChanged = async (mediaEl, prevVolume) => {\n  for (let i = 0; i < 10; i++) {\n    if (mediaEl.volume === prevVolume)\n      return false;\n    await delay(10);\n  }\n  return mediaEl.volume !== prevVolume;\n};\nconst isSafari = /.*Version\\/.*Safari\\/.*/.test(\n  globalThis.navigator.userAgent\n);\nconst hasPipSupport = (mediaEl = getTestMediaEl()) => {\n  if (globalThis.matchMedia(\"(display-mode: standalone)\").matches && isSafari)\n    return false;\n  return typeof (mediaEl == null ? void 0 : mediaEl.requestPictureInPicture) === \"function\";\n};\nconst hasFullscreenSupport = (mediaEl = getTestMediaEl()) => {\n  return isFullscreenEnabled({ documentElement: document, media: mediaEl });\n};\nconst fullscreenSupported = hasFullscreenSupport();\nconst pipSupported = hasPipSupport();\nconst airplaySupported = !!globalThis.WebKitPlaybackTargetAvailabilityEvent;\nconst castSupported = !!globalThis.chrome;\nexport {\n  airplaySupported,\n  castSupported,\n  fullscreenSupported,\n  getTestMediaEl,\n  hasFullscreenSupport,\n  hasPipSupport,\n  hasVolumeSupportAsync,\n  pipSupported\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}