{"ast":null,"code":"import { WebkitPresentationModes } from \"../constants.js\";\nimport { containsComposedNode } from \"./element-utils.js\";\nimport { document } from \"./server-safe-globals.js\";\nconst enterFullscreen = stateOwners => {\n  var _a;\n  const {\n    media,\n    fullscreenElement\n  } = stateOwners;\n  try {\n    const enterFullscreenKey = fullscreenElement && \"requestFullscreen\" in fullscreenElement ? \"requestFullscreen\" : fullscreenElement && \"webkitRequestFullScreen\" in fullscreenElement ? \"webkitRequestFullScreen\" : void 0;\n    if (enterFullscreenKey) {\n      const maybePromise = (_a = fullscreenElement[enterFullscreenKey]) == null ? void 0 : _a.call(fullscreenElement);\n      if (maybePromise instanceof Promise) {\n        return maybePromise.catch(() => {});\n      }\n    } else if (media == null ? void 0 : media.webkitEnterFullscreen) {\n      media.webkitEnterFullscreen();\n    } else if (media == null ? void 0 : media.requestFullscreen) {\n      media.requestFullscreen();\n    }\n  } catch (e) {\n    console.error(e);\n  }\n};\nconst exitFullscreenKey = \"exitFullscreen\" in document ? \"exitFullscreen\" : \"webkitExitFullscreen\" in document ? \"webkitExitFullscreen\" : \"webkitCancelFullScreen\" in document ? \"webkitCancelFullScreen\" : void 0;\nconst exitFullscreen = stateOwners => {\n  var _a;\n  const {\n    documentElement\n  } = stateOwners;\n  if (exitFullscreenKey) {\n    const maybePromise = (_a = documentElement == null ? void 0 : documentElement[exitFullscreenKey]) == null ? void 0 : _a.call(documentElement);\n    if (maybePromise instanceof Promise) {\n      return maybePromise.catch(() => {});\n    }\n  }\n};\nconst fullscreenElementKey = \"fullscreenElement\" in document ? \"fullscreenElement\" : \"webkitFullscreenElement\" in document ? \"webkitFullscreenElement\" : void 0;\nconst getFullscreenElement = stateOwners => {\n  const {\n    documentElement,\n    media\n  } = stateOwners;\n  const docFullscreenElement = documentElement == null ? void 0 : documentElement[fullscreenElementKey];\n  if (!docFullscreenElement && \"webkitDisplayingFullscreen\" in media && \"webkitPresentationMode\" in media && media.webkitDisplayingFullscreen && media.webkitPresentationMode === WebkitPresentationModes.FULLSCREEN) {\n    return media;\n  }\n  return docFullscreenElement;\n};\nconst isFullscreen = stateOwners => {\n  var _a;\n  const {\n    media,\n    documentElement,\n    fullscreenElement = media\n  } = stateOwners;\n  if (!media || !documentElement) return false;\n  const currentFullscreenElement = getFullscreenElement(stateOwners);\n  if (!currentFullscreenElement) return false;\n  if (currentFullscreenElement === fullscreenElement || currentFullscreenElement === media) {\n    return true;\n  }\n  if (currentFullscreenElement.localName.includes(\"-\")) {\n    let currentRoot = currentFullscreenElement.shadowRoot;\n    if (!(fullscreenElementKey in currentRoot)) {\n      return containsComposedNode(currentFullscreenElement, /** @TODO clean up type assumptions (e.g. Node) (CJP) */\n      // @ts-ignore\n      fullscreenElement);\n    }\n    while (currentRoot == null ? void 0 : currentRoot[fullscreenElementKey]) {\n      if (currentRoot[fullscreenElementKey] === fullscreenElement) return true;\n      currentRoot = (_a = currentRoot[fullscreenElementKey]) == null ? void 0 : _a.shadowRoot;\n    }\n  }\n  return false;\n};\nconst fullscreenEnabledKey = \"fullscreenEnabled\" in document ? \"fullscreenEnabled\" : \"webkitFullscreenEnabled\" in document ? \"webkitFullscreenEnabled\" : void 0;\nconst isFullscreenEnabled = stateOwners => {\n  const {\n    documentElement,\n    media\n  } = stateOwners;\n  return !!(documentElement == null ? void 0 : documentElement[fullscreenEnabledKey]) || media && \"webkitSupportsFullscreen\" in media;\n};\nexport { enterFullscreen, exitFullscreen, getFullscreenElement, isFullscreen, isFullscreenEnabled };","map":{"version":3,"names":["WebkitPresentationModes","containsComposedNode","document","enterFullscreen","stateOwners","_a","media","fullscreenElement","enterFullscreenKey","maybePromise","call","Promise","catch","webkitEnterFullscreen","requestFullscreen","e","console","error","exitFullscreenKey","exitFullscreen","documentElement","fullscreenElementKey","getFullscreenElement","docFullscreenElement","webkitDisplayingFullscreen","webkitPresentationMode","FULLSCREEN","isFullscreen","currentFullscreenElement","localName","includes","currentRoot","shadowRoot","fullscreenEnabledKey","isFullscreenEnabled"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/media-chrome/dist/utils/fullscreen-api.js"],"sourcesContent":["import { WebkitPresentationModes } from \"../constants.js\";\nimport { containsComposedNode } from \"./element-utils.js\";\nimport { document } from \"./server-safe-globals.js\";\nconst enterFullscreen = (stateOwners) => {\n  var _a;\n  const { media, fullscreenElement } = stateOwners;\n  try {\n    const enterFullscreenKey = fullscreenElement && \"requestFullscreen\" in fullscreenElement ? \"requestFullscreen\" : fullscreenElement && \"webkitRequestFullScreen\" in fullscreenElement ? \"webkitRequestFullScreen\" : void 0;\n    if (enterFullscreenKey) {\n      const maybePromise = (_a = fullscreenElement[enterFullscreenKey]) == null ? void 0 : _a.call(fullscreenElement);\n      if (maybePromise instanceof Promise) {\n        return maybePromise.catch(() => {\n        });\n      }\n    } else if (media == null ? void 0 : media.webkitEnterFullscreen) {\n      media.webkitEnterFullscreen();\n    } else if (media == null ? void 0 : media.requestFullscreen) {\n      media.requestFullscreen();\n    }\n  } catch (e) {\n    console.error(e);\n  }\n};\nconst exitFullscreenKey = \"exitFullscreen\" in document ? \"exitFullscreen\" : \"webkitExitFullscreen\" in document ? \"webkitExitFullscreen\" : \"webkitCancelFullScreen\" in document ? \"webkitCancelFullScreen\" : void 0;\nconst exitFullscreen = (stateOwners) => {\n  var _a;\n  const { documentElement } = stateOwners;\n  if (exitFullscreenKey) {\n    const maybePromise = (_a = documentElement == null ? void 0 : documentElement[exitFullscreenKey]) == null ? void 0 : _a.call(documentElement);\n    if (maybePromise instanceof Promise) {\n      return maybePromise.catch(() => {\n      });\n    }\n  }\n};\nconst fullscreenElementKey = \"fullscreenElement\" in document ? \"fullscreenElement\" : \"webkitFullscreenElement\" in document ? \"webkitFullscreenElement\" : void 0;\nconst getFullscreenElement = (stateOwners) => {\n  const { documentElement, media } = stateOwners;\n  const docFullscreenElement = documentElement == null ? void 0 : documentElement[fullscreenElementKey];\n  if (!docFullscreenElement && \"webkitDisplayingFullscreen\" in media && \"webkitPresentationMode\" in media && media.webkitDisplayingFullscreen && media.webkitPresentationMode === WebkitPresentationModes.FULLSCREEN) {\n    return media;\n  }\n  return docFullscreenElement;\n};\nconst isFullscreen = (stateOwners) => {\n  var _a;\n  const { media, documentElement, fullscreenElement = media } = stateOwners;\n  if (!media || !documentElement)\n    return false;\n  const currentFullscreenElement = getFullscreenElement(stateOwners);\n  if (!currentFullscreenElement)\n    return false;\n  if (currentFullscreenElement === fullscreenElement || currentFullscreenElement === media) {\n    return true;\n  }\n  if (currentFullscreenElement.localName.includes(\"-\")) {\n    let currentRoot = currentFullscreenElement.shadowRoot;\n    if (!(fullscreenElementKey in currentRoot)) {\n      return containsComposedNode(\n        currentFullscreenElement,\n        /** @TODO clean up type assumptions (e.g. Node) (CJP) */\n        // @ts-ignore\n        fullscreenElement\n      );\n    }\n    while (currentRoot == null ? void 0 : currentRoot[fullscreenElementKey]) {\n      if (currentRoot[fullscreenElementKey] === fullscreenElement)\n        return true;\n      currentRoot = (_a = currentRoot[fullscreenElementKey]) == null ? void 0 : _a.shadowRoot;\n    }\n  }\n  return false;\n};\nconst fullscreenEnabledKey = \"fullscreenEnabled\" in document ? \"fullscreenEnabled\" : \"webkitFullscreenEnabled\" in document ? \"webkitFullscreenEnabled\" : void 0;\nconst isFullscreenEnabled = (stateOwners) => {\n  const { documentElement, media } = stateOwners;\n  return !!(documentElement == null ? void 0 : documentElement[fullscreenEnabledKey]) || media && \"webkitSupportsFullscreen\" in media;\n};\nexport {\n  enterFullscreen,\n  exitFullscreen,\n  getFullscreenElement,\n  isFullscreen,\n  isFullscreenEnabled\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}