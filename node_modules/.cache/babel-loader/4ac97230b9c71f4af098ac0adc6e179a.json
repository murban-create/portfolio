{"ast":null,"code":"const EMBED_BASE = \"https://player.twitch.tv\";\nconst MATCH_VIDEO = /(?:www\\.|go\\.)?twitch\\.tv\\/(?:videos?\\/|\\?video=)(\\d+)($|\\?)/;\nconst MATCH_CHANNEL = /(?:www\\.|go\\.)?twitch\\.tv\\/([a-zA-Z0-9_]+)($|\\?)/;\nconst PlaybackState = {\n  IDLE: \"Idle\",\n  READY: \"Ready\",\n  BUFFERING: \"Buffering\",\n  PLAYING: \"Playing\",\n  ENDED: \"Ended\"\n};\nconst PlayerCommands = {\n  DISABLE_CAPTIONS: 0,\n  ENABLE_CAPTIONS: 1,\n  PAUSE: 2,\n  PLAY: 3,\n  SEEK: 4,\n  SET_CHANNEL: 5,\n  SET_CHANNEL_ID: 6,\n  SET_COLLECTION: 7,\n  SET_QUALITY: 8,\n  SET_VIDEO: 9,\n  SET_MUTED: 10,\n  SET_VOLUME: 11\n};\nfunction getTemplateHTML(attrs) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const iframeAttrs = {\n    src: serializeIframeUrl(attrs, props),\n    frameborder: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    allow: \"accelerometer; fullscreen; autoplay; encrypted-media; picture-in-picture;\",\n    sandbox: \"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox\",\n    scrolling: \"no\"\n  };\n  if (props.config) {\n    iframeAttrs[\"data-config\"] = JSON.stringify(props.config);\n  }\n  return /*html*/`\n    <style>\n      :host {\n        display: inline-block;\n        min-width: 300px;\n        min-height: 150px;\n        position: relative;\n      }\n      iframe {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n      :host(:not([controls])) {\n        pointer-events: none;\n      }\n    </style>\n    <iframe${serializeAttributes(iframeAttrs)}></iframe>\n  `;\n}\nfunction serializeIframeUrl(attrs, props) {\n  var _a;\n  if (!attrs.src) return;\n  const videoMatch = attrs.src.match(MATCH_VIDEO);\n  const channelMatch = attrs.src.match(MATCH_CHANNEL);\n  const params = {\n    parent: (_a = globalThis.location) == null ? void 0 : _a.hostname,\n    // ?controls=true is enabled by default in the iframe\n    controls: attrs.controls === \"\" ? null : false,\n    autoplay: attrs.autoplay === \"\" ? null : false,\n    muted: attrs.muted,\n    preload: attrs.preload,\n    ...props.config\n  };\n  if (videoMatch) {\n    const videoId = videoMatch[1];\n    return `${EMBED_BASE}/?video=v${videoId}&${serialize(params)}`;\n  } else if (channelMatch) {\n    const channel = channelMatch[1];\n    return `${EMBED_BASE}/?channel=${channel}&${serialize(params)}`;\n  }\n  return \"\";\n}\nclass TwitchVideoElement extends (globalThis.HTMLElement ?? class {}) {\n  static getTemplateHTML = getTemplateHTML;\n  static shadowRootOptions = {\n    mode: \"open\"\n  };\n  static observedAttributes = [\"autoplay\", \"controls\", \"loop\", \"muted\", \"playsinline\", \"preload\", \"src\"];\n  loadComplete = new PublicPromise();\n  #loadRequested;\n  #hasLoaded;\n  #iframe;\n  #playerState = {};\n  #currentTime = 0;\n  #muted = false;\n  #volume = 1;\n  #paused = !this.autoplay;\n  #seeking = false;\n  #readyState = 0;\n  #config = null;\n  constructor() {\n    super();\n    this.#upgradeProperty(\"config\");\n  }\n  get config() {\n    return this.#config;\n  }\n  set config(value) {\n    this.#config = value;\n  }\n  async load() {\n    if (this.#loadRequested) return;\n    if (!this.shadowRoot) {\n      this.attachShadow({\n        mode: \"open\"\n      });\n    }\n    const isFirstLoad = !this.#hasLoaded;\n    if (this.#hasLoaded) {\n      this.loadComplete = new PublicPromise();\n    }\n    this.#hasLoaded = true;\n    await (this.#loadRequested = Promise.resolve());\n    this.#loadRequested = null;\n    this.#readyState = 0;\n    this.dispatchEvent(new Event(\"emptied\"));\n    if (!this.src) {\n      this.shadowRoot.innerHTML = \"\";\n      globalThis.removeEventListener(\"message\", this.#onMessage);\n      return;\n    }\n    this.dispatchEvent(new Event(\"loadstart\"));\n    let iframe = this.shadowRoot.querySelector(\"iframe\");\n    const attrs = namedNodeMapToObject(this.attributes);\n    if (isFirstLoad && iframe) {\n      this.#config = JSON.parse(iframe.getAttribute(\"data-config\") || \"{}\");\n    }\n    if (!(iframe == null ? void 0 : iframe.src) || iframe.src !== serializeIframeUrl(attrs, this)) {\n      this.shadowRoot.innerHTML = getTemplateHTML(attrs, this);\n      iframe = this.shadowRoot.querySelector(\"iframe\");\n    }\n    this.#iframe = iframe;\n    globalThis.addEventListener(\"message\", this.#onMessage);\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    switch (attrName) {\n      case \"src\":\n      case \"controls\":\n        {\n          this.load();\n          break;\n        }\n    }\n  }\n  get src() {\n    return this.getAttribute(\"src\");\n  }\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n  get readyState() {\n    return this.#readyState;\n  }\n  get seeking() {\n    return this.#seeking;\n  }\n  get buffered() {\n    var _a, _b;\n    return createTimeRanges(0, ((_b = (_a = this.#playerState.stats) == null ? void 0 : _a.videoStats) == null ? void 0 : _b.bufferSize) ?? 0);\n  }\n  get paused() {\n    if (!this.#playerState.playback) return this.#paused;\n    return this.#playerState.playback === PlaybackState.IDLE;\n  }\n  get ended() {\n    if (!this.#playerState.playback) return false;\n    return this.#playerState.playback === PlaybackState.ENDED;\n  }\n  get duration() {\n    return this.#playerState.duration ?? NaN;\n  }\n  get autoplay() {\n    return this.hasAttribute(\"autoplay\");\n  }\n  set autoplay(val) {\n    if (this.autoplay == val) return;\n    this.toggleAttribute(\"autoplay\", Boolean(val));\n  }\n  get controls() {\n    return this.hasAttribute(\"controls\");\n  }\n  set controls(val) {\n    if (this.controls == val) return;\n    this.toggleAttribute(\"controls\", Boolean(val));\n  }\n  get currentTime() {\n    if (!this.#playerState.currentTime) return this.#currentTime;\n    return this.#playerState.currentTime;\n  }\n  set currentTime(val) {\n    this.#currentTime = val;\n    this.loadComplete.then(() => {\n      this.#sendCommand(PlayerCommands.SEEK, val);\n    });\n  }\n  get defaultMuted() {\n    return this.hasAttribute(\"muted\");\n  }\n  set defaultMuted(val) {\n    this.toggleAttribute(\"muted\", Boolean(val));\n  }\n  get loop() {\n    return this.hasAttribute(\"loop\");\n  }\n  set loop(val) {\n    this.toggleAttribute(\"loop\", Boolean(val));\n  }\n  get muted() {\n    return this.#muted;\n  }\n  set muted(val) {\n    this.#muted = val;\n    this.loadComplete.then(() => {\n      this.#sendCommand(PlayerCommands.SET_MUTED, val);\n    });\n  }\n  get volume() {\n    return this.#volume;\n  }\n  set volume(val) {\n    this.#volume = val;\n    this.loadComplete.then(() => {\n      this.#sendCommand(PlayerCommands.SET_VOLUME, val);\n    });\n  }\n  get playsInline() {\n    return this.hasAttribute(\"playsinline\");\n  }\n  set playsInline(val) {\n    this.toggleAttribute(\"playsinline\", Boolean(val));\n  }\n  play() {\n    this.#paused = false;\n    this.#sendCommand(PlayerCommands.PLAY);\n  }\n  pause() {\n    this.#paused = true;\n    this.#sendCommand(PlayerCommands.PAUSE);\n  }\n  #onMessage = async event => {\n    var _a, _b, _c, _d;\n    if (!this.#iframe.contentWindow) return;\n    const {\n      data,\n      source\n    } = event;\n    const isFromEmbedWindow = source === this.#iframe.contentWindow;\n    if (!isFromEmbedWindow) return;\n    if (data.namespace === \"twitch-embed\") {\n      await new Promise(resolve => setTimeout(resolve, 10));\n      if (data.eventName === \"ready\") {\n        this.dispatchEvent(new Event(\"loadcomplete\"));\n        this.loadComplete.resolve();\n        this.#readyState = 1;\n        this.dispatchEvent(new Event(\"loadedmetadata\"));\n      } else if (data.eventName === \"seek\") {\n        this.#seeking = true;\n        this.dispatchEvent(new Event(\"seeking\"));\n      } else if (data.eventName === \"playing\") {\n        if (this.#seeking) {\n          this.#seeking = false;\n          this.dispatchEvent(new Event(\"seeked\"));\n        }\n        this.#readyState = 3;\n        this.dispatchEvent(new Event(\"playing\"));\n      } else {\n        this.dispatchEvent(new Event(data.eventName));\n      }\n    } else if (data.namespace === \"twitch-embed-player-proxy\" && data.eventName === \"UPDATE_STATE\") {\n      const oldDuration = this.#playerState.duration;\n      const oldCurrentTime = this.#playerState.currentTime;\n      const oldVolume = this.#playerState.volume;\n      const oldMuted = this.#playerState.muted;\n      const oldBuffered = (_b = (_a = this.#playerState.stats) == null ? void 0 : _a.videoStats) == null ? void 0 : _b.bufferSize;\n      this.#playerState = {\n        ...this.#playerState,\n        ...data.params\n      };\n      if (oldDuration !== this.#playerState.duration) {\n        this.dispatchEvent(new Event(\"durationchange\"));\n      }\n      if (oldCurrentTime !== this.#playerState.currentTime) {\n        this.dispatchEvent(new Event(\"timeupdate\"));\n      }\n      if (oldVolume !== this.#playerState.volume || oldMuted !== this.#playerState.muted) {\n        this.dispatchEvent(new Event(\"volumechange\"));\n      }\n      if (oldBuffered !== ((_d = (_c = this.#playerState.stats) == null ? void 0 : _c.videoStats) == null ? void 0 : _d.bufferSize)) {\n        this.dispatchEvent(new Event(\"progress\"));\n      }\n    }\n  };\n  #sendCommand(command, params) {\n    if (!this.#iframe.contentWindow) return;\n    const message = {\n      eventName: command,\n      params,\n      namespace: \"twitch-embed-player-proxy\"\n    };\n    this.#iframe.contentWindow.postMessage(message, EMBED_BASE);\n  }\n  // This is a pattern to update property values that are set before\n  // the custom element is upgraded.\n  // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n  #upgradeProperty(prop) {\n    if (Object.prototype.hasOwnProperty.call(this, prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n}\nfunction namedNodeMapToObject(namedNodeMap) {\n  let obj = {};\n  for (let attr of namedNodeMap) {\n    obj[attr.name] = attr.value;\n  }\n  return obj;\n}\nfunction serializeAttributes(attrs) {\n  let html = \"\";\n  for (const key in attrs) {\n    const value = attrs[key];\n    if (value === \"\") html += ` ${escapeHtml(key)}`;else html += ` ${escapeHtml(key)}=\"${escapeHtml(`${value}`)}\"`;\n  }\n  return html;\n}\nfunction escapeHtml(str) {\n  return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\").replace(/`/g, \"&#x60;\");\n}\nfunction serialize(props) {\n  return String(new URLSearchParams(filterParams(props)));\n}\nfunction filterParams(props) {\n  let p = {};\n  for (let key in props) {\n    let val = props[key];\n    if (val === true || val === \"\") p[key] = true;else if (val === false) p[key] = false;else if (val != null) p[key] = val;\n  }\n  return p;\n}\nclass PublicPromise extends Promise {\n  constructor() {\n    let executor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : () => {};\n    let res, rej;\n    super((resolve, reject) => {\n      executor(resolve, reject);\n      res = resolve;\n      rej = reject;\n    });\n    this.resolve = res;\n    this.reject = rej;\n  }\n}\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start == null || end == null || start === 0 && end === 0) {\n    return createTimeRangesObj([[0, 0]]);\n  }\n  return createTimeRangesObj([[start, end]]);\n}\nfunction createTimeRangesObj(ranges) {\n  Object.defineProperties(ranges, {\n    start: {\n      value: i => ranges[i][0]\n    },\n    end: {\n      value: i => ranges[i][1]\n    }\n  });\n  return ranges;\n}\nif (globalThis.customElements && !globalThis.customElements.get(\"twitch-video\")) {\n  globalThis.customElements.define(\"twitch-video\", TwitchVideoElement);\n}\nvar twitch_video_element_default = TwitchVideoElement;\nexport { twitch_video_element_default as default };","map":{"version":3,"names":["EMBED_BASE","MATCH_VIDEO","MATCH_CHANNEL","PlaybackState","IDLE","READY","BUFFERING","PLAYING","ENDED","PlayerCommands","DISABLE_CAPTIONS","ENABLE_CAPTIONS","PAUSE","PLAY","SEEK","SET_CHANNEL","SET_CHANNEL_ID","SET_COLLECTION","SET_QUALITY","SET_VIDEO","SET_MUTED","SET_VOLUME","getTemplateHTML","attrs","props","arguments","length","undefined","iframeAttrs","src","serializeIframeUrl","frameborder","width","height","allow","sandbox","scrolling","config","JSON","stringify","serializeAttributes","_a","videoMatch","match","channelMatch","params","parent","globalThis","location","hostname","controls","autoplay","muted","preload","videoId","serialize","channel","TwitchVideoElement","HTMLElement","shadowRootOptions","mode","observedAttributes","loadComplete","PublicPromise","loadRequested","hasLoaded","iframe","playerState","currentTime","volume","paused","seeking","readyState","constructor","upgradeProperty","value","load","shadowRoot","attachShadow","isFirstLoad","Promise","resolve","dispatchEvent","Event","innerHTML","removeEventListener","onMessage","querySelector","namedNodeMapToObject","attributes","parse","getAttribute","addEventListener","attributeChangedCallback","attrName","oldValue","newValue","setAttribute","buffered","_b","createTimeRanges","stats","videoStats","bufferSize","playback","ended","duration","NaN","hasAttribute","val","toggleAttribute","Boolean","then","sendCommand","defaultMuted","loop","playsInline","play","pause","event","_c","_d","contentWindow","data","source","isFromEmbedWindow","namespace","setTimeout","eventName","oldDuration","oldCurrentTime","oldVolume","oldMuted","oldBuffered","#sendCommand","command","message","postMessage","#upgradeProperty","prop","Object","prototype","hasOwnProperty","call","namedNodeMap","obj","attr","name","html","key","escapeHtml","str","replace","String","URLSearchParams","filterParams","p","executor","res","rej","reject","start","end","Array","isArray","createTimeRangesObj","ranges","defineProperties","i","customElements","get","define","twitch_video_element_default","default"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/twitch-video-element/dist/twitch-video-element.js"],"sourcesContent":["const EMBED_BASE = \"https://player.twitch.tv\";\nconst MATCH_VIDEO = /(?:www\\.|go\\.)?twitch\\.tv\\/(?:videos?\\/|\\?video=)(\\d+)($|\\?)/;\nconst MATCH_CHANNEL = /(?:www\\.|go\\.)?twitch\\.tv\\/([a-zA-Z0-9_]+)($|\\?)/;\nconst PlaybackState = {\n  IDLE: \"Idle\",\n  READY: \"Ready\",\n  BUFFERING: \"Buffering\",\n  PLAYING: \"Playing\",\n  ENDED: \"Ended\"\n};\nconst PlayerCommands = {\n  DISABLE_CAPTIONS: 0,\n  ENABLE_CAPTIONS: 1,\n  PAUSE: 2,\n  PLAY: 3,\n  SEEK: 4,\n  SET_CHANNEL: 5,\n  SET_CHANNEL_ID: 6,\n  SET_COLLECTION: 7,\n  SET_QUALITY: 8,\n  SET_VIDEO: 9,\n  SET_MUTED: 10,\n  SET_VOLUME: 11\n};\nfunction getTemplateHTML(attrs, props = {}) {\n  const iframeAttrs = {\n    src: serializeIframeUrl(attrs, props),\n    frameborder: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    allow: \"accelerometer; fullscreen; autoplay; encrypted-media; picture-in-picture;\",\n    sandbox: \"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox\",\n    scrolling: \"no\"\n  };\n  if (props.config) {\n    iframeAttrs[\"data-config\"] = JSON.stringify(props.config);\n  }\n  return (\n    /*html*/\n    `\n    <style>\n      :host {\n        display: inline-block;\n        min-width: 300px;\n        min-height: 150px;\n        position: relative;\n      }\n      iframe {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n      :host(:not([controls])) {\n        pointer-events: none;\n      }\n    </style>\n    <iframe${serializeAttributes(iframeAttrs)}></iframe>\n  `\n  );\n}\nfunction serializeIframeUrl(attrs, props) {\n  var _a;\n  if (!attrs.src) return;\n  const videoMatch = attrs.src.match(MATCH_VIDEO);\n  const channelMatch = attrs.src.match(MATCH_CHANNEL);\n  const params = {\n    parent: (_a = globalThis.location) == null ? void 0 : _a.hostname,\n    // ?controls=true is enabled by default in the iframe\n    controls: attrs.controls === \"\" ? null : false,\n    autoplay: attrs.autoplay === \"\" ? null : false,\n    muted: attrs.muted,\n    preload: attrs.preload,\n    ...props.config\n  };\n  if (videoMatch) {\n    const videoId = videoMatch[1];\n    return `${EMBED_BASE}/?video=v${videoId}&${serialize(params)}`;\n  } else if (channelMatch) {\n    const channel = channelMatch[1];\n    return `${EMBED_BASE}/?channel=${channel}&${serialize(params)}`;\n  }\n  return \"\";\n}\nclass TwitchVideoElement extends (globalThis.HTMLElement ?? class {\n}) {\n  static getTemplateHTML = getTemplateHTML;\n  static shadowRootOptions = { mode: \"open\" };\n  static observedAttributes = [\"autoplay\", \"controls\", \"loop\", \"muted\", \"playsinline\", \"preload\", \"src\"];\n  loadComplete = new PublicPromise();\n  #loadRequested;\n  #hasLoaded;\n  #iframe;\n  #playerState = {};\n  #currentTime = 0;\n  #muted = false;\n  #volume = 1;\n  #paused = !this.autoplay;\n  #seeking = false;\n  #readyState = 0;\n  #config = null;\n  constructor() {\n    super();\n    this.#upgradeProperty(\"config\");\n  }\n  get config() {\n    return this.#config;\n  }\n  set config(value) {\n    this.#config = value;\n  }\n  async load() {\n    if (this.#loadRequested) return;\n    if (!this.shadowRoot) {\n      this.attachShadow({ mode: \"open\" });\n    }\n    const isFirstLoad = !this.#hasLoaded;\n    if (this.#hasLoaded) {\n      this.loadComplete = new PublicPromise();\n    }\n    this.#hasLoaded = true;\n    await (this.#loadRequested = Promise.resolve());\n    this.#loadRequested = null;\n    this.#readyState = 0;\n    this.dispatchEvent(new Event(\"emptied\"));\n    if (!this.src) {\n      this.shadowRoot.innerHTML = \"\";\n      globalThis.removeEventListener(\"message\", this.#onMessage);\n      return;\n    }\n    this.dispatchEvent(new Event(\"loadstart\"));\n    let iframe = this.shadowRoot.querySelector(\"iframe\");\n    const attrs = namedNodeMapToObject(this.attributes);\n    if (isFirstLoad && iframe) {\n      this.#config = JSON.parse(iframe.getAttribute(\"data-config\") || \"{}\");\n    }\n    if (!(iframe == null ? void 0 : iframe.src) || iframe.src !== serializeIframeUrl(attrs, this)) {\n      this.shadowRoot.innerHTML = getTemplateHTML(attrs, this);\n      iframe = this.shadowRoot.querySelector(\"iframe\");\n    }\n    this.#iframe = iframe;\n    globalThis.addEventListener(\"message\", this.#onMessage);\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    switch (attrName) {\n      case \"src\":\n      case \"controls\": {\n        this.load();\n        break;\n      }\n    }\n  }\n  get src() {\n    return this.getAttribute(\"src\");\n  }\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n  get readyState() {\n    return this.#readyState;\n  }\n  get seeking() {\n    return this.#seeking;\n  }\n  get buffered() {\n    var _a, _b;\n    return createTimeRanges(0, ((_b = (_a = this.#playerState.stats) == null ? void 0 : _a.videoStats) == null ? void 0 : _b.bufferSize) ?? 0);\n  }\n  get paused() {\n    if (!this.#playerState.playback) return this.#paused;\n    return this.#playerState.playback === PlaybackState.IDLE;\n  }\n  get ended() {\n    if (!this.#playerState.playback) return false;\n    return this.#playerState.playback === PlaybackState.ENDED;\n  }\n  get duration() {\n    return this.#playerState.duration ?? NaN;\n  }\n  get autoplay() {\n    return this.hasAttribute(\"autoplay\");\n  }\n  set autoplay(val) {\n    if (this.autoplay == val) return;\n    this.toggleAttribute(\"autoplay\", Boolean(val));\n  }\n  get controls() {\n    return this.hasAttribute(\"controls\");\n  }\n  set controls(val) {\n    if (this.controls == val) return;\n    this.toggleAttribute(\"controls\", Boolean(val));\n  }\n  get currentTime() {\n    if (!this.#playerState.currentTime) return this.#currentTime;\n    return this.#playerState.currentTime;\n  }\n  set currentTime(val) {\n    this.#currentTime = val;\n    this.loadComplete.then(() => {\n      this.#sendCommand(PlayerCommands.SEEK, val);\n    });\n  }\n  get defaultMuted() {\n    return this.hasAttribute(\"muted\");\n  }\n  set defaultMuted(val) {\n    this.toggleAttribute(\"muted\", Boolean(val));\n  }\n  get loop() {\n    return this.hasAttribute(\"loop\");\n  }\n  set loop(val) {\n    this.toggleAttribute(\"loop\", Boolean(val));\n  }\n  get muted() {\n    return this.#muted;\n  }\n  set muted(val) {\n    this.#muted = val;\n    this.loadComplete.then(() => {\n      this.#sendCommand(PlayerCommands.SET_MUTED, val);\n    });\n  }\n  get volume() {\n    return this.#volume;\n  }\n  set volume(val) {\n    this.#volume = val;\n    this.loadComplete.then(() => {\n      this.#sendCommand(PlayerCommands.SET_VOLUME, val);\n    });\n  }\n  get playsInline() {\n    return this.hasAttribute(\"playsinline\");\n  }\n  set playsInline(val) {\n    this.toggleAttribute(\"playsinline\", Boolean(val));\n  }\n  play() {\n    this.#paused = false;\n    this.#sendCommand(PlayerCommands.PLAY);\n  }\n  pause() {\n    this.#paused = true;\n    this.#sendCommand(PlayerCommands.PAUSE);\n  }\n  #onMessage = async (event) => {\n    var _a, _b, _c, _d;\n    if (!this.#iframe.contentWindow) return;\n    const { data, source } = event;\n    const isFromEmbedWindow = source === this.#iframe.contentWindow;\n    if (!isFromEmbedWindow) return;\n    if (data.namespace === \"twitch-embed\") {\n      await new Promise((resolve) => setTimeout(resolve, 10));\n      if (data.eventName === \"ready\") {\n        this.dispatchEvent(new Event(\"loadcomplete\"));\n        this.loadComplete.resolve();\n        this.#readyState = 1;\n        this.dispatchEvent(new Event(\"loadedmetadata\"));\n      } else if (data.eventName === \"seek\") {\n        this.#seeking = true;\n        this.dispatchEvent(new Event(\"seeking\"));\n      } else if (data.eventName === \"playing\") {\n        if (this.#seeking) {\n          this.#seeking = false;\n          this.dispatchEvent(new Event(\"seeked\"));\n        }\n        this.#readyState = 3;\n        this.dispatchEvent(new Event(\"playing\"));\n      } else {\n        this.dispatchEvent(new Event(data.eventName));\n      }\n    } else if (data.namespace === \"twitch-embed-player-proxy\" && data.eventName === \"UPDATE_STATE\") {\n      const oldDuration = this.#playerState.duration;\n      const oldCurrentTime = this.#playerState.currentTime;\n      const oldVolume = this.#playerState.volume;\n      const oldMuted = this.#playerState.muted;\n      const oldBuffered = (_b = (_a = this.#playerState.stats) == null ? void 0 : _a.videoStats) == null ? void 0 : _b.bufferSize;\n      this.#playerState = { ...this.#playerState, ...data.params };\n      if (oldDuration !== this.#playerState.duration) {\n        this.dispatchEvent(new Event(\"durationchange\"));\n      }\n      if (oldCurrentTime !== this.#playerState.currentTime) {\n        this.dispatchEvent(new Event(\"timeupdate\"));\n      }\n      if (oldVolume !== this.#playerState.volume || oldMuted !== this.#playerState.muted) {\n        this.dispatchEvent(new Event(\"volumechange\"));\n      }\n      if (oldBuffered !== ((_d = (_c = this.#playerState.stats) == null ? void 0 : _c.videoStats) == null ? void 0 : _d.bufferSize)) {\n        this.dispatchEvent(new Event(\"progress\"));\n      }\n    }\n  };\n  #sendCommand(command, params) {\n    if (!this.#iframe.contentWindow) return;\n    const message = {\n      eventName: command,\n      params,\n      namespace: \"twitch-embed-player-proxy\"\n    };\n    this.#iframe.contentWindow.postMessage(message, EMBED_BASE);\n  }\n  // This is a pattern to update property values that are set before\n  // the custom element is upgraded.\n  // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n  #upgradeProperty(prop) {\n    if (Object.prototype.hasOwnProperty.call(this, prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n}\nfunction namedNodeMapToObject(namedNodeMap) {\n  let obj = {};\n  for (let attr of namedNodeMap) {\n    obj[attr.name] = attr.value;\n  }\n  return obj;\n}\nfunction serializeAttributes(attrs) {\n  let html = \"\";\n  for (const key in attrs) {\n    const value = attrs[key];\n    if (value === \"\") html += ` ${escapeHtml(key)}`;\n    else html += ` ${escapeHtml(key)}=\"${escapeHtml(`${value}`)}\"`;\n  }\n  return html;\n}\nfunction escapeHtml(str) {\n  return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\").replace(/`/g, \"&#x60;\");\n}\nfunction serialize(props) {\n  return String(new URLSearchParams(filterParams(props)));\n}\nfunction filterParams(props) {\n  let p = {};\n  for (let key in props) {\n    let val = props[key];\n    if (val === true || val === \"\") p[key] = true;\n    else if (val === false) p[key] = false;\n    else if (val != null) p[key] = val;\n  }\n  return p;\n}\nclass PublicPromise extends Promise {\n  constructor(executor = () => {\n  }) {\n    let res, rej;\n    super((resolve, reject) => {\n      executor(resolve, reject);\n      res = resolve;\n      rej = reject;\n    });\n    this.resolve = res;\n    this.reject = rej;\n  }\n}\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start == null || end == null || start === 0 && end === 0) {\n    return createTimeRangesObj([[0, 0]]);\n  }\n  return createTimeRangesObj([[start, end]]);\n}\nfunction createTimeRangesObj(ranges) {\n  Object.defineProperties(ranges, {\n    start: {\n      value: (i) => ranges[i][0]\n    },\n    end: {\n      value: (i) => ranges[i][1]\n    }\n  });\n  return ranges;\n}\nif (globalThis.customElements && !globalThis.customElements.get(\"twitch-video\")) {\n  globalThis.customElements.define(\"twitch-video\", TwitchVideoElement);\n}\nvar twitch_video_element_default = TwitchVideoElement;\nexport {\n  twitch_video_element_default as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}