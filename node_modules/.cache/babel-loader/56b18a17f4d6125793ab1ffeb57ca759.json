{"ast":null,"code":"import { globalThis } from \"./utils/server-safe-globals.js\";\nimport { getStringAttr, namedNodeMapToObject, setStringAttr } from \"./utils/element-utils.js\";\nconst Attributes = {\n  PLACEHOLDER_SRC: \"placeholdersrc\",\n  SRC: \"src\"\n};\nfunction getTemplateHTML(_attrs) {\n  return /*html*/`\n    <style>\n      :host {\n        pointer-events: none;\n        display: var(--media-poster-image-display, inline-block);\n        box-sizing: border-box;\n      }\n\n      img {\n        max-width: 100%;\n        max-height: 100%;\n        min-width: 100%;\n        min-height: 100%;\n        background-repeat: no-repeat;\n        background-position: var(--media-poster-image-background-position, var(--media-object-position, center));\n        background-size: var(--media-poster-image-background-size, var(--media-object-fit, contain));\n        object-fit: var(--media-object-fit, contain);\n        object-position: var(--media-object-position, center);\n      }\n    </style>\n\n    <img part=\"poster img\" aria-hidden=\"true\" id=\"image\"/>\n  `;\n}\nconst unsetBackgroundImage = el => {\n  el.style.removeProperty(\"background-image\");\n};\nconst setBackgroundImage = (el, image) => {\n  el.style[\"background-image\"] = `url('${image}')`;\n};\nclass MediaPosterImage extends globalThis.HTMLElement {\n  static get observedAttributes() {\n    return [Attributes.PLACEHOLDER_SRC, Attributes.SRC];\n  }\n  constructor() {\n    super();\n    if (!this.shadowRoot) {\n      this.attachShadow(this.constructor.shadowRootOptions);\n      const attrs = namedNodeMapToObject(this.attributes);\n      this.shadowRoot.innerHTML = this.constructor.getTemplateHTML(attrs);\n    }\n    this.image = this.shadowRoot.querySelector(\"#image\");\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === Attributes.SRC) {\n      if (newValue == null) {\n        this.image.removeAttribute(Attributes.SRC);\n      } else {\n        this.image.setAttribute(Attributes.SRC, newValue);\n      }\n    }\n    if (attrName === Attributes.PLACEHOLDER_SRC) {\n      if (newValue == null) {\n        unsetBackgroundImage(this.image);\n      } else {\n        setBackgroundImage(this.image, newValue);\n      }\n    }\n  }\n  /**\n   *\n   */\n  get placeholderSrc() {\n    return getStringAttr(this, Attributes.PLACEHOLDER_SRC);\n  }\n  set placeholderSrc(value) {\n    setStringAttr(this, Attributes.SRC, value);\n  }\n  /**\n   *\n   */\n  get src() {\n    return getStringAttr(this, Attributes.SRC);\n  }\n  set src(value) {\n    setStringAttr(this, Attributes.SRC, value);\n  }\n}\nMediaPosterImage.shadowRootOptions = {\n  mode: \"open\"\n};\nMediaPosterImage.getTemplateHTML = getTemplateHTML;\nif (!globalThis.customElements.get(\"media-poster-image\")) {\n  globalThis.customElements.define(\"media-poster-image\", MediaPosterImage);\n}\nvar media_poster_image_default = MediaPosterImage;\nexport { Attributes, media_poster_image_default as default };","map":{"version":3,"names":["globalThis","getStringAttr","namedNodeMapToObject","setStringAttr","Attributes","PLACEHOLDER_SRC","SRC","getTemplateHTML","_attrs","unsetBackgroundImage","el","style","removeProperty","setBackgroundImage","image","MediaPosterImage","HTMLElement","observedAttributes","constructor","shadowRoot","attachShadow","shadowRootOptions","attrs","attributes","innerHTML","querySelector","attributeChangedCallback","attrName","oldValue","newValue","removeAttribute","setAttribute","placeholderSrc","value","src","mode","customElements","get","define","media_poster_image_default","default"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/media-chrome/dist/media-poster-image.js"],"sourcesContent":["import { globalThis } from \"./utils/server-safe-globals.js\";\nimport { getStringAttr, namedNodeMapToObject, setStringAttr } from \"./utils/element-utils.js\";\nconst Attributes = {\n  PLACEHOLDER_SRC: \"placeholdersrc\",\n  SRC: \"src\"\n};\nfunction getTemplateHTML(_attrs) {\n  return (\n    /*html*/\n    `\n    <style>\n      :host {\n        pointer-events: none;\n        display: var(--media-poster-image-display, inline-block);\n        box-sizing: border-box;\n      }\n\n      img {\n        max-width: 100%;\n        max-height: 100%;\n        min-width: 100%;\n        min-height: 100%;\n        background-repeat: no-repeat;\n        background-position: var(--media-poster-image-background-position, var(--media-object-position, center));\n        background-size: var(--media-poster-image-background-size, var(--media-object-fit, contain));\n        object-fit: var(--media-object-fit, contain);\n        object-position: var(--media-object-position, center);\n      }\n    </style>\n\n    <img part=\"poster img\" aria-hidden=\"true\" id=\"image\"/>\n  `\n  );\n}\nconst unsetBackgroundImage = (el) => {\n  el.style.removeProperty(\"background-image\");\n};\nconst setBackgroundImage = (el, image) => {\n  el.style[\"background-image\"] = `url('${image}')`;\n};\nclass MediaPosterImage extends globalThis.HTMLElement {\n  static get observedAttributes() {\n    return [Attributes.PLACEHOLDER_SRC, Attributes.SRC];\n  }\n  constructor() {\n    super();\n    if (!this.shadowRoot) {\n      this.attachShadow(this.constructor.shadowRootOptions);\n      const attrs = namedNodeMapToObject(this.attributes);\n      this.shadowRoot.innerHTML = this.constructor.getTemplateHTML(attrs);\n    }\n    this.image = this.shadowRoot.querySelector(\"#image\");\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === Attributes.SRC) {\n      if (newValue == null) {\n        this.image.removeAttribute(Attributes.SRC);\n      } else {\n        this.image.setAttribute(Attributes.SRC, newValue);\n      }\n    }\n    if (attrName === Attributes.PLACEHOLDER_SRC) {\n      if (newValue == null) {\n        unsetBackgroundImage(this.image);\n      } else {\n        setBackgroundImage(this.image, newValue);\n      }\n    }\n  }\n  /**\n   *\n   */\n  get placeholderSrc() {\n    return getStringAttr(this, Attributes.PLACEHOLDER_SRC);\n  }\n  set placeholderSrc(value) {\n    setStringAttr(this, Attributes.SRC, value);\n  }\n  /**\n   *\n   */\n  get src() {\n    return getStringAttr(this, Attributes.SRC);\n  }\n  set src(value) {\n    setStringAttr(this, Attributes.SRC, value);\n  }\n}\nMediaPosterImage.shadowRootOptions = { mode: \"open\" };\nMediaPosterImage.getTemplateHTML = getTemplateHTML;\nif (!globalThis.customElements.get(\"media-poster-image\")) {\n  globalThis.customElements.define(\"media-poster-image\", MediaPosterImage);\n}\nvar media_poster_image_default = MediaPosterImage;\nexport {\n  Attributes,\n  media_poster_image_default as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}