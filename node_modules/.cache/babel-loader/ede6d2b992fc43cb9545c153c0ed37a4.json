{"ast":null,"code":"import { stateMediator as defaultStateMediator, prepareStateOwners } from \"./state-mediator.js\";\nimport { areValuesEq } from \"./util.js\";\nimport { requestMap as defaultRequestMap } from \"./request-map.js\";\nconst createMediaStore = _ref => {\n  let {\n    media,\n    fullscreenElement,\n    documentElement,\n    stateMediator = defaultStateMediator,\n    requestMap = defaultRequestMap,\n    options = {},\n    monitorStateOwnersOnlyWithSubscriptions = true\n  } = _ref;\n  const callbacks = [];\n  const stateOwners = {\n    // Spreading options here since folks should not rely on holding onto references\n    // for any app-level logic wrt options.\n    options: {\n      ...options\n    }\n  };\n  let state = Object.freeze({\n    mediaPreviewTime: void 0,\n    mediaPreviewImage: void 0,\n    mediaPreviewCoords: void 0,\n    mediaPreviewChapter: void 0\n  });\n  const updateState = nextStateDelta => {\n    if (nextStateDelta == void 0) return;\n    if (areValuesEq(nextStateDelta, state)) {\n      return;\n    }\n    state = Object.freeze({\n      ...state,\n      ...nextStateDelta\n    });\n    callbacks.forEach(cb => cb(state));\n  };\n  const updateStateFromFacade = () => {\n    const nextState = Object.entries(stateMediator).reduce((nextState2, _ref2) => {\n      let [stateName, {\n        get\n      }] = _ref2;\n      nextState2[stateName] = get(stateOwners);\n      return nextState2;\n    }, {});\n    updateState(nextState);\n  };\n  const stateUpdateHandlers = {};\n  let nextStateOwners = void 0;\n  const updateStateOwners = async (nextStateOwnersDelta, nextSubscriberCount) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p;\n    const pendingUpdate = !!nextStateOwners;\n    nextStateOwners = {\n      ...stateOwners,\n      ...(nextStateOwners != null ? nextStateOwners : {}),\n      ...nextStateOwnersDelta\n    };\n    if (pendingUpdate) return;\n    await prepareStateOwners(...Object.values(nextStateOwnersDelta));\n    const shouldTeardownFromSubscriberCount = callbacks.length > 0 && nextSubscriberCount === 0 && monitorStateOwnersOnlyWithSubscriptions;\n    const mediaChanged = stateOwners.media !== nextStateOwners.media;\n    const textTracksChanged = ((_a = stateOwners.media) == null ? void 0 : _a.textTracks) !== ((_b = nextStateOwners.media) == null ? void 0 : _b.textTracks);\n    const videoRenditionsChanged = ((_c = stateOwners.media) == null ? void 0 : _c.videoRenditions) !== ((_d = nextStateOwners.media) == null ? void 0 : _d.videoRenditions);\n    const audioTracksChanged = ((_e = stateOwners.media) == null ? void 0 : _e.audioTracks) !== ((_f = nextStateOwners.media) == null ? void 0 : _f.audioTracks);\n    const remoteChanged = ((_g = stateOwners.media) == null ? void 0 : _g.remote) !== ((_h = nextStateOwners.media) == null ? void 0 : _h.remote);\n    const rootNodeChanged = stateOwners.documentElement !== nextStateOwners.documentElement;\n    const teardownMedia = !!stateOwners.media && (mediaChanged || shouldTeardownFromSubscriberCount);\n    const teardownTextTracks = !!((_i = stateOwners.media) == null ? void 0 : _i.textTracks) && (textTracksChanged || shouldTeardownFromSubscriberCount);\n    const teardownVideoRenditions = !!((_j = stateOwners.media) == null ? void 0 : _j.videoRenditions) && (videoRenditionsChanged || shouldTeardownFromSubscriberCount);\n    const teardownAudioTracks = !!((_k = stateOwners.media) == null ? void 0 : _k.audioTracks) && (audioTracksChanged || shouldTeardownFromSubscriberCount);\n    const teardownRemote = !!((_l = stateOwners.media) == null ? void 0 : _l.remote) && (remoteChanged || shouldTeardownFromSubscriberCount);\n    const teardownRootNode = !!stateOwners.documentElement && (rootNodeChanged || shouldTeardownFromSubscriberCount);\n    const teardownSomething = teardownMedia || teardownTextTracks || teardownVideoRenditions || teardownAudioTracks || teardownRemote || teardownRootNode;\n    const shouldSetupFromSubscriberCount = callbacks.length === 0 && nextSubscriberCount === 1 && monitorStateOwnersOnlyWithSubscriptions;\n    const setupMedia = !!nextStateOwners.media && (mediaChanged || shouldSetupFromSubscriberCount);\n    const setupTextTracks = !!((_m = nextStateOwners.media) == null ? void 0 : _m.textTracks) && (textTracksChanged || shouldSetupFromSubscriberCount);\n    const setupVideoRenditions = !!((_n = nextStateOwners.media) == null ? void 0 : _n.videoRenditions) && (videoRenditionsChanged || shouldSetupFromSubscriberCount);\n    const setupAudioTracks = !!((_o = nextStateOwners.media) == null ? void 0 : _o.audioTracks) && (audioTracksChanged || shouldSetupFromSubscriberCount);\n    const setupRemote = !!((_p = nextStateOwners.media) == null ? void 0 : _p.remote) && (remoteChanged || shouldSetupFromSubscriberCount);\n    const setupRootNode = !!nextStateOwners.documentElement && (rootNodeChanged || shouldSetupFromSubscriberCount);\n    const setupSomething = setupMedia || setupTextTracks || setupVideoRenditions || setupAudioTracks || setupRemote || setupRootNode;\n    const somethingToDo = teardownSomething || setupSomething;\n    if (!somethingToDo) {\n      Object.entries(nextStateOwners).forEach(_ref3 => {\n        let [stateOwnerName, stateOwner] = _ref3;\n        stateOwners[stateOwnerName] = stateOwner;\n      });\n      updateStateFromFacade();\n      nextStateOwners = void 0;\n      return;\n    }\n    Object.entries(stateMediator).forEach(_ref4 => {\n      let [stateName, {\n        get,\n        mediaEvents = [],\n        textTracksEvents = [],\n        videoRenditionsEvents = [],\n        audioTracksEvents = [],\n        remoteEvents = [],\n        rootEvents = [],\n        stateOwnersUpdateHandlers = []\n      }] = _ref4;\n      if (!stateUpdateHandlers[stateName]) {\n        stateUpdateHandlers[stateName] = {};\n      }\n      const handler = event => {\n        const nextValue = get(stateOwners, event);\n        updateState({\n          [stateName]: nextValue\n        });\n      };\n      let prevHandler;\n      prevHandler = stateUpdateHandlers[stateName].mediaEvents;\n      mediaEvents.forEach(eventType => {\n        if (prevHandler && teardownMedia) {\n          stateOwners.media.removeEventListener(eventType, prevHandler);\n          stateUpdateHandlers[stateName].mediaEvents = void 0;\n        }\n        if (setupMedia) {\n          nextStateOwners.media.addEventListener(eventType, handler);\n          stateUpdateHandlers[stateName].mediaEvents = handler;\n        }\n      });\n      prevHandler = stateUpdateHandlers[stateName].textTracksEvents;\n      textTracksEvents.forEach(eventType => {\n        var _a2, _b2;\n        if (prevHandler && teardownTextTracks) {\n          (_a2 = stateOwners.media.textTracks) == null ? void 0 : _a2.removeEventListener(eventType, prevHandler);\n          stateUpdateHandlers[stateName].textTracksEvents = void 0;\n        }\n        if (setupTextTracks) {\n          (_b2 = nextStateOwners.media.textTracks) == null ? void 0 : _b2.addEventListener(eventType, handler);\n          stateUpdateHandlers[stateName].textTracksEvents = handler;\n        }\n      });\n      prevHandler = stateUpdateHandlers[stateName].videoRenditionsEvents;\n      videoRenditionsEvents.forEach(eventType => {\n        var _a2, _b2;\n        if (prevHandler && teardownVideoRenditions) {\n          (_a2 = stateOwners.media.videoRenditions) == null ? void 0 : _a2.removeEventListener(eventType, prevHandler);\n          stateUpdateHandlers[stateName].videoRenditionsEvents = void 0;\n        }\n        if (setupVideoRenditions) {\n          (_b2 = nextStateOwners.media.videoRenditions) == null ? void 0 : _b2.addEventListener(eventType, handler);\n          stateUpdateHandlers[stateName].videoRenditionsEvents = handler;\n        }\n      });\n      prevHandler = stateUpdateHandlers[stateName].audioTracksEvents;\n      audioTracksEvents.forEach(eventType => {\n        var _a2, _b2;\n        if (prevHandler && teardownAudioTracks) {\n          (_a2 = stateOwners.media.audioTracks) == null ? void 0 : _a2.removeEventListener(eventType, prevHandler);\n          stateUpdateHandlers[stateName].audioTracksEvents = void 0;\n        }\n        if (setupAudioTracks) {\n          (_b2 = nextStateOwners.media.audioTracks) == null ? void 0 : _b2.addEventListener(eventType, handler);\n          stateUpdateHandlers[stateName].audioTracksEvents = handler;\n        }\n      });\n      prevHandler = stateUpdateHandlers[stateName].remoteEvents;\n      remoteEvents.forEach(eventType => {\n        var _a2, _b2;\n        if (prevHandler && teardownRemote) {\n          (_a2 = stateOwners.media.remote) == null ? void 0 : _a2.removeEventListener(eventType, prevHandler);\n          stateUpdateHandlers[stateName].remoteEvents = void 0;\n        }\n        if (setupRemote) {\n          (_b2 = nextStateOwners.media.remote) == null ? void 0 : _b2.addEventListener(eventType, handler);\n          stateUpdateHandlers[stateName].remoteEvents = handler;\n        }\n      });\n      prevHandler = stateUpdateHandlers[stateName].rootEvents;\n      rootEvents.forEach(eventType => {\n        if (prevHandler && teardownRootNode) {\n          stateOwners.documentElement.removeEventListener(eventType, prevHandler);\n          stateUpdateHandlers[stateName].rootEvents = void 0;\n        }\n        if (setupRootNode) {\n          nextStateOwners.documentElement.addEventListener(eventType, handler);\n          stateUpdateHandlers[stateName].rootEvents = handler;\n        }\n      });\n      const prevHandlerTeardown = stateUpdateHandlers[stateName].stateOwnersUpdateHandlers;\n      stateOwnersUpdateHandlers.forEach(fn => {\n        if (prevHandlerTeardown && teardownSomething) {\n          prevHandlerTeardown();\n        }\n        if (setupSomething) {\n          stateUpdateHandlers[stateName].stateOwnersUpdateHandlers = fn(handler, nextStateOwners);\n        }\n      });\n    });\n    Object.entries(nextStateOwners).forEach(_ref5 => {\n      let [stateOwnerName, stateOwner] = _ref5;\n      stateOwners[stateOwnerName] = stateOwner;\n    });\n    updateStateFromFacade();\n    nextStateOwners = void 0;\n  };\n  updateStateOwners({\n    media,\n    fullscreenElement,\n    documentElement,\n    options\n  });\n  return {\n    // note that none of these cases directly interact with the media element, root node, full screen element, etc.\n    // note these \"actions\" could just be the events if we wanted, especially if we normalize on \"detail\" for\n    // any payload-relevant values\n    // This is roughly equivalent to our used to be in our state requests dictionary object, though much of the\n    // \"heavy lifting\" is now moved into the facade `set()`\n    dispatch(action) {\n      const {\n        type,\n        detail\n      } = action;\n      if (requestMap[type] && state.mediaErrorCode == null) {\n        updateState(requestMap[type](stateMediator, stateOwners, action));\n        return;\n      }\n      if (type === \"mediaelementchangerequest\") {\n        updateStateOwners({\n          media: detail\n        });\n      } else if (type === \"fullscreenelementchangerequest\") {\n        updateStateOwners({\n          fullscreenElement: detail\n        });\n      } else if (type === \"documentelementchangerequest\") {\n        updateStateOwners({\n          documentElement: detail\n        });\n      } else if (type === \"optionschangerequest\") {\n        Object.entries(detail != null ? detail : {}).forEach(_ref6 => {\n          let [optionName, optionValue] = _ref6;\n          stateOwners.options[optionName] = optionValue;\n        });\n      }\n    },\n    getState() {\n      return state;\n    },\n    subscribe(callback) {\n      updateStateOwners({}, callbacks.length + 1);\n      callbacks.push(callback);\n      callback(state);\n      return () => {\n        const idx = callbacks.indexOf(callback);\n        if (idx >= 0) {\n          updateStateOwners({}, callbacks.length - 1);\n          callbacks.splice(idx, 1);\n        }\n      };\n    }\n  };\n};\nvar media_store_default = createMediaStore;\nexport { createMediaStore, media_store_default as default };","map":{"version":3,"names":["stateMediator","defaultStateMediator","prepareStateOwners","areValuesEq","requestMap","defaultRequestMap","createMediaStore","_ref","media","fullscreenElement","documentElement","options","monitorStateOwnersOnlyWithSubscriptions","callbacks","stateOwners","state","Object","freeze","mediaPreviewTime","mediaPreviewImage","mediaPreviewCoords","mediaPreviewChapter","updateState","nextStateDelta","forEach","cb","updateStateFromFacade","nextState","entries","reduce","nextState2","_ref2","stateName","get","stateUpdateHandlers","nextStateOwners","updateStateOwners","nextStateOwnersDelta","nextSubscriberCount","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","pendingUpdate","values","shouldTeardownFromSubscriberCount","length","mediaChanged","textTracksChanged","textTracks","videoRenditionsChanged","videoRenditions","audioTracksChanged","audioTracks","remoteChanged","remote","rootNodeChanged","teardownMedia","teardownTextTracks","teardownVideoRenditions","teardownAudioTracks","teardownRemote","teardownRootNode","teardownSomething","shouldSetupFromSubscriberCount","setupMedia","setupTextTracks","setupVideoRenditions","setupAudioTracks","setupRemote","setupRootNode","setupSomething","somethingToDo","_ref3","stateOwnerName","stateOwner","_ref4","mediaEvents","textTracksEvents","videoRenditionsEvents","audioTracksEvents","remoteEvents","rootEvents","stateOwnersUpdateHandlers","handler","event","nextValue","prevHandler","eventType","removeEventListener","addEventListener","_a2","_b2","prevHandlerTeardown","fn","_ref5","dispatch","action","type","detail","mediaErrorCode","_ref6","optionName","optionValue","getState","subscribe","callback","push","idx","indexOf","splice","media_store_default","default"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/media-chrome/dist/media-store/media-store.js"],"sourcesContent":["import {\n  stateMediator as defaultStateMediator,\n  prepareStateOwners\n} from \"./state-mediator.js\";\nimport { areValuesEq } from \"./util.js\";\nimport { requestMap as defaultRequestMap } from \"./request-map.js\";\nconst createMediaStore = ({\n  media,\n  fullscreenElement,\n  documentElement,\n  stateMediator = defaultStateMediator,\n  requestMap = defaultRequestMap,\n  options = {},\n  monitorStateOwnersOnlyWithSubscriptions = true\n}) => {\n  const callbacks = [];\n  const stateOwners = {\n    // Spreading options here since folks should not rely on holding onto references\n    // for any app-level logic wrt options.\n    options: { ...options }\n  };\n  let state = Object.freeze({\n    mediaPreviewTime: void 0,\n    mediaPreviewImage: void 0,\n    mediaPreviewCoords: void 0,\n    mediaPreviewChapter: void 0\n  });\n  const updateState = (nextStateDelta) => {\n    if (nextStateDelta == void 0)\n      return;\n    if (areValuesEq(nextStateDelta, state)) {\n      return;\n    }\n    state = Object.freeze({\n      ...state,\n      ...nextStateDelta\n    });\n    callbacks.forEach((cb) => cb(state));\n  };\n  const updateStateFromFacade = () => {\n    const nextState = Object.entries(stateMediator).reduce(\n      (nextState2, [stateName, { get }]) => {\n        nextState2[stateName] = get(stateOwners);\n        return nextState2;\n      },\n      {}\n    );\n    updateState(nextState);\n  };\n  const stateUpdateHandlers = {};\n  let nextStateOwners = void 0;\n  const updateStateOwners = async (nextStateOwnersDelta, nextSubscriberCount) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p;\n    const pendingUpdate = !!nextStateOwners;\n    nextStateOwners = {\n      ...stateOwners,\n      ...nextStateOwners != null ? nextStateOwners : {},\n      ...nextStateOwnersDelta\n    };\n    if (pendingUpdate)\n      return;\n    await prepareStateOwners(...Object.values(nextStateOwnersDelta));\n    const shouldTeardownFromSubscriberCount = callbacks.length > 0 && nextSubscriberCount === 0 && monitorStateOwnersOnlyWithSubscriptions;\n    const mediaChanged = stateOwners.media !== nextStateOwners.media;\n    const textTracksChanged = ((_a = stateOwners.media) == null ? void 0 : _a.textTracks) !== ((_b = nextStateOwners.media) == null ? void 0 : _b.textTracks);\n    const videoRenditionsChanged = ((_c = stateOwners.media) == null ? void 0 : _c.videoRenditions) !== ((_d = nextStateOwners.media) == null ? void 0 : _d.videoRenditions);\n    const audioTracksChanged = ((_e = stateOwners.media) == null ? void 0 : _e.audioTracks) !== ((_f = nextStateOwners.media) == null ? void 0 : _f.audioTracks);\n    const remoteChanged = ((_g = stateOwners.media) == null ? void 0 : _g.remote) !== ((_h = nextStateOwners.media) == null ? void 0 : _h.remote);\n    const rootNodeChanged = stateOwners.documentElement !== nextStateOwners.documentElement;\n    const teardownMedia = !!stateOwners.media && (mediaChanged || shouldTeardownFromSubscriberCount);\n    const teardownTextTracks = !!((_i = stateOwners.media) == null ? void 0 : _i.textTracks) && (textTracksChanged || shouldTeardownFromSubscriberCount);\n    const teardownVideoRenditions = !!((_j = stateOwners.media) == null ? void 0 : _j.videoRenditions) && (videoRenditionsChanged || shouldTeardownFromSubscriberCount);\n    const teardownAudioTracks = !!((_k = stateOwners.media) == null ? void 0 : _k.audioTracks) && (audioTracksChanged || shouldTeardownFromSubscriberCount);\n    const teardownRemote = !!((_l = stateOwners.media) == null ? void 0 : _l.remote) && (remoteChanged || shouldTeardownFromSubscriberCount);\n    const teardownRootNode = !!stateOwners.documentElement && (rootNodeChanged || shouldTeardownFromSubscriberCount);\n    const teardownSomething = teardownMedia || teardownTextTracks || teardownVideoRenditions || teardownAudioTracks || teardownRemote || teardownRootNode;\n    const shouldSetupFromSubscriberCount = callbacks.length === 0 && nextSubscriberCount === 1 && monitorStateOwnersOnlyWithSubscriptions;\n    const setupMedia = !!nextStateOwners.media && (mediaChanged || shouldSetupFromSubscriberCount);\n    const setupTextTracks = !!((_m = nextStateOwners.media) == null ? void 0 : _m.textTracks) && (textTracksChanged || shouldSetupFromSubscriberCount);\n    const setupVideoRenditions = !!((_n = nextStateOwners.media) == null ? void 0 : _n.videoRenditions) && (videoRenditionsChanged || shouldSetupFromSubscriberCount);\n    const setupAudioTracks = !!((_o = nextStateOwners.media) == null ? void 0 : _o.audioTracks) && (audioTracksChanged || shouldSetupFromSubscriberCount);\n    const setupRemote = !!((_p = nextStateOwners.media) == null ? void 0 : _p.remote) && (remoteChanged || shouldSetupFromSubscriberCount);\n    const setupRootNode = !!nextStateOwners.documentElement && (rootNodeChanged || shouldSetupFromSubscriberCount);\n    const setupSomething = setupMedia || setupTextTracks || setupVideoRenditions || setupAudioTracks || setupRemote || setupRootNode;\n    const somethingToDo = teardownSomething || setupSomething;\n    if (!somethingToDo) {\n      Object.entries(nextStateOwners).forEach(\n        ([stateOwnerName, stateOwner]) => {\n          stateOwners[stateOwnerName] = stateOwner;\n        }\n      );\n      updateStateFromFacade();\n      nextStateOwners = void 0;\n      return;\n    }\n    Object.entries(stateMediator).forEach(\n      ([\n        stateName,\n        {\n          get,\n          mediaEvents = [],\n          textTracksEvents = [],\n          videoRenditionsEvents = [],\n          audioTracksEvents = [],\n          remoteEvents = [],\n          rootEvents = [],\n          stateOwnersUpdateHandlers = []\n        }\n      ]) => {\n        if (!stateUpdateHandlers[stateName]) {\n          stateUpdateHandlers[stateName] = {};\n        }\n        const handler = (event) => {\n          const nextValue = get(stateOwners, event);\n          updateState({ [stateName]: nextValue });\n        };\n        let prevHandler;\n        prevHandler = stateUpdateHandlers[stateName].mediaEvents;\n        mediaEvents.forEach((eventType) => {\n          if (prevHandler && teardownMedia) {\n            stateOwners.media.removeEventListener(eventType, prevHandler);\n            stateUpdateHandlers[stateName].mediaEvents = void 0;\n          }\n          if (setupMedia) {\n            nextStateOwners.media.addEventListener(eventType, handler);\n            stateUpdateHandlers[stateName].mediaEvents = handler;\n          }\n        });\n        prevHandler = stateUpdateHandlers[stateName].textTracksEvents;\n        textTracksEvents.forEach((eventType) => {\n          var _a2, _b2;\n          if (prevHandler && teardownTextTracks) {\n            (_a2 = stateOwners.media.textTracks) == null ? void 0 : _a2.removeEventListener(\n              eventType,\n              prevHandler\n            );\n            stateUpdateHandlers[stateName].textTracksEvents = void 0;\n          }\n          if (setupTextTracks) {\n            (_b2 = nextStateOwners.media.textTracks) == null ? void 0 : _b2.addEventListener(\n              eventType,\n              handler\n            );\n            stateUpdateHandlers[stateName].textTracksEvents = handler;\n          }\n        });\n        prevHandler = stateUpdateHandlers[stateName].videoRenditionsEvents;\n        videoRenditionsEvents.forEach((eventType) => {\n          var _a2, _b2;\n          if (prevHandler && teardownVideoRenditions) {\n            (_a2 = stateOwners.media.videoRenditions) == null ? void 0 : _a2.removeEventListener(\n              eventType,\n              prevHandler\n            );\n            stateUpdateHandlers[stateName].videoRenditionsEvents = void 0;\n          }\n          if (setupVideoRenditions) {\n            (_b2 = nextStateOwners.media.videoRenditions) == null ? void 0 : _b2.addEventListener(\n              eventType,\n              handler\n            );\n            stateUpdateHandlers[stateName].videoRenditionsEvents = handler;\n          }\n        });\n        prevHandler = stateUpdateHandlers[stateName].audioTracksEvents;\n        audioTracksEvents.forEach((eventType) => {\n          var _a2, _b2;\n          if (prevHandler && teardownAudioTracks) {\n            (_a2 = stateOwners.media.audioTracks) == null ? void 0 : _a2.removeEventListener(\n              eventType,\n              prevHandler\n            );\n            stateUpdateHandlers[stateName].audioTracksEvents = void 0;\n          }\n          if (setupAudioTracks) {\n            (_b2 = nextStateOwners.media.audioTracks) == null ? void 0 : _b2.addEventListener(\n              eventType,\n              handler\n            );\n            stateUpdateHandlers[stateName].audioTracksEvents = handler;\n          }\n        });\n        prevHandler = stateUpdateHandlers[stateName].remoteEvents;\n        remoteEvents.forEach((eventType) => {\n          var _a2, _b2;\n          if (prevHandler && teardownRemote) {\n            (_a2 = stateOwners.media.remote) == null ? void 0 : _a2.removeEventListener(\n              eventType,\n              prevHandler\n            );\n            stateUpdateHandlers[stateName].remoteEvents = void 0;\n          }\n          if (setupRemote) {\n            (_b2 = nextStateOwners.media.remote) == null ? void 0 : _b2.addEventListener(eventType, handler);\n            stateUpdateHandlers[stateName].remoteEvents = handler;\n          }\n        });\n        prevHandler = stateUpdateHandlers[stateName].rootEvents;\n        rootEvents.forEach((eventType) => {\n          if (prevHandler && teardownRootNode) {\n            stateOwners.documentElement.removeEventListener(\n              eventType,\n              prevHandler\n            );\n            stateUpdateHandlers[stateName].rootEvents = void 0;\n          }\n          if (setupRootNode) {\n            nextStateOwners.documentElement.addEventListener(\n              eventType,\n              handler\n            );\n            stateUpdateHandlers[stateName].rootEvents = handler;\n          }\n        });\n        const prevHandlerTeardown = stateUpdateHandlers[stateName].stateOwnersUpdateHandlers;\n        stateOwnersUpdateHandlers.forEach((fn) => {\n          if (prevHandlerTeardown && teardownSomething) {\n            prevHandlerTeardown();\n          }\n          if (setupSomething) {\n            stateUpdateHandlers[stateName].stateOwnersUpdateHandlers = fn(\n              handler,\n              nextStateOwners\n            );\n          }\n        });\n      }\n    );\n    Object.entries(nextStateOwners).forEach(([stateOwnerName, stateOwner]) => {\n      stateOwners[stateOwnerName] = stateOwner;\n    });\n    updateStateFromFacade();\n    nextStateOwners = void 0;\n  };\n  updateStateOwners({ media, fullscreenElement, documentElement, options });\n  return {\n    // note that none of these cases directly interact with the media element, root node, full screen element, etc.\n    // note these \"actions\" could just be the events if we wanted, especially if we normalize on \"detail\" for\n    // any payload-relevant values\n    // This is roughly equivalent to our used to be in our state requests dictionary object, though much of the\n    // \"heavy lifting\" is now moved into the facade `set()`\n    dispatch(action) {\n      const { type, detail } = action;\n      if (requestMap[type] && state.mediaErrorCode == null) {\n        updateState(requestMap[type](stateMediator, stateOwners, action));\n        return;\n      }\n      if (type === \"mediaelementchangerequest\") {\n        updateStateOwners({ media: detail });\n      } else if (type === \"fullscreenelementchangerequest\") {\n        updateStateOwners({ fullscreenElement: detail });\n      } else if (type === \"documentelementchangerequest\") {\n        updateStateOwners({ documentElement: detail });\n      } else if (type === \"optionschangerequest\") {\n        Object.entries(detail != null ? detail : {}).forEach(([optionName, optionValue]) => {\n          stateOwners.options[optionName] = optionValue;\n        });\n      }\n    },\n    getState() {\n      return state;\n    },\n    subscribe(callback) {\n      updateStateOwners({}, callbacks.length + 1);\n      callbacks.push(callback);\n      callback(state);\n      return () => {\n        const idx = callbacks.indexOf(callback);\n        if (idx >= 0) {\n          updateStateOwners({}, callbacks.length - 1);\n          callbacks.splice(idx, 1);\n        }\n      };\n    }\n  };\n};\nvar media_store_default = createMediaStore;\nexport {\n  createMediaStore,\n  media_store_default as default\n};\n"],"mappings":"AAAA,SACEA,aAAa,IAAIC,oBAAoB,EACrCC,kBAAkB,QACb,qBAAqB;AAC5B,SAASC,WAAW,QAAQ,WAAW;AACvC,SAASC,UAAU,IAAIC,iBAAiB,QAAQ,kBAAkB;AAClE,MAAMC,gBAAgB,GAAGC,IAAA,IAQnB;EAAA,IARoB;IACxBC,KAAK;IACLC,iBAAiB;IACjBC,eAAe;IACfV,aAAa,GAAGC,oBAAoB;IACpCG,UAAU,GAAGC,iBAAiB;IAC9BM,OAAO,GAAG,CAAC,CAAC;IACZC,uCAAuC,GAAG;EAC5C,CAAC,GAAAL,IAAA;EACC,MAAMM,SAAS,GAAG,EAAE;EACpB,MAAMC,WAAW,GAAG;IAClB;IACA;IACAH,OAAO,EAAE;MAAE,GAAGA;IAAQ;EACxB,CAAC;EACD,IAAII,KAAK,GAAGC,MAAM,CAACC,MAAM,CAAC;IACxBC,gBAAgB,EAAE,KAAK,CAAC;IACxBC,iBAAiB,EAAE,KAAK,CAAC;IACzBC,kBAAkB,EAAE,KAAK,CAAC;IAC1BC,mBAAmB,EAAE,KAAK;EAC5B,CAAC,CAAC;EACF,MAAMC,WAAW,GAAIC,cAAc,IAAK;IACtC,IAAIA,cAAc,IAAI,KAAK,CAAC,EAC1B;IACF,IAAIpB,WAAW,CAACoB,cAAc,EAAER,KAAK,CAAC,EAAE;MACtC;IACF;IACAA,KAAK,GAAGC,MAAM,CAACC,MAAM,CAAC;MACpB,GAAGF,KAAK;MACR,GAAGQ;IACL,CAAC,CAAC;IACFV,SAAS,CAACW,OAAO,CAAEC,EAAE,IAAKA,EAAE,CAACV,KAAK,CAAC,CAAC;EACtC,CAAC;EACD,MAAMW,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,SAAS,GAAGX,MAAM,CAACY,OAAO,CAAC5B,aAAa,CAAC,CAAC6B,MAAM,CACpD,CAACC,UAAU,EAAAC,KAAA,KAA2B;MAAA,IAAzB,CAACC,SAAS,EAAE;QAAEC;MAAI,CAAC,CAAC,GAAAF,KAAA;MAC/BD,UAAU,CAACE,SAAS,CAAC,GAAGC,GAAG,CAACnB,WAAW,CAAC;MACxC,OAAOgB,UAAU;IACnB,CAAC,EACD,CAAC,CACH,CAAC;IACDR,WAAW,CAACK,SAAS,CAAC;EACxB,CAAC;EACD,MAAMO,mBAAmB,GAAG,CAAC,CAAC;EAC9B,IAAIC,eAAe,GAAG,KAAK,CAAC;EAC5B,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,oBAAoB,EAAEC,mBAAmB,KAAK;IAC7E,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;IAClE,MAAMC,aAAa,GAAG,CAAC,CAACpB,eAAe;IACvCA,eAAe,GAAG;MAChB,GAAGrB,WAAW;MACd,IAAGqB,eAAe,IAAI,IAAI,GAAGA,eAAe,GAAG,CAAC,CAAC;MACjD,GAAGE;IACL,CAAC;IACD,IAAIkB,aAAa,EACf;IACF,MAAMrD,kBAAkB,CAAC,GAAGc,MAAM,CAACwC,MAAM,CAACnB,oBAAoB,CAAC,CAAC;IAChE,MAAMoB,iCAAiC,GAAG5C,SAAS,CAAC6C,MAAM,GAAG,CAAC,IAAIpB,mBAAmB,KAAK,CAAC,IAAI1B,uCAAuC;IACtI,MAAM+C,YAAY,GAAG7C,WAAW,CAACN,KAAK,KAAK2B,eAAe,CAAC3B,KAAK;IAChE,MAAMoD,iBAAiB,GAAG,CAAC,CAACrB,EAAE,GAAGzB,WAAW,CAACN,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG+B,EAAE,CAACsB,UAAU,OAAO,CAACrB,EAAE,GAAGL,eAAe,CAAC3B,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGgC,EAAE,CAACqB,UAAU,CAAC;IACzJ,MAAMC,sBAAsB,GAAG,CAAC,CAACrB,EAAE,GAAG3B,WAAW,CAACN,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGiC,EAAE,CAACsB,eAAe,OAAO,CAACrB,EAAE,GAAGP,eAAe,CAAC3B,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGkC,EAAE,CAACqB,eAAe,CAAC;IACxK,MAAMC,kBAAkB,GAAG,CAAC,CAACrB,EAAE,GAAG7B,WAAW,CAACN,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGmC,EAAE,CAACsB,WAAW,OAAO,CAACrB,EAAE,GAAGT,eAAe,CAAC3B,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGoC,EAAE,CAACqB,WAAW,CAAC;IAC5J,MAAMC,aAAa,GAAG,CAAC,CAACrB,EAAE,GAAG/B,WAAW,CAACN,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGqC,EAAE,CAACsB,MAAM,OAAO,CAACrB,EAAE,GAAGX,eAAe,CAAC3B,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGsC,EAAE,CAACqB,MAAM,CAAC;IAC7I,MAAMC,eAAe,GAAGtD,WAAW,CAACJ,eAAe,KAAKyB,eAAe,CAACzB,eAAe;IACvF,MAAM2D,aAAa,GAAG,CAAC,CAACvD,WAAW,CAACN,KAAK,KAAKmD,YAAY,IAAIF,iCAAiC,CAAC;IAChG,MAAMa,kBAAkB,GAAG,CAAC,EAAE,CAACvB,EAAE,GAAGjC,WAAW,CAACN,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGuC,EAAE,CAACc,UAAU,CAAC,KAAKD,iBAAiB,IAAIH,iCAAiC,CAAC;IACpJ,MAAMc,uBAAuB,GAAG,CAAC,EAAE,CAACvB,EAAE,GAAGlC,WAAW,CAACN,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGwC,EAAE,CAACe,eAAe,CAAC,KAAKD,sBAAsB,IAAIL,iCAAiC,CAAC;IACnK,MAAMe,mBAAmB,GAAG,CAAC,EAAE,CAACvB,EAAE,GAAGnC,WAAW,CAACN,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGyC,EAAE,CAACgB,WAAW,CAAC,KAAKD,kBAAkB,IAAIP,iCAAiC,CAAC;IACvJ,MAAMgB,cAAc,GAAG,CAAC,EAAE,CAACvB,EAAE,GAAGpC,WAAW,CAACN,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG0C,EAAE,CAACiB,MAAM,CAAC,KAAKD,aAAa,IAAIT,iCAAiC,CAAC;IACxI,MAAMiB,gBAAgB,GAAG,CAAC,CAAC5D,WAAW,CAACJ,eAAe,KAAK0D,eAAe,IAAIX,iCAAiC,CAAC;IAChH,MAAMkB,iBAAiB,GAAGN,aAAa,IAAIC,kBAAkB,IAAIC,uBAAuB,IAAIC,mBAAmB,IAAIC,cAAc,IAAIC,gBAAgB;IACrJ,MAAME,8BAA8B,GAAG/D,SAAS,CAAC6C,MAAM,KAAK,CAAC,IAAIpB,mBAAmB,KAAK,CAAC,IAAI1B,uCAAuC;IACrI,MAAMiE,UAAU,GAAG,CAAC,CAAC1C,eAAe,CAAC3B,KAAK,KAAKmD,YAAY,IAAIiB,8BAA8B,CAAC;IAC9F,MAAME,eAAe,GAAG,CAAC,EAAE,CAAC3B,EAAE,GAAGhB,eAAe,CAAC3B,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG2C,EAAE,CAACU,UAAU,CAAC,KAAKD,iBAAiB,IAAIgB,8BAA8B,CAAC;IAClJ,MAAMG,oBAAoB,GAAG,CAAC,EAAE,CAAC3B,EAAE,GAAGjB,eAAe,CAAC3B,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG4C,EAAE,CAACW,eAAe,CAAC,KAAKD,sBAAsB,IAAIc,8BAA8B,CAAC;IACjK,MAAMI,gBAAgB,GAAG,CAAC,EAAE,CAAC3B,EAAE,GAAGlB,eAAe,CAAC3B,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG6C,EAAE,CAACY,WAAW,CAAC,KAAKD,kBAAkB,IAAIY,8BAA8B,CAAC;IACrJ,MAAMK,WAAW,GAAG,CAAC,EAAE,CAAC3B,EAAE,GAAGnB,eAAe,CAAC3B,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG8C,EAAE,CAACa,MAAM,CAAC,KAAKD,aAAa,IAAIU,8BAA8B,CAAC;IACtI,MAAMM,aAAa,GAAG,CAAC,CAAC/C,eAAe,CAACzB,eAAe,KAAK0D,eAAe,IAAIQ,8BAA8B,CAAC;IAC9G,MAAMO,cAAc,GAAGN,UAAU,IAAIC,eAAe,IAAIC,oBAAoB,IAAIC,gBAAgB,IAAIC,WAAW,IAAIC,aAAa;IAChI,MAAME,aAAa,GAAGT,iBAAiB,IAAIQ,cAAc;IACzD,IAAI,CAACC,aAAa,EAAE;MAClBpE,MAAM,CAACY,OAAO,CAACO,eAAe,CAAC,CAACX,OAAO,CACrC6D,KAAA,IAAkC;QAAA,IAAjC,CAACC,cAAc,EAAEC,UAAU,CAAC,GAAAF,KAAA;QAC3BvE,WAAW,CAACwE,cAAc,CAAC,GAAGC,UAAU;MAC1C,CACF,CAAC;MACD7D,qBAAqB,CAAC,CAAC;MACvBS,eAAe,GAAG,KAAK,CAAC;MACxB;IACF;IACAnB,MAAM,CAACY,OAAO,CAAC5B,aAAa,CAAC,CAACwB,OAAO,CACnCgE,KAAA,IAYM;MAAA,IAZL,CACCxD,SAAS,EACT;QACEC,GAAG;QACHwD,WAAW,GAAG,EAAE;QAChBC,gBAAgB,GAAG,EAAE;QACrBC,qBAAqB,GAAG,EAAE;QAC1BC,iBAAiB,GAAG,EAAE;QACtBC,YAAY,GAAG,EAAE;QACjBC,UAAU,GAAG,EAAE;QACfC,yBAAyB,GAAG;MAC9B,CAAC,CACF,GAAAP,KAAA;MACC,IAAI,CAACtD,mBAAmB,CAACF,SAAS,CAAC,EAAE;QACnCE,mBAAmB,CAACF,SAAS,CAAC,GAAG,CAAC,CAAC;MACrC;MACA,MAAMgE,OAAO,GAAIC,KAAK,IAAK;QACzB,MAAMC,SAAS,GAAGjE,GAAG,CAACnB,WAAW,EAAEmF,KAAK,CAAC;QACzC3E,WAAW,CAAC;UAAE,CAACU,SAAS,GAAGkE;QAAU,CAAC,CAAC;MACzC,CAAC;MACD,IAAIC,WAAW;MACfA,WAAW,GAAGjE,mBAAmB,CAACF,SAAS,CAAC,CAACyD,WAAW;MACxDA,WAAW,CAACjE,OAAO,CAAE4E,SAAS,IAAK;QACjC,IAAID,WAAW,IAAI9B,aAAa,EAAE;UAChCvD,WAAW,CAACN,KAAK,CAAC6F,mBAAmB,CAACD,SAAS,EAAED,WAAW,CAAC;UAC7DjE,mBAAmB,CAACF,SAAS,CAAC,CAACyD,WAAW,GAAG,KAAK,CAAC;QACrD;QACA,IAAIZ,UAAU,EAAE;UACd1C,eAAe,CAAC3B,KAAK,CAAC8F,gBAAgB,CAACF,SAAS,EAAEJ,OAAO,CAAC;UAC1D9D,mBAAmB,CAACF,SAAS,CAAC,CAACyD,WAAW,GAAGO,OAAO;QACtD;MACF,CAAC,CAAC;MACFG,WAAW,GAAGjE,mBAAmB,CAACF,SAAS,CAAC,CAAC0D,gBAAgB;MAC7DA,gBAAgB,CAAClE,OAAO,CAAE4E,SAAS,IAAK;QACtC,IAAIG,GAAG,EAAEC,GAAG;QACZ,IAAIL,WAAW,IAAI7B,kBAAkB,EAAE;UACrC,CAACiC,GAAG,GAAGzF,WAAW,CAACN,KAAK,CAACqD,UAAU,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG0C,GAAG,CAACF,mBAAmB,CAC7ED,SAAS,EACTD,WACF,CAAC;UACDjE,mBAAmB,CAACF,SAAS,CAAC,CAAC0D,gBAAgB,GAAG,KAAK,CAAC;QAC1D;QACA,IAAIZ,eAAe,EAAE;UACnB,CAAC0B,GAAG,GAAGrE,eAAe,CAAC3B,KAAK,CAACqD,UAAU,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG2C,GAAG,CAACF,gBAAgB,CAC9EF,SAAS,EACTJ,OACF,CAAC;UACD9D,mBAAmB,CAACF,SAAS,CAAC,CAAC0D,gBAAgB,GAAGM,OAAO;QAC3D;MACF,CAAC,CAAC;MACFG,WAAW,GAAGjE,mBAAmB,CAACF,SAAS,CAAC,CAAC2D,qBAAqB;MAClEA,qBAAqB,CAACnE,OAAO,CAAE4E,SAAS,IAAK;QAC3C,IAAIG,GAAG,EAAEC,GAAG;QACZ,IAAIL,WAAW,IAAI5B,uBAAuB,EAAE;UAC1C,CAACgC,GAAG,GAAGzF,WAAW,CAACN,KAAK,CAACuD,eAAe,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGwC,GAAG,CAACF,mBAAmB,CAClFD,SAAS,EACTD,WACF,CAAC;UACDjE,mBAAmB,CAACF,SAAS,CAAC,CAAC2D,qBAAqB,GAAG,KAAK,CAAC;QAC/D;QACA,IAAIZ,oBAAoB,EAAE;UACxB,CAACyB,GAAG,GAAGrE,eAAe,CAAC3B,KAAK,CAACuD,eAAe,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGyC,GAAG,CAACF,gBAAgB,CACnFF,SAAS,EACTJ,OACF,CAAC;UACD9D,mBAAmB,CAACF,SAAS,CAAC,CAAC2D,qBAAqB,GAAGK,OAAO;QAChE;MACF,CAAC,CAAC;MACFG,WAAW,GAAGjE,mBAAmB,CAACF,SAAS,CAAC,CAAC4D,iBAAiB;MAC9DA,iBAAiB,CAACpE,OAAO,CAAE4E,SAAS,IAAK;QACvC,IAAIG,GAAG,EAAEC,GAAG;QACZ,IAAIL,WAAW,IAAI3B,mBAAmB,EAAE;UACtC,CAAC+B,GAAG,GAAGzF,WAAW,CAACN,KAAK,CAACyD,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGsC,GAAG,CAACF,mBAAmB,CAC9ED,SAAS,EACTD,WACF,CAAC;UACDjE,mBAAmB,CAACF,SAAS,CAAC,CAAC4D,iBAAiB,GAAG,KAAK,CAAC;QAC3D;QACA,IAAIZ,gBAAgB,EAAE;UACpB,CAACwB,GAAG,GAAGrE,eAAe,CAAC3B,KAAK,CAACyD,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGuC,GAAG,CAACF,gBAAgB,CAC/EF,SAAS,EACTJ,OACF,CAAC;UACD9D,mBAAmB,CAACF,SAAS,CAAC,CAAC4D,iBAAiB,GAAGI,OAAO;QAC5D;MACF,CAAC,CAAC;MACFG,WAAW,GAAGjE,mBAAmB,CAACF,SAAS,CAAC,CAAC6D,YAAY;MACzDA,YAAY,CAACrE,OAAO,CAAE4E,SAAS,IAAK;QAClC,IAAIG,GAAG,EAAEC,GAAG;QACZ,IAAIL,WAAW,IAAI1B,cAAc,EAAE;UACjC,CAAC8B,GAAG,GAAGzF,WAAW,CAACN,KAAK,CAAC2D,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGoC,GAAG,CAACF,mBAAmB,CACzED,SAAS,EACTD,WACF,CAAC;UACDjE,mBAAmB,CAACF,SAAS,CAAC,CAAC6D,YAAY,GAAG,KAAK,CAAC;QACtD;QACA,IAAIZ,WAAW,EAAE;UACf,CAACuB,GAAG,GAAGrE,eAAe,CAAC3B,KAAK,CAAC2D,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGqC,GAAG,CAACF,gBAAgB,CAACF,SAAS,EAAEJ,OAAO,CAAC;UAChG9D,mBAAmB,CAACF,SAAS,CAAC,CAAC6D,YAAY,GAAGG,OAAO;QACvD;MACF,CAAC,CAAC;MACFG,WAAW,GAAGjE,mBAAmB,CAACF,SAAS,CAAC,CAAC8D,UAAU;MACvDA,UAAU,CAACtE,OAAO,CAAE4E,SAAS,IAAK;QAChC,IAAID,WAAW,IAAIzB,gBAAgB,EAAE;UACnC5D,WAAW,CAACJ,eAAe,CAAC2F,mBAAmB,CAC7CD,SAAS,EACTD,WACF,CAAC;UACDjE,mBAAmB,CAACF,SAAS,CAAC,CAAC8D,UAAU,GAAG,KAAK,CAAC;QACpD;QACA,IAAIZ,aAAa,EAAE;UACjB/C,eAAe,CAACzB,eAAe,CAAC4F,gBAAgB,CAC9CF,SAAS,EACTJ,OACF,CAAC;UACD9D,mBAAmB,CAACF,SAAS,CAAC,CAAC8D,UAAU,GAAGE,OAAO;QACrD;MACF,CAAC,CAAC;MACF,MAAMS,mBAAmB,GAAGvE,mBAAmB,CAACF,SAAS,CAAC,CAAC+D,yBAAyB;MACpFA,yBAAyB,CAACvE,OAAO,CAAEkF,EAAE,IAAK;QACxC,IAAID,mBAAmB,IAAI9B,iBAAiB,EAAE;UAC5C8B,mBAAmB,CAAC,CAAC;QACvB;QACA,IAAItB,cAAc,EAAE;UAClBjD,mBAAmB,CAACF,SAAS,CAAC,CAAC+D,yBAAyB,GAAGW,EAAE,CAC3DV,OAAO,EACP7D,eACF,CAAC;QACH;MACF,CAAC,CAAC;IACJ,CACF,CAAC;IACDnB,MAAM,CAACY,OAAO,CAACO,eAAe,CAAC,CAACX,OAAO,CAACmF,KAAA,IAAkC;MAAA,IAAjC,CAACrB,cAAc,EAAEC,UAAU,CAAC,GAAAoB,KAAA;MACnE7F,WAAW,CAACwE,cAAc,CAAC,GAAGC,UAAU;IAC1C,CAAC,CAAC;IACF7D,qBAAqB,CAAC,CAAC;IACvBS,eAAe,GAAG,KAAK,CAAC;EAC1B,CAAC;EACDC,iBAAiB,CAAC;IAAE5B,KAAK;IAAEC,iBAAiB;IAAEC,eAAe;IAAEC;EAAQ,CAAC,CAAC;EACzE,OAAO;IACL;IACA;IACA;IACA;IACA;IACAiG,QAAQA,CAACC,MAAM,EAAE;MACf,MAAM;QAAEC,IAAI;QAAEC;MAAO,CAAC,GAAGF,MAAM;MAC/B,IAAIzG,UAAU,CAAC0G,IAAI,CAAC,IAAI/F,KAAK,CAACiG,cAAc,IAAI,IAAI,EAAE;QACpD1F,WAAW,CAAClB,UAAU,CAAC0G,IAAI,CAAC,CAAC9G,aAAa,EAAEc,WAAW,EAAE+F,MAAM,CAAC,CAAC;QACjE;MACF;MACA,IAAIC,IAAI,KAAK,2BAA2B,EAAE;QACxC1E,iBAAiB,CAAC;UAAE5B,KAAK,EAAEuG;QAAO,CAAC,CAAC;MACtC,CAAC,MAAM,IAAID,IAAI,KAAK,gCAAgC,EAAE;QACpD1E,iBAAiB,CAAC;UAAE3B,iBAAiB,EAAEsG;QAAO,CAAC,CAAC;MAClD,CAAC,MAAM,IAAID,IAAI,KAAK,8BAA8B,EAAE;QAClD1E,iBAAiB,CAAC;UAAE1B,eAAe,EAAEqG;QAAO,CAAC,CAAC;MAChD,CAAC,MAAM,IAAID,IAAI,KAAK,sBAAsB,EAAE;QAC1C9F,MAAM,CAACY,OAAO,CAACmF,MAAM,IAAI,IAAI,GAAGA,MAAM,GAAG,CAAC,CAAC,CAAC,CAACvF,OAAO,CAACyF,KAAA,IAA+B;UAAA,IAA9B,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAAF,KAAA;UAC7EnG,WAAW,CAACH,OAAO,CAACuG,UAAU,CAAC,GAAGC,WAAW;QAC/C,CAAC,CAAC;MACJ;IACF,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,OAAOrG,KAAK;IACd,CAAC;IACDsG,SAASA,CAACC,QAAQ,EAAE;MAClBlF,iBAAiB,CAAC,CAAC,CAAC,EAAEvB,SAAS,CAAC6C,MAAM,GAAG,CAAC,CAAC;MAC3C7C,SAAS,CAAC0G,IAAI,CAACD,QAAQ,CAAC;MACxBA,QAAQ,CAACvG,KAAK,CAAC;MACf,OAAO,MAAM;QACX,MAAMyG,GAAG,GAAG3G,SAAS,CAAC4G,OAAO,CAACH,QAAQ,CAAC;QACvC,IAAIE,GAAG,IAAI,CAAC,EAAE;UACZpF,iBAAiB,CAAC,CAAC,CAAC,EAAEvB,SAAS,CAAC6C,MAAM,GAAG,CAAC,CAAC;UAC3C7C,SAAS,CAAC6G,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;QAC1B;MACF,CAAC;IACH;EACF,CAAC;AACH,CAAC;AACD,IAAIG,mBAAmB,GAAGrH,gBAAgB;AAC1C,SACEA,gBAAgB,EAChBqH,mBAAmB,IAAIC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}