{"ast":null,"code":"function computePosition(_ref) {\n  let {\n    anchor,\n    floating,\n    placement\n  } = _ref;\n  const rects = getElementRects({\n    anchor,\n    floating\n  });\n  const {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement);\n  return {\n    x,\n    y\n  };\n}\nfunction getElementRects(_ref2) {\n  let {\n    anchor,\n    floating\n  } = _ref2;\n  return {\n    anchor: getRectRelativeToOffsetParent(anchor, floating.offsetParent),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floating.offsetWidth,\n      height: floating.offsetHeight\n    }\n  };\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent) {\n  var _a;\n  const rect = element.getBoundingClientRect();\n  const offsetRect = (_a = offsetParent == null ? void 0 : offsetParent.getBoundingClientRect()) != null ? _a : {\n    x: 0,\n    y: 0\n  };\n  return {\n    x: rect.x - offsetRect.x,\n    y: rect.y - offsetRect.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction computeCoordsFromPlacement(_ref3, placement) {\n  let {\n    anchor,\n    floating\n  } = _ref3;\n  const alignmentAxis = getSideAxis(placement) === \"x\" ? \"y\" : \"x\";\n  const alignLength = alignmentAxis === \"y\" ? \"height\" : \"width\";\n  const side = getSide(placement);\n  const commonX = anchor.x + anchor.width / 2 - floating.width / 2;\n  const commonY = anchor.y + anchor.height / 2 - floating.height / 2;\n  const commonAlign = anchor[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case \"top\":\n      coords = {\n        x: commonX,\n        y: anchor.y - floating.height\n      };\n      break;\n    case \"bottom\":\n      coords = {\n        x: commonX,\n        y: anchor.y + anchor.height\n      };\n      break;\n    case \"right\":\n      coords = {\n        x: anchor.x + anchor.width,\n        y: commonY\n      };\n      break;\n    case \"left\":\n      coords = {\n        x: anchor.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: anchor.x,\n        y: anchor.y\n      };\n  }\n  switch (placement.split(\"-\")[1]) {\n    case \"start\":\n      coords[alignmentAxis] -= commonAlign;\n      break;\n    case \"end\":\n      coords[alignmentAxis] += commonAlign;\n      break;\n  }\n  return coords;\n}\nfunction getSide(placement) {\n  return placement.split(\"-\")[0];\n}\nfunction getSideAxis(placement) {\n  return [\"top\", \"bottom\"].includes(getSide(placement)) ? \"y\" : \"x\";\n}\nexport { computePosition };","map":null,"metadata":{},"sourceType":"module"}