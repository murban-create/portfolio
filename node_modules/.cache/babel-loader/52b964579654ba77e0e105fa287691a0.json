{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nconst ICON_SIZE = \"64px\";\nconst cache = {};\nconst Preview = _ref => {\n  let {\n    src,\n    light,\n    oEmbedUrl,\n    onClickPreview,\n    playIcon,\n    previewTabIndex,\n    previewAriaLabel\n  } = _ref;\n  const [image, setImage] = useState(null);\n  useEffect(() => {\n    if (!src || !light || !oEmbedUrl) return;\n    fetchImage({\n      src,\n      light,\n      oEmbedUrl\n    });\n  }, [src, light, oEmbedUrl]);\n  const fetchImage = async _ref2 => {\n    let {\n      src: src2,\n      light: light2,\n      oEmbedUrl: oEmbedUrl2\n    } = _ref2;\n    if (React.isValidElement(light2)) {\n      return;\n    }\n    if (typeof light2 === \"string\") {\n      setImage(light2);\n      return;\n    }\n    if (cache[src2]) {\n      setImage(cache[src2]);\n      return;\n    }\n    setImage(null);\n    const response = await fetch(oEmbedUrl2.replace(\"{url}\", src2));\n    const data = await response.json();\n    if (data.thumbnail_url) {\n      const fetchedImage = data.thumbnail_url.replace(\"height=100\", \"height=480\").replace(\"-d_295x166\", \"-d_640\");\n      setImage(fetchedImage);\n      cache[src2] = fetchedImage;\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\" || e.key === \" \") {\n      onClickPreview == null ? void 0 : onClickPreview(e);\n    }\n  };\n  const handleClick = e => {\n    onClickPreview == null ? void 0 : onClickPreview(e);\n  };\n  const isElement = React.isValidElement(light);\n  const flexCenter = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  };\n  const styles = {\n    preview: {\n      width: \"100%\",\n      height: \"100%\",\n      backgroundImage: image && !isElement ? `url(${image})` : void 0,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      cursor: \"pointer\",\n      ...flexCenter\n    },\n    shadow: {\n      background: \"radial-gradient(rgb(0, 0, 0, 0.3), rgba(0, 0, 0, 0) 60%)\",\n      borderRadius: ICON_SIZE,\n      width: ICON_SIZE,\n      height: ICON_SIZE,\n      position: isElement ? \"absolute\" : void 0,\n      ...flexCenter\n    },\n    playIcon: {\n      borderStyle: \"solid\",\n      borderWidth: \"16px 0 16px 26px\",\n      borderColor: \"transparent transparent transparent white\",\n      marginLeft: \"7px\"\n    }\n  };\n  const defaultPlayIcon = /* @__PURE__ */React.createElement(\"div\", {\n    style: styles.shadow,\n    className: \"react-player__shadow\"\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    style: styles.playIcon,\n    className: \"react-player__play-icon\"\n  }));\n  return /* @__PURE__ */React.createElement(\"div\", {\n    style: styles.preview,\n    className: \"react-player__preview\",\n    tabIndex: previewTabIndex,\n    onClick: handleClick,\n    onKeyPress: handleKeyPress,\n    ...(previewAriaLabel ? {\n      \"aria-label\": previewAriaLabel\n    } : {})\n  }, isElement ? light : null, playIcon || defaultPlayIcon);\n};\nvar Preview_default = Preview;\nexport { Preview_default as default };","map":null,"metadata":{},"sourceType":"module"}