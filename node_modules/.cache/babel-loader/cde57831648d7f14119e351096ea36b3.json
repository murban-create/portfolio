{"ast":null,"code":"var f = e => {\n  throw TypeError(e);\n};\nvar g = (e, o, t) => o.has(e) || f(\"Cannot \" + t);\nvar u = (e, o, t) => (g(e, o, \"read from private field\"), t ? t.call(e) : o.get(e)),\n  m = (e, o, t) => o.has(e) ? f(\"Cannot add the same private member more than once\") : o instanceof WeakSet ? o.add(e) : o.set(e, t),\n  d = (e, o, t, l) => (g(e, o, \"write to private field\"), l ? l.call(e, t) : o.set(e, t), t);\nvar s = class {\n  addEventListener() {}\n  removeEventListener() {}\n  dispatchEvent(o) {\n    return !0;\n  }\n};\nif (typeof DocumentFragment == \"undefined\") {\n  class e extends s {}\n  globalThis.DocumentFragment = e;\n}\nvar n = class extends s {},\n  p = class extends s {},\n  x = {\n    get(e) {},\n    define(e, o, t) {},\n    getName(e) {\n      return null;\n    },\n    upgrade(e) {},\n    whenDefined(e) {\n      return Promise.resolve(n);\n    }\n  },\n  a,\n  h = class {\n    constructor(o) {\n      let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      m(this, a);\n      d(this, a, t == null ? void 0 : t.detail);\n    }\n    get detail() {\n      return u(this, a);\n    }\n    initCustomEvent() {}\n  };\na = new WeakMap();\nfunction C(e, o) {\n  return new n();\n}\nvar y = {\n    document: {\n      createElement: C\n    },\n    DocumentFragment,\n    customElements: x,\n    CustomEvent: h,\n    EventTarget: s,\n    HTMLElement: n,\n    HTMLVideoElement: p\n  },\n  b = typeof window == \"undefined\" || typeof globalThis.customElements == \"undefined\",\n  c = b ? y : globalThis,\n  k = b ? y.document : globalThis.document;\nimport { MuxVideoBaseElement as T } from \"@mux/mux-video/base\";\nimport { CastableMediaMixin as E } from \"castable-video/castable-mixin.js\";\nimport { MediaTracksMixin as D } from \"media-tracks\";\nexport * from \"@mux/mux-video/base\";\nvar r,\n  i = class extends E(D(T)) {\n    constructor() {\n      super(...arguments);\n      m(this, r);\n    }\n    get autoplay() {\n      let t = this.getAttribute(\"autoplay\");\n      return t === null ? !1 : t === \"\" ? !0 : t;\n    }\n    set autoplay(t) {\n      let l = this.autoplay;\n      t !== l && (t ? this.setAttribute(\"autoplay\", typeof t == \"string\" ? t : \"\") : this.removeAttribute(\"autoplay\"));\n    }\n    get muxCastCustomData() {\n      return {\n        mux: {\n          playbackId: this.playbackId,\n          minResolution: this.minResolution,\n          maxResolution: this.maxResolution,\n          renditionOrder: this.renditionOrder,\n          customDomain: this.customDomain,\n          tokens: {\n            drm: this.drmToken\n          },\n          envKey: this.envKey,\n          metadata: this.metadata,\n          disableCookies: this.disableCookies,\n          disableTracking: this.disableTracking,\n          beaconCollectionDomain: this.beaconCollectionDomain,\n          startTime: this.startTime,\n          preferCmcd: this.preferCmcd\n        }\n      };\n    }\n    get castCustomData() {\n      var t;\n      return (t = u(this, r)) != null ? t : this.muxCastCustomData;\n    }\n    set castCustomData(t) {\n      d(this, r, t);\n    }\n  };\nr = new WeakMap();\nc.customElements.get(\"mux-video\") || (c.customElements.define(\"mux-video\", i), c.MuxVideoElement = i);\nvar F = i;\nexport { F as default };","map":null,"metadata":{},"sourceType":"module"}