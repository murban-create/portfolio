{"ast":null,"code":"\"use client\";\n\nimport m, { useState as pe, useRef as Ee } from \"react\";\nimport { MaxResolution as Le, MinResolution as Ae, RenditionOrder as Ie, generatePlayerInitTime as Me } from \"@mux/playback-core\";\nimport { MediaError as Ke } from \"@mux/mux-player\";\nimport X from \"react\";\nvar M = parseInt(X.version) >= 19,\n  E = {\n    className: \"class\",\n    classname: \"class\",\n    htmlFor: \"for\",\n    crossOrigin: \"crossorigin\",\n    viewBox: \"viewBox\",\n    playsInline: \"playsinline\",\n    autoPlay: \"autoplay\",\n    playbackRate: \"playbackrate\"\n  },\n  B = e => e == null,\n  ee = (e, t) => B(t) ? !1 : e in t,\n  te = e => e.replace(/[A-Z]/g, t => `-${t.toLowerCase()}`),\n  ne = (e, t) => {\n    if (!(!M && typeof t == \"boolean\" && !t)) {\n      if (ee(e, E)) return E[e];\n      if (typeof t != \"undefined\") return /[A-Z]/.test(e) ? te(e) : e;\n    }\n  };\nvar ae = (e, t) => !M && typeof e == \"boolean\" ? \"\" : e,\n  P = function () {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let {\n      ref: t,\n      ...n\n    } = e;\n    return Object.entries(n).reduce((o, _ref) => {\n      let [a, l] = _ref;\n      let i = ne(a, l);\n      if (!i) return o;\n      let c = ae(l, a);\n      return o[i] = c, o;\n    }, {});\n  };\nimport * as d from \"react\";\nfunction x(e, t) {\n  if (typeof e == \"function\") return e(t);\n  e != null && (e.current = t);\n}\nfunction re() {\n  for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {\n    e[_key] = arguments[_key];\n  }\n  return t => {\n    let n = !1,\n      o = e.map(a => {\n        let l = x(a, t);\n        return !n && typeof l == \"function\" && (n = !0), l;\n      });\n    if (n) return () => {\n      for (let a = 0; a < o.length; a++) {\n        let l = o[a];\n        typeof l == \"function\" ? l() : x(e[a], null);\n      }\n    };\n  };\n}\nfunction f() {\n  for (var _len2 = arguments.length, e = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    e[_key2] = arguments[_key2];\n  }\n  return d.useCallback(re(...e), e);\n}\nimport { useEffect as le } from \"react\";\nvar oe = Object.prototype.hasOwnProperty,\n  ue = (e, t) => {\n    if (Object.is(e, t)) return !0;\n    if (typeof e != \"object\" || e === null || typeof t != \"object\" || t === null) return !1;\n    if (Array.isArray(e)) return !Array.isArray(t) || e.length !== t.length ? !1 : e.some((a, l) => t[l] === a);\n    let n = Object.keys(e),\n      o = Object.keys(t);\n    if (n.length !== o.length) return !1;\n    for (let a = 0; a < n.length; a++) if (!oe.call(t, n[a]) || !Object.is(e[n[a]], t[n[a]])) return !1;\n    return !0;\n  },\n  p = (e, t, n) => !ue(t, e[n]),\n  se = (e, t, n) => {\n    e[n] = t;\n  },\n  ie = function (e, t, n) {\n    let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : se;\n    let a = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : p;\n    return le(() => {\n      let l = n == null ? void 0 : n.current;\n      l && a(l, t, e) && o(l, t, e);\n    }, [n == null ? void 0 : n.current, t]);\n  },\n  u = ie;\nvar ye = () => {\n    try {\n      return \"3.5.3\";\n    } catch {}\n    return \"UNKNOWN\";\n  },\n  me = ye(),\n  g = () => me;\nimport { useEffect as ce } from \"react\";\nvar r = (e, t, n) => ce(() => {\n  let o = t == null ? void 0 : t.current;\n  if (!o || !n) return;\n  let a = e,\n    l = n;\n  return o.addEventListener(a, l), () => {\n    o.removeEventListener(a, l);\n  };\n}, [t == null ? void 0 : t.current, n, e]);\nvar Pe = m.forwardRef((_ref2, n) => {\n    let {\n      children: e,\n      ...t\n    } = _ref2;\n    return m.createElement(\"mux-player\", {\n      suppressHydrationWarning: !0,\n      ...P(t),\n      ref: n\n    }, e);\n  }),\n  xe = (e, t) => {\n    let {\n      onAbort: n,\n      onCanPlay: o,\n      onCanPlayThrough: a,\n      onEmptied: l,\n      onLoadStart: i,\n      onLoadedData: c,\n      onLoadedMetadata: v,\n      onProgress: R,\n      onDurationChange: T,\n      onVolumeChange: h,\n      onRateChange: b,\n      onResize: C,\n      onWaiting: k,\n      onPlay: O,\n      onPlaying: S,\n      onTimeUpdate: w,\n      onPause: N,\n      onSeeking: L,\n      onSeeked: A,\n      onStalled: I,\n      onSuspend: _,\n      onEnded: K,\n      onError: H,\n      onCuePointChange: D,\n      onChapterChange: V,\n      metadata: W,\n      tokens: U,\n      paused: z,\n      playbackId: F,\n      playbackRates: G,\n      currentTime: Z,\n      themeProps: j,\n      extraSourceParams: q,\n      castCustomData: J,\n      _hlsConfig: Y,\n      ...$\n    } = t;\n    return u(\"tokens\", U, e), u(\"playbackId\", F, e), u(\"playbackRates\", G, e), u(\"metadata\", W, e), u(\"extraSourceParams\", q, e), u(\"_hlsConfig\", Y, e), u(\"themeProps\", j, e), u(\"castCustomData\", J, e), u(\"paused\", z, e, (s, y) => {\n      y != null && (y ? s.pause() : s.play());\n    }, (s, y, Q) => s.hasAttribute(\"autoplay\") && !s.hasPlayed ? !1 : p(s, y, Q)), u(\"currentTime\", Z, e, (s, y) => {\n      y != null && (s.currentTime = y);\n    }), r(\"abort\", e, n), r(\"canplay\", e, o), r(\"canplaythrough\", e, a), r(\"emptied\", e, l), r(\"loadstart\", e, i), r(\"loadeddata\", e, c), r(\"loadedmetadata\", e, v), r(\"progress\", e, R), r(\"durationchange\", e, T), r(\"volumechange\", e, h), r(\"ratechange\", e, b), r(\"resize\", e, C), r(\"waiting\", e, k), r(\"play\", e, O), r(\"playing\", e, S), r(\"timeupdate\", e, w), r(\"pause\", e, N), r(\"seeking\", e, L), r(\"seeked\", e, A), r(\"stalled\", e, I), r(\"suspend\", e, _), r(\"ended\", e, K), r(\"error\", e, H), r(\"cuepointchange\", e, D), r(\"chapterchange\", e, V), [$];\n  },\n  de = g(),\n  fe = \"mux-player-react\",\n  ge = m.forwardRef((e, t) => {\n    var i;\n    let n = Ee(null),\n      o = f(n, t),\n      [a] = xe(n, e),\n      [l] = pe((i = e.playerInitTime) != null ? i : Me());\n    return m.createElement(Pe, {\n      ref: o,\n      defaultHiddenCaptions: e.defaultHiddenCaptions,\n      playerSoftwareName: fe,\n      playerSoftwareVersion: de,\n      playerInitTime: l,\n      ...a\n    });\n  }),\n  ze = ge;\nexport { Le as MaxResolution, Ke as MediaError, Ae as MinResolution, Ie as RenditionOrder, ze as default, Me as generatePlayerInitTime, fe as playerSoftwareName, de as playerSoftwareVersion };","map":null,"metadata":{},"sourceType":"module"}