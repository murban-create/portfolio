{"ast":null,"code":"import { MediaUIAttributes, TextTrackKinds } from \"../constants.js\";\nconst splitTextTracksStr = function () {\n  let textTracksStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return textTracksStr.split(/\\s+/);\n};\nconst parseTextTrackStr = function () {\n  let textTrackStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  const [kind, language, encodedLabel] = textTrackStr.split(\":\");\n  const label = encodedLabel ? decodeURIComponent(encodedLabel) : void 0;\n  return {\n    kind: kind === \"cc\" ? TextTrackKinds.CAPTIONS : TextTrackKinds.SUBTITLES,\n    language,\n    label\n  };\n};\nconst parseTextTracksStr = function () {\n  let textTracksStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let textTrackLikeObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return splitTextTracksStr(textTracksStr).map(textTrackStr => {\n    const textTrackObj = parseTextTrackStr(textTrackStr);\n    return {\n      ...textTrackLikeObj,\n      ...textTrackObj\n    };\n  });\n};\nconst parseTracks = trackOrTracks => {\n  if (!trackOrTracks) return [];\n  if (Array.isArray(trackOrTracks)) {\n    return trackOrTracks.map(trackObjOrStr => {\n      if (typeof trackObjOrStr === \"string\") {\n        return parseTextTrackStr(trackObjOrStr);\n      }\n      return trackObjOrStr;\n    });\n  }\n  if (typeof trackOrTracks === \"string\") {\n    return parseTextTracksStr(trackOrTracks);\n  }\n  return [trackOrTracks];\n};\nconst formatTextTrackObj = function () {\n  let {\n    kind,\n    label,\n    language\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    kind: \"subtitles\"\n  };\n  if (!label) return language;\n  return `${kind === \"captions\" ? \"cc\" : \"sb\"}:${language}:${encodeURIComponent(label)}`;\n};\nconst stringifyTextTrackList = function () {\n  let textTracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return Array.prototype.map.call(textTracks, formatTextTrackObj).join(\" \");\n};\nconst isMatchingPropOf = (key, value) => obj => obj[key] === value;\nconst textTrackObjAsPred = filterObj => {\n  const preds = Object.entries(filterObj).map(_ref => {\n    let [key, value] = _ref;\n    return isMatchingPropOf(key, value);\n  });\n  return textTrack => preds.every(pred => pred(textTrack));\n};\nconst updateTracksModeTo = function (mode) {\n  let tracks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let tracksToUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  const preds = parseTracks(tracksToUpdate).map(textTrackObjAsPred);\n  const isTrackToUpdate = textTrack => {\n    return preds.some(pred => pred(textTrack));\n  };\n  Array.from(tracks).filter(isTrackToUpdate).forEach(textTrack => {\n    textTrack.mode = mode;\n  });\n};\nconst getTextTracksList = function (media) {\n  let filterPredOrObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => true;\n  if (!(media == null ? void 0 : media.textTracks)) return [];\n  const filterPred = typeof filterPredOrObj === \"function\" ? filterPredOrObj : textTrackObjAsPred(filterPredOrObj);\n  return Array.from(media.textTracks).filter(filterPred);\n};\nconst areSubsOn = el => {\n  var _a;\n  const showingSubtitles = !!((_a = el.mediaSubtitlesShowing) == null ? void 0 : _a.length) || el.hasAttribute(MediaUIAttributes.MEDIA_SUBTITLES_SHOWING);\n  return showingSubtitles;\n};\nexport { areSubsOn, formatTextTrackObj, getTextTracksList, isMatchingPropOf, parseTextTrackStr, parseTextTracksStr, parseTracks, splitTextTracksStr, stringifyTextTrackList, textTrackObjAsPred, updateTracksModeTo };","map":{"version":3,"names":["MediaUIAttributes","TextTrackKinds","splitTextTracksStr","textTracksStr","arguments","length","undefined","split","parseTextTrackStr","textTrackStr","kind","language","encodedLabel","label","decodeURIComponent","CAPTIONS","SUBTITLES","parseTextTracksStr","textTrackLikeObj","map","textTrackObj","parseTracks","trackOrTracks","Array","isArray","trackObjOrStr","formatTextTrackObj","encodeURIComponent","stringifyTextTrackList","textTracks","prototype","call","join","isMatchingPropOf","key","value","obj","textTrackObjAsPred","filterObj","preds","Object","entries","_ref","textTrack","every","pred","updateTracksModeTo","mode","tracks","tracksToUpdate","isTrackToUpdate","some","from","filter","forEach","getTextTracksList","media","filterPredOrObj","filterPred","areSubsOn","el","_a","showingSubtitles","mediaSubtitlesShowing","hasAttribute","MEDIA_SUBTITLES_SHOWING"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/media-chrome/dist/utils/captions.js"],"sourcesContent":["import { MediaUIAttributes, TextTrackKinds } from \"../constants.js\";\nconst splitTextTracksStr = (textTracksStr = \"\") => textTracksStr.split(/\\s+/);\nconst parseTextTrackStr = (textTrackStr = \"\") => {\n  const [kind, language, encodedLabel] = textTrackStr.split(\":\");\n  const label = encodedLabel ? decodeURIComponent(encodedLabel) : void 0;\n  return {\n    kind: kind === \"cc\" ? TextTrackKinds.CAPTIONS : TextTrackKinds.SUBTITLES,\n    language,\n    label\n  };\n};\nconst parseTextTracksStr = (textTracksStr = \"\", textTrackLikeObj = {}) => {\n  return splitTextTracksStr(textTracksStr).map((textTrackStr) => {\n    const textTrackObj = parseTextTrackStr(textTrackStr);\n    return {\n      ...textTrackLikeObj,\n      ...textTrackObj\n    };\n  });\n};\nconst parseTracks = (trackOrTracks) => {\n  if (!trackOrTracks)\n    return [];\n  if (Array.isArray(trackOrTracks)) {\n    return trackOrTracks.map((trackObjOrStr) => {\n      if (typeof trackObjOrStr === \"string\") {\n        return parseTextTrackStr(trackObjOrStr);\n      }\n      return trackObjOrStr;\n    });\n  }\n  if (typeof trackOrTracks === \"string\") {\n    return parseTextTracksStr(trackOrTracks);\n  }\n  return [trackOrTracks];\n};\nconst formatTextTrackObj = ({ kind, label, language } = { kind: \"subtitles\" }) => {\n  if (!label)\n    return language;\n  return `${kind === \"captions\" ? \"cc\" : \"sb\"}:${language}:${encodeURIComponent(\n    label\n  )}`;\n};\nconst stringifyTextTrackList = (textTracks = []) => {\n  return Array.prototype.map.call(textTracks, formatTextTrackObj).join(\" \");\n};\nconst isMatchingPropOf = (key, value) => (obj) => obj[key] === value;\nconst textTrackObjAsPred = (filterObj) => {\n  const preds = Object.entries(filterObj).map(([key, value]) => {\n    return isMatchingPropOf(key, value);\n  });\n  return (textTrack) => preds.every((pred) => pred(textTrack));\n};\nconst updateTracksModeTo = (mode, tracks = [], tracksToUpdate = []) => {\n  const preds = parseTracks(tracksToUpdate).map(textTrackObjAsPred);\n  const isTrackToUpdate = (textTrack) => {\n    return preds.some((pred) => pred(textTrack));\n  };\n  Array.from(tracks).filter(isTrackToUpdate).forEach((textTrack) => {\n    textTrack.mode = mode;\n  });\n};\nconst getTextTracksList = (media, filterPredOrObj = () => true) => {\n  if (!(media == null ? void 0 : media.textTracks))\n    return [];\n  const filterPred = typeof filterPredOrObj === \"function\" ? filterPredOrObj : textTrackObjAsPred(filterPredOrObj);\n  return Array.from(media.textTracks).filter(filterPred);\n};\nconst areSubsOn = (el) => {\n  var _a;\n  const showingSubtitles = !!((_a = el.mediaSubtitlesShowing) == null ? void 0 : _a.length) || el.hasAttribute(MediaUIAttributes.MEDIA_SUBTITLES_SHOWING);\n  return showingSubtitles;\n};\nexport {\n  areSubsOn,\n  formatTextTrackObj,\n  getTextTracksList,\n  isMatchingPropOf,\n  parseTextTrackStr,\n  parseTextTracksStr,\n  parseTracks,\n  splitTextTracksStr,\n  stringifyTextTrackList,\n  textTrackObjAsPred,\n  updateTracksModeTo\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}