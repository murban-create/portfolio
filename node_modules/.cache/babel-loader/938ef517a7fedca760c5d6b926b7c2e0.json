{"ast":null,"code":"var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateWrapper = (obj, member, setter, getter) => ({\n  set _(value) {\n    __privateSet(obj, member, value, setter);\n  },\n  get _() {\n    return __privateGet(obj, member, getter);\n  }\n});\nvar _range, _startTime, _previousTime, _deltaTime, _frameCount, _updateTimestamp, _updateStartValue, _lastRangeIncrease, _id, _animate;\nclass RangeAnimation {\n  constructor(range, callback, fps) {\n    var _this = this;\n    __privateAdd(this, _range, void 0);\n    __privateAdd(this, _startTime, void 0);\n    __privateAdd(this, _previousTime, void 0);\n    __privateAdd(this, _deltaTime, void 0);\n    __privateAdd(this, _frameCount, void 0);\n    __privateAdd(this, _updateTimestamp, void 0);\n    __privateAdd(this, _updateStartValue, void 0);\n    __privateAdd(this, _lastRangeIncrease, void 0);\n    __privateAdd(this, _id, 0);\n    __privateAdd(this, _animate, function () {\n      let now = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : performance.now();\n      __privateSet(_this, _id, requestAnimationFrame(__privateGet(_this, _animate)));\n      __privateSet(_this, _deltaTime, performance.now() - __privateGet(_this, _previousTime));\n      const fpsInterval = 1e3 / _this.fps;\n      if (__privateGet(_this, _deltaTime) > fpsInterval) {\n        __privateSet(_this, _previousTime, now - __privateGet(_this, _deltaTime) % fpsInterval);\n        const fps = 1e3 / ((now - __privateGet(_this, _startTime)) / ++__privateWrapper(_this, _frameCount)._);\n        const delta = (now - __privateGet(_this, _updateTimestamp)) / 1e3 / _this.duration;\n        let value = __privateGet(_this, _updateStartValue) + delta * _this.playbackRate;\n        const increase = value - __privateGet(_this, _range).valueAsNumber;\n        if (increase > 0) {\n          __privateSet(_this, _lastRangeIncrease, _this.playbackRate / _this.duration / fps);\n        } else {\n          __privateSet(_this, _lastRangeIncrease, 0.995 * __privateGet(_this, _lastRangeIncrease));\n          value = __privateGet(_this, _range).valueAsNumber + __privateGet(_this, _lastRangeIncrease);\n        }\n        _this.callback(value);\n      }\n    });\n    __privateSet(this, _range, range);\n    this.callback = callback;\n    this.fps = fps;\n  }\n  start() {\n    if (__privateGet(this, _id) !== 0) return;\n    __privateSet(this, _previousTime, performance.now());\n    __privateSet(this, _startTime, __privateGet(this, _previousTime));\n    __privateSet(this, _frameCount, 0);\n    __privateGet(this, _animate).call(this);\n  }\n  stop() {\n    if (__privateGet(this, _id) === 0) return;\n    cancelAnimationFrame(__privateGet(this, _id));\n    __privateSet(this, _id, 0);\n  }\n  update(_ref) {\n    let {\n      start,\n      duration,\n      playbackRate\n    } = _ref;\n    const increase = start - __privateGet(this, _range).valueAsNumber;\n    const durationDelta = Math.abs(duration - this.duration);\n    if (increase > 0 || increase < -0.03 || durationDelta >= 0.5) {\n      this.callback(start);\n    }\n    __privateSet(this, _updateStartValue, start);\n    __privateSet(this, _updateTimestamp, performance.now());\n    this.duration = duration;\n    this.playbackRate = playbackRate;\n  }\n}\n_range = new WeakMap();\n_startTime = new WeakMap();\n_previousTime = new WeakMap();\n_deltaTime = new WeakMap();\n_frameCount = new WeakMap();\n_updateTimestamp = new WeakMap();\n_updateStartValue = new WeakMap();\n_lastRangeIncrease = new WeakMap();\n_id = new WeakMap();\n_animate = new WeakMap();\nexport { RangeAnimation };","map":{"version":3,"names":["__accessCheck","obj","member","msg","has","TypeError","__privateGet","getter","call","get","__privateAdd","value","WeakSet","add","set","__privateSet","setter","__privateWrapper","_","_range","_startTime","_previousTime","_deltaTime","_frameCount","_updateTimestamp","_updateStartValue","_lastRangeIncrease","_id","_animate","RangeAnimation","constructor","range","callback","fps","_this","now","arguments","length","undefined","performance","requestAnimationFrame","fpsInterval","delta","duration","playbackRate","increase","valueAsNumber","start","stop","cancelAnimationFrame","update","_ref","durationDelta","Math","abs","WeakMap"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/media-chrome/dist/utils/range-animation.js"],"sourcesContent":["var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateWrapper = (obj, member, setter, getter) => ({\n  set _(value) {\n    __privateSet(obj, member, value, setter);\n  },\n  get _() {\n    return __privateGet(obj, member, getter);\n  }\n});\nvar _range, _startTime, _previousTime, _deltaTime, _frameCount, _updateTimestamp, _updateStartValue, _lastRangeIncrease, _id, _animate;\nclass RangeAnimation {\n  constructor(range, callback, fps) {\n    __privateAdd(this, _range, void 0);\n    __privateAdd(this, _startTime, void 0);\n    __privateAdd(this, _previousTime, void 0);\n    __privateAdd(this, _deltaTime, void 0);\n    __privateAdd(this, _frameCount, void 0);\n    __privateAdd(this, _updateTimestamp, void 0);\n    __privateAdd(this, _updateStartValue, void 0);\n    __privateAdd(this, _lastRangeIncrease, void 0);\n    __privateAdd(this, _id, 0);\n    __privateAdd(this, _animate, (now = performance.now()) => {\n      __privateSet(this, _id, requestAnimationFrame(__privateGet(this, _animate)));\n      __privateSet(this, _deltaTime, performance.now() - __privateGet(this, _previousTime));\n      const fpsInterval = 1e3 / this.fps;\n      if (__privateGet(this, _deltaTime) > fpsInterval) {\n        __privateSet(this, _previousTime, now - __privateGet(this, _deltaTime) % fpsInterval);\n        const fps = 1e3 / ((now - __privateGet(this, _startTime)) / ++__privateWrapper(this, _frameCount)._);\n        const delta = (now - __privateGet(this, _updateTimestamp)) / 1e3 / this.duration;\n        let value = __privateGet(this, _updateStartValue) + delta * this.playbackRate;\n        const increase = value - __privateGet(this, _range).valueAsNumber;\n        if (increase > 0) {\n          __privateSet(this, _lastRangeIncrease, this.playbackRate / this.duration / fps);\n        } else {\n          __privateSet(this, _lastRangeIncrease, 0.995 * __privateGet(this, _lastRangeIncrease));\n          value = __privateGet(this, _range).valueAsNumber + __privateGet(this, _lastRangeIncrease);\n        }\n        this.callback(value);\n      }\n    });\n    __privateSet(this, _range, range);\n    this.callback = callback;\n    this.fps = fps;\n  }\n  start() {\n    if (__privateGet(this, _id) !== 0)\n      return;\n    __privateSet(this, _previousTime, performance.now());\n    __privateSet(this, _startTime, __privateGet(this, _previousTime));\n    __privateSet(this, _frameCount, 0);\n    __privateGet(this, _animate).call(this);\n  }\n  stop() {\n    if (__privateGet(this, _id) === 0)\n      return;\n    cancelAnimationFrame(__privateGet(this, _id));\n    __privateSet(this, _id, 0);\n  }\n  update({ start, duration, playbackRate }) {\n    const increase = start - __privateGet(this, _range).valueAsNumber;\n    const durationDelta = Math.abs(duration - this.duration);\n    if (increase > 0 || increase < -0.03 || durationDelta >= 0.5) {\n      this.callback(start);\n    }\n    __privateSet(this, _updateStartValue, start);\n    __privateSet(this, _updateTimestamp, performance.now());\n    this.duration = duration;\n    this.playbackRate = playbackRate;\n  }\n}\n_range = new WeakMap();\n_startTime = new WeakMap();\n_previousTime = new WeakMap();\n_deltaTime = new WeakMap();\n_frameCount = new WeakMap();\n_updateTimestamp = new WeakMap();\n_updateStartValue = new WeakMap();\n_lastRangeIncrease = new WeakMap();\n_id = new WeakMap();\n_animate = new WeakMap();\nexport {\n  RangeAnimation\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}