{"ast":null,"code":"import { RenditionEvent } from \"./rendition-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addRendition(track, rendition) {\n  const renditionList = getPrivate(track).media.videoRenditions;\n  getPrivate(rendition).media = getPrivate(track).media;\n  getPrivate(rendition).track = track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.add(rendition);\n  const index = renditionSet.size - 1;\n  if (!(index in VideoRenditionList.prototype)) {\n    Object.defineProperty(VideoRenditionList.prototype, index, {\n      get() {\n        return getCurrentRenditions(this)[index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    if (!track.selected) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"addrendition\", {\n      rendition\n    }));\n  });\n}\nfunction removeRendition(rendition) {\n  const renditionList = getPrivate(rendition).media.videoRenditions;\n  const track = getPrivate(rendition).track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.delete(rendition);\n  queueMicrotask(() => {\n    const track2 = getPrivate(rendition).track;\n    if (!track2.selected) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"removerendition\", {\n      rendition\n    }));\n  });\n}\nfunction selectedChanged(rendition) {\n  const renditionList = getPrivate(rendition).media.videoRenditions;\n  if (!renditionList || getPrivate(renditionList).changeRequested) return;\n  getPrivate(renditionList).changeRequested = true;\n  queueMicrotask(() => {\n    delete getPrivate(renditionList).changeRequested;\n    const track = getPrivate(rendition).track;\n    if (!track.selected) return;\n    renditionList.dispatchEvent(new Event(\"change\"));\n  });\n}\nfunction getCurrentRenditions(renditionList) {\n  const media = getPrivate(renditionList).media;\n  return [...media.videoTracks].filter(track => track.selected).flatMap(track => [...getPrivate(track).renditionSet]);\n}\nclass VideoRenditionList extends EventTarget {\n  #addRenditionCallback;\n  #removeRenditionCallback;\n  #changeCallback;\n  [Symbol.iterator]() {\n    return getCurrentRenditions(this).values();\n  }\n  get length() {\n    return getCurrentRenditions(this).length;\n  }\n  getRenditionById(id) {\n    return getCurrentRenditions(this).find(rendition => `${rendition.id}` === `${id}`) ?? null;\n  }\n  get selectedIndex() {\n    return getCurrentRenditions(this).findIndex(rendition => rendition.selected);\n  }\n  set selectedIndex(index) {\n    for (const [i, rendition] of getCurrentRenditions(this).entries()) {\n      rendition.selected = i === index;\n    }\n  }\n  get onaddrendition() {\n    return this.#addRenditionCallback;\n  }\n  set onaddrendition(callback) {\n    if (this.#addRenditionCallback) {\n      this.removeEventListener(\"addrendition\", this.#addRenditionCallback);\n      this.#addRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addRenditionCallback = callback;\n      this.addEventListener(\"addrendition\", callback);\n    }\n  }\n  get onremoverendition() {\n    return this.#removeRenditionCallback;\n  }\n  set onremoverendition(callback) {\n    if (this.#removeRenditionCallback) {\n      this.removeEventListener(\"removerendition\", this.#removeRenditionCallback);\n      this.#removeRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeRenditionCallback = callback;\n      this.addEventListener(\"removerendition\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport { VideoRenditionList, addRendition, removeRendition, selectedChanged };","map":{"version":3,"names":["RenditionEvent","getPrivate","addRendition","track","rendition","renditionList","media","videoRenditions","renditionSet","add","index","size","VideoRenditionList","prototype","Object","defineProperty","get","getCurrentRenditions","queueMicrotask","selected","dispatchEvent","removeRendition","delete","track2","selectedChanged","changeRequested","Event","videoTracks","filter","flatMap","EventTarget","addRenditionCallback","removeRenditionCallback","changeCallback","Symbol","iterator","values","length","getRenditionById","id","find","selectedIndex","findIndex","i","entries","onaddrendition","callback","removeEventListener","addEventListener","onremoverendition","onchange"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/media-tracks/dist/video-rendition-list.js"],"sourcesContent":["import { RenditionEvent } from \"./rendition-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addRendition(track, rendition) {\n  const renditionList = getPrivate(track).media.videoRenditions;\n  getPrivate(rendition).media = getPrivate(track).media;\n  getPrivate(rendition).track = track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.add(rendition);\n  const index = renditionSet.size - 1;\n  if (!(index in VideoRenditionList.prototype)) {\n    Object.defineProperty(VideoRenditionList.prototype, index, {\n      get() {\n        return getCurrentRenditions(this)[index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    if (!track.selected) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"addrendition\", { rendition }));\n  });\n}\nfunction removeRendition(rendition) {\n  const renditionList = getPrivate(rendition).media.videoRenditions;\n  const track = getPrivate(rendition).track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.delete(rendition);\n  queueMicrotask(() => {\n    const track2 = getPrivate(rendition).track;\n    if (!track2.selected) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"removerendition\", { rendition }));\n  });\n}\nfunction selectedChanged(rendition) {\n  const renditionList = getPrivate(rendition).media.videoRenditions;\n  if (!renditionList || getPrivate(renditionList).changeRequested) return;\n  getPrivate(renditionList).changeRequested = true;\n  queueMicrotask(() => {\n    delete getPrivate(renditionList).changeRequested;\n    const track = getPrivate(rendition).track;\n    if (!track.selected) return;\n    renditionList.dispatchEvent(new Event(\"change\"));\n  });\n}\nfunction getCurrentRenditions(renditionList) {\n  const media = getPrivate(renditionList).media;\n  return [...media.videoTracks].filter((track) => track.selected).flatMap((track) => [...getPrivate(track).renditionSet]);\n}\nclass VideoRenditionList extends EventTarget {\n  #addRenditionCallback;\n  #removeRenditionCallback;\n  #changeCallback;\n  [Symbol.iterator]() {\n    return getCurrentRenditions(this).values();\n  }\n  get length() {\n    return getCurrentRenditions(this).length;\n  }\n  getRenditionById(id) {\n    return getCurrentRenditions(this).find((rendition) => `${rendition.id}` === `${id}`) ?? null;\n  }\n  get selectedIndex() {\n    return getCurrentRenditions(this).findIndex((rendition) => rendition.selected);\n  }\n  set selectedIndex(index) {\n    for (const [i, rendition] of getCurrentRenditions(this).entries()) {\n      rendition.selected = i === index;\n    }\n  }\n  get onaddrendition() {\n    return this.#addRenditionCallback;\n  }\n  set onaddrendition(callback) {\n    if (this.#addRenditionCallback) {\n      this.removeEventListener(\"addrendition\", this.#addRenditionCallback);\n      this.#addRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addRenditionCallback = callback;\n      this.addEventListener(\"addrendition\", callback);\n    }\n  }\n  get onremoverendition() {\n    return this.#removeRenditionCallback;\n  }\n  set onremoverendition(callback) {\n    if (this.#removeRenditionCallback) {\n      this.removeEventListener(\"removerendition\", this.#removeRenditionCallback);\n      this.#removeRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeRenditionCallback = callback;\n      this.addEventListener(\"removerendition\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  VideoRenditionList,\n  addRendition,\n  removeRendition,\n  selectedChanged\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}