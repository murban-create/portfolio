{"ast":null,"code":"import { MediaChromeButton } from \"./media-chrome-button.js\";\nimport { globalThis } from \"./utils/server-safe-globals.js\";\nimport { MediaUIEvents, MediaUIAttributes } from \"./constants.js\";\nimport { t } from \"./utils/i18n.js\";\nimport { getBooleanAttr, getStringAttr, setBooleanAttr, setStringAttr } from \"./utils/element-utils.js\";\nconst pipIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 28 24\">\n  <path d=\"M24 3H4a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h20a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1Zm-1 16H5V5h18v14Zm-3-8h-7v5h7v-5Z\"/>\n</svg>`;\nfunction getSlotTemplateHTML(_attrs) {\n  return /*html*/`\n    <style>\n      :host([${MediaUIAttributes.MEDIA_IS_PIP}]) slot[name=icon] slot:not([name=exit]) {\n        display: none !important;\n      }\n\n      :host(:not([${MediaUIAttributes.MEDIA_IS_PIP}])) slot[name=icon] slot:not([name=enter]) {\n        display: none !important;\n      }\n\n      :host([${MediaUIAttributes.MEDIA_IS_PIP}]) slot[name=tooltip-enter],\n      :host(:not([${MediaUIAttributes.MEDIA_IS_PIP}])) slot[name=tooltip-exit] {\n        display: none;\n      }\n    </style>\n\n    <slot name=\"icon\">\n      <slot name=\"enter\">${pipIcon}</slot>\n      <slot name=\"exit\">${pipIcon}</slot>\n    </slot>\n  `;\n}\nfunction getTooltipContentHTML() {\n  return /*html*/`\n    <slot name=\"tooltip-enter\">${t(\"Enter picture in picture mode\")}</slot>\n    <slot name=\"tooltip-exit\">${t(\"Exit picture in picture mode\")}</slot>\n  `;\n}\nconst updateAriaLabel = el => {\n  const label = el.mediaIsPip ? t(\"exit picture in picture mode\") : t(\"enter picture in picture mode\");\n  el.setAttribute(\"aria-label\", label);\n};\nclass MediaPipButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_IS_PIP, MediaUIAttributes.MEDIA_PIP_UNAVAILABLE];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    updateAriaLabel(this);\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n    if (attrName === MediaUIAttributes.MEDIA_IS_PIP) {\n      updateAriaLabel(this);\n    }\n  }\n  /**\n   * @type {string | undefined} Pip unavailability state\n   */\n  get mediaPipUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_PIP_UNAVAILABLE);\n  }\n  set mediaPipUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_PIP_UNAVAILABLE, value);\n  }\n  /**\n   * @type {boolean} Is the media currently playing picture-in-picture\n   */\n  get mediaIsPip() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_PIP);\n  }\n  set mediaIsPip(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_PIP, value);\n  }\n  handleClick() {\n    const eventName = this.mediaIsPip ? MediaUIEvents.MEDIA_EXIT_PIP_REQUEST : MediaUIEvents.MEDIA_ENTER_PIP_REQUEST;\n    this.dispatchEvent(new globalThis.CustomEvent(eventName, {\n      composed: true,\n      bubbles: true\n    }));\n  }\n}\nMediaPipButton.getSlotTemplateHTML = getSlotTemplateHTML;\nMediaPipButton.getTooltipContentHTML = getTooltipContentHTML;\nif (!globalThis.customElements.get(\"media-pip-button\")) {\n  globalThis.customElements.define(\"media-pip-button\", MediaPipButton);\n}\nvar media_pip_button_default = MediaPipButton;\nexport { media_pip_button_default as default };","map":{"version":3,"names":["MediaChromeButton","globalThis","MediaUIEvents","MediaUIAttributes","t","getBooleanAttr","getStringAttr","setBooleanAttr","setStringAttr","pipIcon","getSlotTemplateHTML","_attrs","MEDIA_IS_PIP","getTooltipContentHTML","updateAriaLabel","el","label","mediaIsPip","setAttribute","MediaPipButton","observedAttributes","MEDIA_PIP_UNAVAILABLE","connectedCallback","attributeChangedCallback","attrName","oldValue","newValue","mediaPipUnavailable","value","handleClick","eventName","MEDIA_EXIT_PIP_REQUEST","MEDIA_ENTER_PIP_REQUEST","dispatchEvent","CustomEvent","composed","bubbles","customElements","get","define","media_pip_button_default","default"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/media-chrome/dist/media-pip-button.js"],"sourcesContent":["import { MediaChromeButton } from \"./media-chrome-button.js\";\nimport { globalThis } from \"./utils/server-safe-globals.js\";\nimport { MediaUIEvents, MediaUIAttributes } from \"./constants.js\";\nimport { t } from \"./utils/i18n.js\";\nimport {\n  getBooleanAttr,\n  getStringAttr,\n  setBooleanAttr,\n  setStringAttr\n} from \"./utils/element-utils.js\";\nconst pipIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 28 24\">\n  <path d=\"M24 3H4a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h20a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1Zm-1 16H5V5h18v14Zm-3-8h-7v5h7v-5Z\"/>\n</svg>`;\nfunction getSlotTemplateHTML(_attrs) {\n  return (\n    /*html*/\n    `\n    <style>\n      :host([${MediaUIAttributes.MEDIA_IS_PIP}]) slot[name=icon] slot:not([name=exit]) {\n        display: none !important;\n      }\n\n      :host(:not([${MediaUIAttributes.MEDIA_IS_PIP}])) slot[name=icon] slot:not([name=enter]) {\n        display: none !important;\n      }\n\n      :host([${MediaUIAttributes.MEDIA_IS_PIP}]) slot[name=tooltip-enter],\n      :host(:not([${MediaUIAttributes.MEDIA_IS_PIP}])) slot[name=tooltip-exit] {\n        display: none;\n      }\n    </style>\n\n    <slot name=\"icon\">\n      <slot name=\"enter\">${pipIcon}</slot>\n      <slot name=\"exit\">${pipIcon}</slot>\n    </slot>\n  `\n  );\n}\nfunction getTooltipContentHTML() {\n  return (\n    /*html*/\n    `\n    <slot name=\"tooltip-enter\">${t(\"Enter picture in picture mode\")}</slot>\n    <slot name=\"tooltip-exit\">${t(\"Exit picture in picture mode\")}</slot>\n  `\n  );\n}\nconst updateAriaLabel = (el) => {\n  const label = el.mediaIsPip ? t(\"exit picture in picture mode\") : t(\"enter picture in picture mode\");\n  el.setAttribute(\"aria-label\", label);\n};\nclass MediaPipButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_IS_PIP,\n      MediaUIAttributes.MEDIA_PIP_UNAVAILABLE\n    ];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    updateAriaLabel(this);\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n    if (attrName === MediaUIAttributes.MEDIA_IS_PIP) {\n      updateAriaLabel(this);\n    }\n  }\n  /**\n   * @type {string | undefined} Pip unavailability state\n   */\n  get mediaPipUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_PIP_UNAVAILABLE);\n  }\n  set mediaPipUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_PIP_UNAVAILABLE, value);\n  }\n  /**\n   * @type {boolean} Is the media currently playing picture-in-picture\n   */\n  get mediaIsPip() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_PIP);\n  }\n  set mediaIsPip(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_PIP, value);\n  }\n  handleClick() {\n    const eventName = this.mediaIsPip ? MediaUIEvents.MEDIA_EXIT_PIP_REQUEST : MediaUIEvents.MEDIA_ENTER_PIP_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\nMediaPipButton.getSlotTemplateHTML = getSlotTemplateHTML;\nMediaPipButton.getTooltipContentHTML = getTooltipContentHTML;\nif (!globalThis.customElements.get(\"media-pip-button\")) {\n  globalThis.customElements.define(\"media-pip-button\", MediaPipButton);\n}\nvar media_pip_button_default = MediaPipButton;\nexport {\n  media_pip_button_default as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}