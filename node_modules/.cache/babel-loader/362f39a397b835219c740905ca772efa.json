{"ast":null,"code":"import { globalThis } from \"../utils/server-safe-globals.js\";\nimport { MediaUIAttributes } from \"../constants.js\";\nimport { MediaChromeMenuButton } from \"./media-chrome-menu-button.js\";\nimport { getMediaController } from \"../utils/element-utils.js\";\nimport { areSubsOn, parseTextTracksStr, stringifyTextTrackList } from \"../utils/captions.js\";\nimport { t } from \"../utils/i18n.js\";\nconst ccIconOn = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M22.83 5.68a2.58 2.58 0 0 0-2.3-2.5c-3.62-.24-11.44-.24-15.06 0a2.58 2.58 0 0 0-2.3 2.5c-.23 4.21-.23 8.43 0 12.64a2.58 2.58 0 0 0 2.3 2.5c3.62.24 11.44.24 15.06 0a2.58 2.58 0 0 0 2.3-2.5c.23-4.21.23-8.43 0-12.64Zm-11.39 9.45a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.92 3.92 0 0 1 .92-2.77 3.18 3.18 0 0 1 2.43-1 2.94 2.94 0 0 1 2.13.78c.364.359.62.813.74 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.17 1.61 1.61 0 0 0-1.29.58 2.79 2.79 0 0 0-.5 1.89 3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.48 1.48 0 0 0 1-.37 2.1 2.1 0 0 0 .59-1.14l1.4.44a3.23 3.23 0 0 1-1.07 1.69Zm7.22 0a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.88 3.88 0 0 1 .93-2.77 3.14 3.14 0 0 1 2.42-1 3 3 0 0 1 2.16.82 2.8 2.8 0 0 1 .73 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.21 1.61 1.61 0 0 0-1.29.58A2.79 2.79 0 0 0 15 12a3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.44 1.44 0 0 0 1-.37 2.1 2.1 0 0 0 .6-1.15l1.4.44a3.17 3.17 0 0 1-1.1 1.7Z\"/>\n</svg>`;\nconst ccIconOff = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M17.73 14.09a1.4 1.4 0 0 1-1 .37 1.579 1.579 0 0 1-1.27-.58A3 3 0 0 1 15 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34A2.89 2.89 0 0 0 19 9.07a3 3 0 0 0-2.14-.78 3.14 3.14 0 0 0-2.42 1 3.91 3.91 0 0 0-.93 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.17 3.17 0 0 0 1.07-1.74l-1.4-.45c-.083.43-.3.822-.62 1.12Zm-7.22 0a1.43 1.43 0 0 1-1 .37 1.58 1.58 0 0 1-1.27-.58A3 3 0 0 1 7.76 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34a2.81 2.81 0 0 0-.74-1.32 2.94 2.94 0 0 0-2.13-.78 3.18 3.18 0 0 0-2.43 1 4 4 0 0 0-.92 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.23 3.23 0 0 0 1.07-1.74l-1.4-.45a2.06 2.06 0 0 1-.6 1.07Zm12.32-8.41a2.59 2.59 0 0 0-2.3-2.51C18.72 3.05 15.86 3 13 3c-2.86 0-5.72.05-7.53.17a2.59 2.59 0 0 0-2.3 2.51c-.23 4.207-.23 8.423 0 12.63a2.57 2.57 0 0 0 2.3 2.5c1.81.13 4.67.19 7.53.19 2.86 0 5.72-.06 7.53-.19a2.57 2.57 0 0 0 2.3-2.5c.23-4.207.23-8.423 0-12.63Zm-1.49 12.53a1.11 1.11 0 0 1-.91 1.11c-1.67.11-4.45.18-7.43.18-2.98 0-5.76-.07-7.43-.18a1.11 1.11 0 0 1-.91-1.11c-.21-4.14-.21-8.29 0-12.43a1.11 1.11 0 0 1 .91-1.11C7.24 4.56 10 4.49 13 4.49s5.76.07 7.43.18a1.11 1.11 0 0 1 .91 1.11c.21 4.14.21 8.29 0 12.43Z\"/>\n</svg>`;\nfunction getSlotTemplateHTML() {\n  return /*html*/`\n    <style>\n      :host([aria-checked=\"true\"]) slot[name=off] {\n        display: none !important;\n      }\n\n      ${/* Double negative, but safer if display doesn't equal 'block' */\n  \"\"}\n      :host(:not([aria-checked=\"true\"])) slot[name=on] {\n        display: none !important;\n      }\n\n      :host([aria-expanded=\"true\"]) slot[name=tooltip] {\n        display: none;\n      }\n    </style>\n\n    <slot name=\"icon\">\n      <slot name=\"on\">${ccIconOn}</slot>\n      <slot name=\"off\">${ccIconOff}</slot>\n    </slot>\n  `;\n}\nfunction getTooltipContentHTML() {\n  return t(\"Captions\");\n}\nconst updateAriaChecked = el => {\n  el.setAttribute(\"aria-checked\", areSubsOn(el).toString());\n};\nclass MediaCaptionsMenuButton extends MediaChromeMenuButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_SUBTITLES_LIST, MediaUIAttributes.MEDIA_SUBTITLES_SHOWING];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"aria-label\", t(\"closed captions\"));\n    updateAriaChecked(this);\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n    if (attrName === MediaUIAttributes.MEDIA_SUBTITLES_SHOWING) {\n      updateAriaChecked(this);\n    }\n  }\n  /**\n   * Returns the element with the id specified by the `invoketarget` attribute.\n   * @return {HTMLElement | null}\n   */\n  get invokeTargetElement() {\n    var _a;\n    if (this.invokeTarget != void 0) return super.invokeTargetElement;\n    return (_a = getMediaController(this)) == null ? void 0 : _a.querySelector(\"media-captions-menu\");\n  }\n  /**\n   * An array of TextTrack-like objects.\n   * Objects must have the properties: kind, language, and label.\n   */\n  get mediaSubtitlesList() {\n    return getSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_LIST);\n  }\n  set mediaSubtitlesList(list) {\n    setSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_LIST, list);\n  }\n  /**\n   * An array of TextTrack-like objects.\n   * Objects must have the properties: kind, language, and label.\n   */\n  get mediaSubtitlesShowing() {\n    return getSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_SHOWING);\n  }\n  set mediaSubtitlesShowing(list) {\n    setSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_SHOWING, list);\n  }\n}\nMediaCaptionsMenuButton.getSlotTemplateHTML = getSlotTemplateHTML;\nMediaCaptionsMenuButton.getTooltipContentHTML = getTooltipContentHTML;\nconst getSubtitlesListAttr = (el, attrName) => {\n  const attrVal = el.getAttribute(attrName);\n  return attrVal ? parseTextTracksStr(attrVal) : [];\n};\nconst setSubtitlesListAttr = (el, attrName, list) => {\n  if (!(list == null ? void 0 : list.length)) {\n    el.removeAttribute(attrName);\n    return;\n  }\n  const newValStr = stringifyTextTrackList(list);\n  const oldVal = el.getAttribute(attrName);\n  if (oldVal === newValStr) return;\n  el.setAttribute(attrName, newValStr);\n};\nif (!globalThis.customElements.get(\"media-captions-menu-button\")) {\n  globalThis.customElements.define(\"media-captions-menu-button\", MediaCaptionsMenuButton);\n}\nvar media_captions_menu_button_default = MediaCaptionsMenuButton;\nexport { MediaCaptionsMenuButton, media_captions_menu_button_default as default };","map":{"version":3,"names":["globalThis","MediaUIAttributes","MediaChromeMenuButton","getMediaController","areSubsOn","parseTextTracksStr","stringifyTextTrackList","t","ccIconOn","ccIconOff","getSlotTemplateHTML","getTooltipContentHTML","updateAriaChecked","el","setAttribute","toString","MediaCaptionsMenuButton","observedAttributes","MEDIA_SUBTITLES_LIST","MEDIA_SUBTITLES_SHOWING","connectedCallback","attributeChangedCallback","attrName","oldValue","newValue","invokeTargetElement","_a","invokeTarget","querySelector","mediaSubtitlesList","getSubtitlesListAttr","list","setSubtitlesListAttr","mediaSubtitlesShowing","attrVal","getAttribute","length","removeAttribute","newValStr","oldVal","customElements","get","define","media_captions_menu_button_default","default"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/media-chrome/dist/menu/media-captions-menu-button.js"],"sourcesContent":["import { globalThis } from \"../utils/server-safe-globals.js\";\nimport { MediaUIAttributes } from \"../constants.js\";\nimport { MediaChromeMenuButton } from \"./media-chrome-menu-button.js\";\nimport { getMediaController } from \"../utils/element-utils.js\";\nimport {\n  areSubsOn,\n  parseTextTracksStr,\n  stringifyTextTrackList\n} from \"../utils/captions.js\";\nimport { t } from \"../utils/i18n.js\";\nconst ccIconOn = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M22.83 5.68a2.58 2.58 0 0 0-2.3-2.5c-3.62-.24-11.44-.24-15.06 0a2.58 2.58 0 0 0-2.3 2.5c-.23 4.21-.23 8.43 0 12.64a2.58 2.58 0 0 0 2.3 2.5c3.62.24 11.44.24 15.06 0a2.58 2.58 0 0 0 2.3-2.5c.23-4.21.23-8.43 0-12.64Zm-11.39 9.45a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.92 3.92 0 0 1 .92-2.77 3.18 3.18 0 0 1 2.43-1 2.94 2.94 0 0 1 2.13.78c.364.359.62.813.74 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.17 1.61 1.61 0 0 0-1.29.58 2.79 2.79 0 0 0-.5 1.89 3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.48 1.48 0 0 0 1-.37 2.1 2.1 0 0 0 .59-1.14l1.4.44a3.23 3.23 0 0 1-1.07 1.69Zm7.22 0a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.88 3.88 0 0 1 .93-2.77 3.14 3.14 0 0 1 2.42-1 3 3 0 0 1 2.16.82 2.8 2.8 0 0 1 .73 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.21 1.61 1.61 0 0 0-1.29.58A2.79 2.79 0 0 0 15 12a3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.44 1.44 0 0 0 1-.37 2.1 2.1 0 0 0 .6-1.15l1.4.44a3.17 3.17 0 0 1-1.1 1.7Z\"/>\n</svg>`;\nconst ccIconOff = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M17.73 14.09a1.4 1.4 0 0 1-1 .37 1.579 1.579 0 0 1-1.27-.58A3 3 0 0 1 15 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34A2.89 2.89 0 0 0 19 9.07a3 3 0 0 0-2.14-.78 3.14 3.14 0 0 0-2.42 1 3.91 3.91 0 0 0-.93 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.17 3.17 0 0 0 1.07-1.74l-1.4-.45c-.083.43-.3.822-.62 1.12Zm-7.22 0a1.43 1.43 0 0 1-1 .37 1.58 1.58 0 0 1-1.27-.58A3 3 0 0 1 7.76 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34a2.81 2.81 0 0 0-.74-1.32 2.94 2.94 0 0 0-2.13-.78 3.18 3.18 0 0 0-2.43 1 4 4 0 0 0-.92 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.23 3.23 0 0 0 1.07-1.74l-1.4-.45a2.06 2.06 0 0 1-.6 1.07Zm12.32-8.41a2.59 2.59 0 0 0-2.3-2.51C18.72 3.05 15.86 3 13 3c-2.86 0-5.72.05-7.53.17a2.59 2.59 0 0 0-2.3 2.51c-.23 4.207-.23 8.423 0 12.63a2.57 2.57 0 0 0 2.3 2.5c1.81.13 4.67.19 7.53.19 2.86 0 5.72-.06 7.53-.19a2.57 2.57 0 0 0 2.3-2.5c.23-4.207.23-8.423 0-12.63Zm-1.49 12.53a1.11 1.11 0 0 1-.91 1.11c-1.67.11-4.45.18-7.43.18-2.98 0-5.76-.07-7.43-.18a1.11 1.11 0 0 1-.91-1.11c-.21-4.14-.21-8.29 0-12.43a1.11 1.11 0 0 1 .91-1.11C7.24 4.56 10 4.49 13 4.49s5.76.07 7.43.18a1.11 1.11 0 0 1 .91 1.11c.21 4.14.21 8.29 0 12.43Z\"/>\n</svg>`;\nfunction getSlotTemplateHTML() {\n  return (\n    /*html*/\n    `\n    <style>\n      :host([aria-checked=\"true\"]) slot[name=off] {\n        display: none !important;\n      }\n\n      ${/* Double negative, but safer if display doesn't equal 'block' */\n    \"\"}\n      :host(:not([aria-checked=\"true\"])) slot[name=on] {\n        display: none !important;\n      }\n\n      :host([aria-expanded=\"true\"]) slot[name=tooltip] {\n        display: none;\n      }\n    </style>\n\n    <slot name=\"icon\">\n      <slot name=\"on\">${ccIconOn}</slot>\n      <slot name=\"off\">${ccIconOff}</slot>\n    </slot>\n  `\n  );\n}\nfunction getTooltipContentHTML() {\n  return t(\"Captions\");\n}\nconst updateAriaChecked = (el) => {\n  el.setAttribute(\"aria-checked\", areSubsOn(el).toString());\n};\nclass MediaCaptionsMenuButton extends MediaChromeMenuButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_SUBTITLES_LIST,\n      MediaUIAttributes.MEDIA_SUBTITLES_SHOWING\n    ];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"aria-label\", t(\"closed captions\"));\n    updateAriaChecked(this);\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n    if (attrName === MediaUIAttributes.MEDIA_SUBTITLES_SHOWING) {\n      updateAriaChecked(this);\n    }\n  }\n  /**\n   * Returns the element with the id specified by the `invoketarget` attribute.\n   * @return {HTMLElement | null}\n   */\n  get invokeTargetElement() {\n    var _a;\n    if (this.invokeTarget != void 0)\n      return super.invokeTargetElement;\n    return (_a = getMediaController(this)) == null ? void 0 : _a.querySelector(\"media-captions-menu\");\n  }\n  /**\n   * An array of TextTrack-like objects.\n   * Objects must have the properties: kind, language, and label.\n   */\n  get mediaSubtitlesList() {\n    return getSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_LIST);\n  }\n  set mediaSubtitlesList(list) {\n    setSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_LIST, list);\n  }\n  /**\n   * An array of TextTrack-like objects.\n   * Objects must have the properties: kind, language, and label.\n   */\n  get mediaSubtitlesShowing() {\n    return getSubtitlesListAttr(\n      this,\n      MediaUIAttributes.MEDIA_SUBTITLES_SHOWING\n    );\n  }\n  set mediaSubtitlesShowing(list) {\n    setSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_SHOWING, list);\n  }\n}\nMediaCaptionsMenuButton.getSlotTemplateHTML = getSlotTemplateHTML;\nMediaCaptionsMenuButton.getTooltipContentHTML = getTooltipContentHTML;\nconst getSubtitlesListAttr = (el, attrName) => {\n  const attrVal = el.getAttribute(attrName);\n  return attrVal ? parseTextTracksStr(attrVal) : [];\n};\nconst setSubtitlesListAttr = (el, attrName, list) => {\n  if (!(list == null ? void 0 : list.length)) {\n    el.removeAttribute(attrName);\n    return;\n  }\n  const newValStr = stringifyTextTrackList(list);\n  const oldVal = el.getAttribute(attrName);\n  if (oldVal === newValStr)\n    return;\n  el.setAttribute(attrName, newValStr);\n};\nif (!globalThis.customElements.get(\"media-captions-menu-button\")) {\n  globalThis.customElements.define(\n    \"media-captions-menu-button\",\n    MediaCaptionsMenuButton\n  );\n}\nvar media_captions_menu_button_default = MediaCaptionsMenuButton;\nexport {\n  MediaCaptionsMenuButton,\n  media_captions_menu_button_default as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}