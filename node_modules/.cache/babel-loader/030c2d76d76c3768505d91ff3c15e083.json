{"ast":null,"code":"function stringifyRenditionList(renditions) {\n  return renditions == null ? void 0 : renditions.map(stringifyRendition).join(\" \");\n}\nfunction parseRenditionList(renditions) {\n  return renditions == null ? void 0 : renditions.split(/\\s+/).map(parseRendition);\n}\nfunction stringifyRendition(rendition) {\n  if (rendition) {\n    const {\n      id,\n      width,\n      height\n    } = rendition;\n    return [id, width, height].filter(a => a != null).join(\":\");\n  }\n}\nfunction parseRendition(rendition) {\n  if (rendition) {\n    const [id, width, height] = rendition.split(\":\");\n    return {\n      id,\n      width: +width,\n      height: +height\n    };\n  }\n}\nfunction stringifyAudioTrackList(audioTracks) {\n  return audioTracks == null ? void 0 : audioTracks.map(stringifyAudioTrack).join(\" \");\n}\nfunction parseAudioTrackList(audioTracks) {\n  return audioTracks == null ? void 0 : audioTracks.split(/\\s+/).map(parseAudioTrack);\n}\nfunction stringifyAudioTrack(audioTrack) {\n  if (audioTrack) {\n    const {\n      id,\n      kind,\n      language,\n      label\n    } = audioTrack;\n    return [id, kind, language, label].filter(a => a != null).join(\":\");\n  }\n}\nfunction parseAudioTrack(audioTrack) {\n  if (audioTrack) {\n    const [id, kind, language, label] = audioTrack.split(\":\");\n    return {\n      id,\n      kind,\n      language,\n      label\n    };\n  }\n}\nfunction dashedToCamel(word) {\n  return word.split(\"-\").map(function (x, i) {\n    return (i ? x[0].toUpperCase() : x[0].toLowerCase()) + x.slice(1).toLowerCase();\n  }).join(\"\");\n}\nfunction constToCamel(word) {\n  let upperFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return word.split(\"_\").map(function (x, i) {\n    return (i || upperFirst ? x[0].toUpperCase() : x[0].toLowerCase()) + x.slice(1).toLowerCase();\n  }).join(\"\");\n}\nfunction camelCase(name) {\n  return name.replace(/[-_]([a-z])/g, ($0, $1) => $1.toUpperCase());\n}\nfunction isValidNumber(x) {\n  return typeof x === \"number\" && !Number.isNaN(x) && Number.isFinite(x);\n}\nfunction isNumericString(str) {\n  if (typeof str != \"string\") return false;\n  return !isNaN(str) && !isNaN(parseFloat(str));\n}\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\nconst capitalize = str => str && str[0].toUpperCase() + str.slice(1);\nexport { camelCase, capitalize, constToCamel, dashedToCamel, delay, isNumericString, isValidNumber, parseAudioTrack, parseAudioTrackList, parseRendition, parseRenditionList, stringifyAudioTrack, stringifyAudioTrackList, stringifyRendition, stringifyRenditionList };","map":{"version":3,"names":["stringifyRenditionList","renditions","map","stringifyRendition","join","parseRenditionList","split","parseRendition","rendition","id","width","height","filter","a","stringifyAudioTrackList","audioTracks","stringifyAudioTrack","parseAudioTrackList","parseAudioTrack","audioTrack","kind","language","label","dashedToCamel","word","x","i","toUpperCase","toLowerCase","slice","constToCamel","upperFirst","arguments","length","undefined","camelCase","name","replace","$0","$1","isValidNumber","Number","isNaN","isFinite","isNumericString","str","parseFloat","delay","ms","Promise","resolve","setTimeout","capitalize"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/media-chrome/dist/utils/utils.js"],"sourcesContent":["function stringifyRenditionList(renditions) {\n  return renditions == null ? void 0 : renditions.map(stringifyRendition).join(\" \");\n}\nfunction parseRenditionList(renditions) {\n  return renditions == null ? void 0 : renditions.split(/\\s+/).map(parseRendition);\n}\nfunction stringifyRendition(rendition) {\n  if (rendition) {\n    const { id, width, height } = rendition;\n    return [id, width, height].filter((a) => a != null).join(\":\");\n  }\n}\nfunction parseRendition(rendition) {\n  if (rendition) {\n    const [id, width, height] = rendition.split(\":\");\n    return { id, width: +width, height: +height };\n  }\n}\nfunction stringifyAudioTrackList(audioTracks) {\n  return audioTracks == null ? void 0 : audioTracks.map(stringifyAudioTrack).join(\" \");\n}\nfunction parseAudioTrackList(audioTracks) {\n  return audioTracks == null ? void 0 : audioTracks.split(/\\s+/).map(parseAudioTrack);\n}\nfunction stringifyAudioTrack(audioTrack) {\n  if (audioTrack) {\n    const { id, kind, language, label } = audioTrack;\n    return [id, kind, language, label].filter((a) => a != null).join(\":\");\n  }\n}\nfunction parseAudioTrack(audioTrack) {\n  if (audioTrack) {\n    const [id, kind, language, label] = audioTrack.split(\":\");\n    return {\n      id,\n      kind,\n      language,\n      label\n    };\n  }\n}\nfunction dashedToCamel(word) {\n  return word.split(\"-\").map(function(x, i) {\n    return (i ? x[0].toUpperCase() : x[0].toLowerCase()) + x.slice(1).toLowerCase();\n  }).join(\"\");\n}\nfunction constToCamel(word, upperFirst = false) {\n  return word.split(\"_\").map(function(x, i) {\n    return (i || upperFirst ? x[0].toUpperCase() : x[0].toLowerCase()) + x.slice(1).toLowerCase();\n  }).join(\"\");\n}\nfunction camelCase(name) {\n  return name.replace(/[-_]([a-z])/g, ($0, $1) => $1.toUpperCase());\n}\nfunction isValidNumber(x) {\n  return typeof x === \"number\" && !Number.isNaN(x) && Number.isFinite(x);\n}\nfunction isNumericString(str) {\n  if (typeof str != \"string\")\n    return false;\n  return !isNaN(str) && !isNaN(parseFloat(str));\n}\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst capitalize = (str) => str && str[0].toUpperCase() + str.slice(1);\nexport {\n  camelCase,\n  capitalize,\n  constToCamel,\n  dashedToCamel,\n  delay,\n  isNumericString,\n  isValidNumber,\n  parseAudioTrack,\n  parseAudioTrackList,\n  parseRendition,\n  parseRenditionList,\n  stringifyAudioTrack,\n  stringifyAudioTrackList,\n  stringifyRendition,\n  stringifyRenditionList\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}