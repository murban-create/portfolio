{"ast":null,"code":"import { CustomVideoElement } from \"custom-media-element\";\nimport { MediaTracksMixin } from \"media-tracks\";\nimport Hls from \"hls.js/dist/hls.mjs\";\nconst HlsVideoMixin = superclass => {\n  return class HlsVideo extends superclass {\n    static shadowRootOptions = {\n      ...superclass.shadowRootOptions\n    };\n    static getTemplateHTML = function (attrs) {\n      let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const {\n        src,\n        ...rest\n      } = attrs;\n      return `\n        <script type=\"application/json\" id=\"config\">\n          ${JSON.stringify(props.config || {})}\n        </script>\n        ${superclass.getTemplateHTML(rest)}\n      `;\n    };\n    #airplaySourceEl = null;\n    #config = null;\n    constructor() {\n      super();\n      this.#upgradeProperty(\"config\");\n    }\n    get config() {\n      return this.#config;\n    }\n    set config(value) {\n      this.#config = value;\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      if (attrName !== \"src\") {\n        super.attributeChangedCallback(attrName, oldValue, newValue);\n      }\n      if (attrName === \"src\" && oldValue != newValue) {\n        this.load();\n      }\n    }\n    #destroy() {\n      var _a, _b;\n      (_a = this.#airplaySourceEl) == null ? void 0 : _a.remove();\n      (_b = this.nativeEl) == null ? void 0 : _b.removeEventListener(\"webkitcurrentplaybacktargetiswirelesschanged\", this.#toggleHlsLoad);\n      if (this.api) {\n        this.api.detachMedia();\n        this.api.destroy();\n        this.api = null;\n      }\n    }\n    async load() {\n      var _a, _b;\n      const isFirstLoad = !this.api;\n      this.#destroy();\n      if (!this.src) {\n        return;\n      }\n      if (isFirstLoad && !this.#config) {\n        this.#config = JSON.parse(((_a = this.shadowRoot.getElementById(\"config\")) == null ? void 0 : _a.textContent) || \"{}\");\n      }\n      if (Hls.isSupported()) {\n        this.api = new Hls({\n          // Mimic the media element with an Infinity duration for live streams.\n          liveDurationInfinity: true,\n          // Disable auto quality level/fragment loading.\n          autoStartLoad: false,\n          // Custom configuration for hls.js.\n          ...this.config\n        });\n        await Promise.resolve();\n        this.api.loadSource(this.src);\n        this.api.attachMedia(this.nativeEl);\n        switch (this.nativeEl.preload) {\n          case \"none\":\n            {\n              const loadSourceOnPlay = () => this.api.startLoad();\n              this.nativeEl.addEventListener(\"play\", loadSourceOnPlay, {\n                once: true\n              });\n              this.api.on(Hls.Events.DESTROYING, () => {\n                this.nativeEl.removeEventListener(\"play\", loadSourceOnPlay);\n              });\n              break;\n            }\n          case \"metadata\":\n            {\n              const originalLength = this.api.config.maxBufferLength;\n              const originalSize = this.api.config.maxBufferSize;\n              this.api.config.maxBufferLength = 1;\n              this.api.config.maxBufferSize = 1;\n              const increaseBufferOnPlay = () => {\n                this.api.config.maxBufferLength = originalLength;\n                this.api.config.maxBufferSize = originalSize;\n              };\n              this.nativeEl.addEventListener(\"play\", increaseBufferOnPlay, {\n                once: true\n              });\n              this.api.on(Hls.Events.DESTROYING, () => {\n                this.nativeEl.removeEventListener(\"play\", increaseBufferOnPlay);\n              });\n              this.api.startLoad();\n              break;\n            }\n          default:\n            this.api.startLoad();\n        }\n        if (this.nativeEl.webkitCurrentPlaybackTargetIsWireless) {\n          this.api.stopLoad();\n        }\n        this.nativeEl.addEventListener(\"webkitcurrentplaybacktargetiswirelesschanged\", this.#toggleHlsLoad);\n        this.#airplaySourceEl = document.createElement(\"source\");\n        this.#airplaySourceEl.setAttribute(\"type\", \"application/x-mpegURL\");\n        this.#airplaySourceEl.setAttribute(\"src\", this.src);\n        this.nativeEl.disableRemotePlayback = false;\n        this.nativeEl.append(this.#airplaySourceEl);\n        const levelIdMap = /* @__PURE__ */new WeakMap();\n        this.api.on(Hls.Events.MANIFEST_PARSED, (event, data) => {\n          if (this.nativeEl.autoplay && this.nativeEl.paused) {\n            this.nativeEl.play().catch(err => {\n              console.warn(\"Autoplay failed:\", err);\n            });\n          }\n          removeAllMediaTracks();\n          let videoTrack = this.videoTracks.getTrackById(\"main\");\n          if (!videoTrack) {\n            videoTrack = this.addVideoTrack(\"main\");\n            videoTrack.id = \"main\";\n            videoTrack.selected = true;\n          }\n          for (const [id, level] of data.levels.entries()) {\n            const videoRendition = videoTrack.addRendition(level.url[0], level.width, level.height, level.videoCodec, level.bitrate);\n            levelIdMap.set(level, `${id}`);\n            videoRendition.id = `${id}`;\n          }\n          for (let [id, a] of data.audioTracks.entries()) {\n            const kind = a.default ? \"main\" : \"alternative\";\n            const audioTrack = this.addAudioTrack(kind, a.name, a.lang);\n            audioTrack.id = `${id}`;\n            if (a.default) {\n              audioTrack.enabled = true;\n            }\n          }\n        });\n        this.audioTracks.addEventListener(\"change\", () => {\n          var _a2;\n          const audioTrackId = +((_a2 = [...this.audioTracks].find(t => t.enabled)) == null ? void 0 : _a2.id);\n          const availableIds = this.api.audioTracks.map(t => t.id);\n          if (audioTrackId != this.api.audioTrack && availableIds.includes(audioTrackId)) {\n            this.api.audioTrack = audioTrackId;\n          }\n        });\n        this.api.on(Hls.Events.LEVELS_UPDATED, (event, data) => {\n          const videoTrack = this.videoTracks[this.videoTracks.selectedIndex ?? 0];\n          if (!videoTrack) return;\n          const levelIds = data.levels.map(l => levelIdMap.get(l));\n          for (const rendition of this.videoRenditions) {\n            if (rendition.id && !levelIds.includes(rendition.id)) {\n              videoTrack.removeRendition(rendition);\n            }\n          }\n        });\n        const switchRendition = event => {\n          const level = event.target.selectedIndex;\n          if (level != this.api.nextLevel) {\n            this.api.nextLevel = level;\n          }\n        };\n        (_b = this.videoRenditions) == null ? void 0 : _b.addEventListener(\"change\", switchRendition);\n        const removeAllMediaTracks = () => {\n          for (const videoTrack of this.videoTracks) {\n            this.removeVideoTrack(videoTrack);\n          }\n          for (const audioTrack of this.audioTracks) {\n            this.removeAudioTrack(audioTrack);\n          }\n        };\n        this.api.once(Hls.Events.DESTROYING, removeAllMediaTracks);\n        return;\n      }\n      await Promise.resolve();\n      if (this.nativeEl.canPlayType(\"application/vnd.apple.mpegurl\")) {\n        this.nativeEl.src = this.src;\n      }\n    }\n    #toggleHlsLoad = () => {\n      var _a, _b, _c;\n      if ((_a = this.nativeEl) == null ? void 0 : _a.webkitCurrentPlaybackTargetIsWireless) {\n        (_b = this.api) == null ? void 0 : _b.stopLoad();\n      } else {\n        (_c = this.api) == null ? void 0 : _c.startLoad();\n      }\n    };\n    // This is a pattern to update property values that are set before\n    // the custom element is upgraded.\n    // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n    #upgradeProperty(prop) {\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        delete this[prop];\n        this[prop] = value;\n      }\n    }\n  };\n};\nconst HlsVideoElement = HlsVideoMixin(MediaTracksMixin(CustomVideoElement));\nif (globalThis.customElements && !globalThis.customElements.get(\"hls-video\")) {\n  globalThis.customElements.define(\"hls-video\", HlsVideoElement);\n}\nvar hls_video_element_default = HlsVideoElement;\nexport { Hls, HlsVideoElement, HlsVideoMixin, hls_video_element_default as default };","map":{"version":3,"names":["CustomVideoElement","MediaTracksMixin","Hls","HlsVideoMixin","superclass","HlsVideo","shadowRootOptions","getTemplateHTML","attrs","props","arguments","length","undefined","src","rest","JSON","stringify","config","airplaySourceEl","constructor","upgradeProperty","value","attributeChangedCallback","attrName","oldValue","newValue","load","destroy","#destroy","_a","_b","remove","nativeEl","removeEventListener","toggleHlsLoad","api","detachMedia","isFirstLoad","parse","shadowRoot","getElementById","textContent","isSupported","liveDurationInfinity","autoStartLoad","Promise","resolve","loadSource","attachMedia","preload","loadSourceOnPlay","startLoad","addEventListener","once","on","Events","DESTROYING","originalLength","maxBufferLength","originalSize","maxBufferSize","increaseBufferOnPlay","webkitCurrentPlaybackTargetIsWireless","stopLoad","document","createElement","setAttribute","disableRemotePlayback","append","levelIdMap","WeakMap","MANIFEST_PARSED","event","data","autoplay","paused","play","catch","err","console","warn","removeAllMediaTracks","videoTrack","videoTracks","getTrackById","addVideoTrack","id","selected","level","levels","entries","videoRendition","addRendition","url","width","height","videoCodec","bitrate","set","a","audioTracks","kind","default","audioTrack","addAudioTrack","name","lang","enabled","_a2","audioTrackId","find","t","availableIds","map","includes","LEVELS_UPDATED","selectedIndex","levelIds","l","get","rendition","videoRenditions","removeRendition","switchRendition","target","nextLevel","removeVideoTrack","removeAudioTrack","canPlayType","#toggleHlsLoad","_c","#upgradeProperty","prop","Object","prototype","hasOwnProperty","call","HlsVideoElement","globalThis","customElements","define","hls_video_element_default"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/hls-video-element/dist/hls-video-element.js"],"sourcesContent":["import { CustomVideoElement } from \"custom-media-element\";\nimport { MediaTracksMixin } from \"media-tracks\";\nimport Hls from \"hls.js/dist/hls.mjs\";\nconst HlsVideoMixin = (superclass) => {\n  return class HlsVideo extends superclass {\n    static shadowRootOptions = { ...superclass.shadowRootOptions };\n    static getTemplateHTML = (attrs, props = {}) => {\n      const { src, ...rest } = attrs;\n      return `\n        <script type=\"application/json\" id=\"config\">\n          ${JSON.stringify(props.config || {})}\n        </script>\n        ${superclass.getTemplateHTML(rest)}\n      `;\n    };\n    #airplaySourceEl = null;\n    #config = null;\n    constructor() {\n      super();\n      this.#upgradeProperty(\"config\");\n    }\n    get config() {\n      return this.#config;\n    }\n    set config(value) {\n      this.#config = value;\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      if (attrName !== \"src\") {\n        super.attributeChangedCallback(attrName, oldValue, newValue);\n      }\n      if (attrName === \"src\" && oldValue != newValue) {\n        this.load();\n      }\n    }\n    #destroy() {\n      var _a, _b;\n      (_a = this.#airplaySourceEl) == null ? void 0 : _a.remove();\n      (_b = this.nativeEl) == null ? void 0 : _b.removeEventListener(\n        \"webkitcurrentplaybacktargetiswirelesschanged\",\n        this.#toggleHlsLoad\n      );\n      if (this.api) {\n        this.api.detachMedia();\n        this.api.destroy();\n        this.api = null;\n      }\n    }\n    async load() {\n      var _a, _b;\n      const isFirstLoad = !this.api;\n      this.#destroy();\n      if (!this.src) {\n        return;\n      }\n      if (isFirstLoad && !this.#config) {\n        this.#config = JSON.parse(((_a = this.shadowRoot.getElementById(\"config\")) == null ? void 0 : _a.textContent) || \"{}\");\n      }\n      if (Hls.isSupported()) {\n        this.api = new Hls({\n          // Mimic the media element with an Infinity duration for live streams.\n          liveDurationInfinity: true,\n          // Disable auto quality level/fragment loading.\n          autoStartLoad: false,\n          // Custom configuration for hls.js.\n          ...this.config\n        });\n        await Promise.resolve();\n        this.api.loadSource(this.src);\n        this.api.attachMedia(this.nativeEl);\n        switch (this.nativeEl.preload) {\n          case \"none\": {\n            const loadSourceOnPlay = () => this.api.startLoad();\n            this.nativeEl.addEventListener(\"play\", loadSourceOnPlay, {\n              once: true\n            });\n            this.api.on(Hls.Events.DESTROYING, () => {\n              this.nativeEl.removeEventListener(\"play\", loadSourceOnPlay);\n            });\n            break;\n          }\n          case \"metadata\": {\n            const originalLength = this.api.config.maxBufferLength;\n            const originalSize = this.api.config.maxBufferSize;\n            this.api.config.maxBufferLength = 1;\n            this.api.config.maxBufferSize = 1;\n            const increaseBufferOnPlay = () => {\n              this.api.config.maxBufferLength = originalLength;\n              this.api.config.maxBufferSize = originalSize;\n            };\n            this.nativeEl.addEventListener(\"play\", increaseBufferOnPlay, {\n              once: true\n            });\n            this.api.on(Hls.Events.DESTROYING, () => {\n              this.nativeEl.removeEventListener(\"play\", increaseBufferOnPlay);\n            });\n            this.api.startLoad();\n            break;\n          }\n          default:\n            this.api.startLoad();\n        }\n        if (this.nativeEl.webkitCurrentPlaybackTargetIsWireless) {\n          this.api.stopLoad();\n        }\n        this.nativeEl.addEventListener(\n          \"webkitcurrentplaybacktargetiswirelesschanged\",\n          this.#toggleHlsLoad\n        );\n        this.#airplaySourceEl = document.createElement(\"source\");\n        this.#airplaySourceEl.setAttribute(\"type\", \"application/x-mpegURL\");\n        this.#airplaySourceEl.setAttribute(\"src\", this.src);\n        this.nativeEl.disableRemotePlayback = false;\n        this.nativeEl.append(this.#airplaySourceEl);\n        const levelIdMap = /* @__PURE__ */ new WeakMap();\n        this.api.on(Hls.Events.MANIFEST_PARSED, (event, data) => {\n          if (this.nativeEl.autoplay && this.nativeEl.paused) {\n            this.nativeEl.play().catch((err) => {\n              console.warn(\"Autoplay failed:\", err);\n            });\n          }\n          removeAllMediaTracks();\n          let videoTrack = this.videoTracks.getTrackById(\"main\");\n          if (!videoTrack) {\n            videoTrack = this.addVideoTrack(\"main\");\n            videoTrack.id = \"main\";\n            videoTrack.selected = true;\n          }\n          for (const [id, level] of data.levels.entries()) {\n            const videoRendition = videoTrack.addRendition(\n              level.url[0],\n              level.width,\n              level.height,\n              level.videoCodec,\n              level.bitrate\n            );\n            levelIdMap.set(level, `${id}`);\n            videoRendition.id = `${id}`;\n          }\n          for (let [id, a] of data.audioTracks.entries()) {\n            const kind = a.default ? \"main\" : \"alternative\";\n            const audioTrack = this.addAudioTrack(kind, a.name, a.lang);\n            audioTrack.id = `${id}`;\n            if (a.default) {\n              audioTrack.enabled = true;\n            }\n          }\n        });\n        this.audioTracks.addEventListener(\"change\", () => {\n          var _a2;\n          const audioTrackId = +((_a2 = [...this.audioTracks].find((t) => t.enabled)) == null ? void 0 : _a2.id);\n          const availableIds = this.api.audioTracks.map((t) => t.id);\n          if (audioTrackId != this.api.audioTrack && availableIds.includes(audioTrackId)) {\n            this.api.audioTrack = audioTrackId;\n          }\n        });\n        this.api.on(Hls.Events.LEVELS_UPDATED, (event, data) => {\n          const videoTrack = this.videoTracks[this.videoTracks.selectedIndex ?? 0];\n          if (!videoTrack) return;\n          const levelIds = data.levels.map((l) => levelIdMap.get(l));\n          for (const rendition of this.videoRenditions) {\n            if (rendition.id && !levelIds.includes(rendition.id)) {\n              videoTrack.removeRendition(rendition);\n            }\n          }\n        });\n        const switchRendition = (event) => {\n          const level = event.target.selectedIndex;\n          if (level != this.api.nextLevel) {\n            this.api.nextLevel = level;\n          }\n        };\n        (_b = this.videoRenditions) == null ? void 0 : _b.addEventListener(\"change\", switchRendition);\n        const removeAllMediaTracks = () => {\n          for (const videoTrack of this.videoTracks) {\n            this.removeVideoTrack(videoTrack);\n          }\n          for (const audioTrack of this.audioTracks) {\n            this.removeAudioTrack(audioTrack);\n          }\n        };\n        this.api.once(Hls.Events.DESTROYING, removeAllMediaTracks);\n        return;\n      }\n      await Promise.resolve();\n      if (this.nativeEl.canPlayType(\"application/vnd.apple.mpegurl\")) {\n        this.nativeEl.src = this.src;\n      }\n    }\n    #toggleHlsLoad = () => {\n      var _a, _b, _c;\n      if ((_a = this.nativeEl) == null ? void 0 : _a.webkitCurrentPlaybackTargetIsWireless) {\n        (_b = this.api) == null ? void 0 : _b.stopLoad();\n      } else {\n        (_c = this.api) == null ? void 0 : _c.startLoad();\n      }\n    };\n    // This is a pattern to update property values that are set before\n    // the custom element is upgraded.\n    // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n    #upgradeProperty(prop) {\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        delete this[prop];\n        this[prop] = value;\n      }\n    }\n  };\n};\nconst HlsVideoElement = HlsVideoMixin(MediaTracksMixin(CustomVideoElement));\nif (globalThis.customElements && !globalThis.customElements.get(\"hls-video\")) {\n  globalThis.customElements.define(\"hls-video\", HlsVideoElement);\n}\nvar hls_video_element_default = HlsVideoElement;\nexport {\n  Hls,\n  HlsVideoElement,\n  HlsVideoMixin,\n  hls_video_element_default as default\n};\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,gBAAgB,QAAQ,cAAc;AAC/C,OAAOC,GAAG,MAAM,qBAAqB;AACrC,MAAMC,aAAa,GAAIC,UAAU,IAAK;EACpC,OAAO,MAAMC,QAAQ,SAASD,UAAU,CAAC;IACvC,OAAOE,iBAAiB,GAAG;MAAE,GAAGF,UAAU,CAACE;IAAkB,CAAC;IAC9D,OAAOC,eAAe,GAAG,SAAAA,CAACC,KAAK,EAAiB;MAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MACzC,MAAM;QAAEG,GAAG;QAAE,GAAGC;MAAK,CAAC,GAAGN,KAAK;MAC9B,OAAO;AACb;AACA,YAAYO,IAAI,CAACC,SAAS,CAACP,KAAK,CAACQ,MAAM,IAAI,CAAC,CAAC,CAAC;AAC9C;AACA,UAAUb,UAAU,CAACG,eAAe,CAACO,IAAI,CAAC;AAC1C,OAAO;IACH,CAAC;IACD,CAACI,eAAe,GAAG,IAAI;IACvB,CAACD,MAAM,GAAG,IAAI;IACdE,WAAWA,CAAA,EAAG;MACZ,KAAK,CAAC,CAAC;MACP,IAAI,CAAC,CAACC,eAAe,CAAC,QAAQ,CAAC;IACjC;IACA,IAAIH,MAAMA,CAAA,EAAG;MACX,OAAO,IAAI,CAAC,CAACA,MAAM;IACrB;IACA,IAAIA,MAAMA,CAACI,KAAK,EAAE;MAChB,IAAI,CAAC,CAACJ,MAAM,GAAGI,KAAK;IACtB;IACAC,wBAAwBA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;MACrD,IAAIF,QAAQ,KAAK,KAAK,EAAE;QACtB,KAAK,CAACD,wBAAwB,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;MAC9D;MACA,IAAIF,QAAQ,KAAK,KAAK,IAAIC,QAAQ,IAAIC,QAAQ,EAAE;QAC9C,IAAI,CAACC,IAAI,CAAC,CAAC;MACb;IACF;IACA,CAACC,OAAOC,CAAA,EAAG;MACT,IAAIC,EAAE,EAAEC,EAAE;MACV,CAACD,EAAE,GAAG,IAAI,CAAC,CAACX,eAAe,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGW,EAAE,CAACE,MAAM,CAAC,CAAC;MAC3D,CAACD,EAAE,GAAG,IAAI,CAACE,QAAQ,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGF,EAAE,CAACG,mBAAmB,CAC5D,8CAA8C,EAC9C,IAAI,CAAC,CAACC,aACR,CAAC;MACD,IAAI,IAAI,CAACC,GAAG,EAAE;QACZ,IAAI,CAACA,GAAG,CAACC,WAAW,CAAC,CAAC;QACtB,IAAI,CAACD,GAAG,CAACR,OAAO,CAAC,CAAC;QAClB,IAAI,CAACQ,GAAG,GAAG,IAAI;MACjB;IACF;IACA,MAAMT,IAAIA,CAAA,EAAG;MACX,IAAIG,EAAE,EAAEC,EAAE;MACV,MAAMO,WAAW,GAAG,CAAC,IAAI,CAACF,GAAG;MAC7B,IAAI,CAAC,CAACR,OAAO,CAAC,CAAC;MACf,IAAI,CAAC,IAAI,CAACd,GAAG,EAAE;QACb;MACF;MACA,IAAIwB,WAAW,IAAI,CAAC,IAAI,CAAC,CAACpB,MAAM,EAAE;QAChC,IAAI,CAAC,CAACA,MAAM,GAAGF,IAAI,CAACuB,KAAK,CAAC,CAAC,CAACT,EAAE,GAAG,IAAI,CAACU,UAAU,CAACC,cAAc,CAAC,QAAQ,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGX,EAAE,CAACY,WAAW,KAAK,IAAI,CAAC;MACxH;MACA,IAAIvC,GAAG,CAACwC,WAAW,CAAC,CAAC,EAAE;QACrB,IAAI,CAACP,GAAG,GAAG,IAAIjC,GAAG,CAAC;UACjB;UACAyC,oBAAoB,EAAE,IAAI;UAC1B;UACAC,aAAa,EAAE,KAAK;UACpB;UACA,GAAG,IAAI,CAAC3B;QACV,CAAC,CAAC;QACF,MAAM4B,OAAO,CAACC,OAAO,CAAC,CAAC;QACvB,IAAI,CAACX,GAAG,CAACY,UAAU,CAAC,IAAI,CAAClC,GAAG,CAAC;QAC7B,IAAI,CAACsB,GAAG,CAACa,WAAW,CAAC,IAAI,CAAChB,QAAQ,CAAC;QACnC,QAAQ,IAAI,CAACA,QAAQ,CAACiB,OAAO;UAC3B,KAAK,MAAM;YAAE;cACX,MAAMC,gBAAgB,GAAGA,CAAA,KAAM,IAAI,CAACf,GAAG,CAACgB,SAAS,CAAC,CAAC;cACnD,IAAI,CAACnB,QAAQ,CAACoB,gBAAgB,CAAC,MAAM,EAAEF,gBAAgB,EAAE;gBACvDG,IAAI,EAAE;cACR,CAAC,CAAC;cACF,IAAI,CAAClB,GAAG,CAACmB,EAAE,CAACpD,GAAG,CAACqD,MAAM,CAACC,UAAU,EAAE,MAAM;gBACvC,IAAI,CAACxB,QAAQ,CAACC,mBAAmB,CAAC,MAAM,EAAEiB,gBAAgB,CAAC;cAC7D,CAAC,CAAC;cACF;YACF;UACA,KAAK,UAAU;YAAE;cACf,MAAMO,cAAc,GAAG,IAAI,CAACtB,GAAG,CAAClB,MAAM,CAACyC,eAAe;cACtD,MAAMC,YAAY,GAAG,IAAI,CAACxB,GAAG,CAAClB,MAAM,CAAC2C,aAAa;cAClD,IAAI,CAACzB,GAAG,CAAClB,MAAM,CAACyC,eAAe,GAAG,CAAC;cACnC,IAAI,CAACvB,GAAG,CAAClB,MAAM,CAAC2C,aAAa,GAAG,CAAC;cACjC,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;gBACjC,IAAI,CAAC1B,GAAG,CAAClB,MAAM,CAACyC,eAAe,GAAGD,cAAc;gBAChD,IAAI,CAACtB,GAAG,CAAClB,MAAM,CAAC2C,aAAa,GAAGD,YAAY;cAC9C,CAAC;cACD,IAAI,CAAC3B,QAAQ,CAACoB,gBAAgB,CAAC,MAAM,EAAES,oBAAoB,EAAE;gBAC3DR,IAAI,EAAE;cACR,CAAC,CAAC;cACF,IAAI,CAAClB,GAAG,CAACmB,EAAE,CAACpD,GAAG,CAACqD,MAAM,CAACC,UAAU,EAAE,MAAM;gBACvC,IAAI,CAACxB,QAAQ,CAACC,mBAAmB,CAAC,MAAM,EAAE4B,oBAAoB,CAAC;cACjE,CAAC,CAAC;cACF,IAAI,CAAC1B,GAAG,CAACgB,SAAS,CAAC,CAAC;cACpB;YACF;UACA;YACE,IAAI,CAAChB,GAAG,CAACgB,SAAS,CAAC,CAAC;QACxB;QACA,IAAI,IAAI,CAACnB,QAAQ,CAAC8B,qCAAqC,EAAE;UACvD,IAAI,CAAC3B,GAAG,CAAC4B,QAAQ,CAAC,CAAC;QACrB;QACA,IAAI,CAAC/B,QAAQ,CAACoB,gBAAgB,CAC5B,8CAA8C,EAC9C,IAAI,CAAC,CAAClB,aACR,CAAC;QACD,IAAI,CAAC,CAAChB,eAAe,GAAG8C,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QACxD,IAAI,CAAC,CAAC/C,eAAe,CAACgD,YAAY,CAAC,MAAM,EAAE,uBAAuB,CAAC;QACnE,IAAI,CAAC,CAAChD,eAAe,CAACgD,YAAY,CAAC,KAAK,EAAE,IAAI,CAACrD,GAAG,CAAC;QACnD,IAAI,CAACmB,QAAQ,CAACmC,qBAAqB,GAAG,KAAK;QAC3C,IAAI,CAACnC,QAAQ,CAACoC,MAAM,CAAC,IAAI,CAAC,CAAClD,eAAe,CAAC;QAC3C,MAAMmD,UAAU,GAAG,eAAgB,IAAIC,OAAO,CAAC,CAAC;QAChD,IAAI,CAACnC,GAAG,CAACmB,EAAE,CAACpD,GAAG,CAACqD,MAAM,CAACgB,eAAe,EAAE,CAACC,KAAK,EAAEC,IAAI,KAAK;UACvD,IAAI,IAAI,CAACzC,QAAQ,CAAC0C,QAAQ,IAAI,IAAI,CAAC1C,QAAQ,CAAC2C,MAAM,EAAE;YAClD,IAAI,CAAC3C,QAAQ,CAAC4C,IAAI,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;cAClCC,OAAO,CAACC,IAAI,CAAC,kBAAkB,EAAEF,GAAG,CAAC;YACvC,CAAC,CAAC;UACJ;UACAG,oBAAoB,CAAC,CAAC;UACtB,IAAIC,UAAU,GAAG,IAAI,CAACC,WAAW,CAACC,YAAY,CAAC,MAAM,CAAC;UACtD,IAAI,CAACF,UAAU,EAAE;YACfA,UAAU,GAAG,IAAI,CAACG,aAAa,CAAC,MAAM,CAAC;YACvCH,UAAU,CAACI,EAAE,GAAG,MAAM;YACtBJ,UAAU,CAACK,QAAQ,GAAG,IAAI;UAC5B;UACA,KAAK,MAAM,CAACD,EAAE,EAAEE,KAAK,CAAC,IAAIf,IAAI,CAACgB,MAAM,CAACC,OAAO,CAAC,CAAC,EAAE;YAC/C,MAAMC,cAAc,GAAGT,UAAU,CAACU,YAAY,CAC5CJ,KAAK,CAACK,GAAG,CAAC,CAAC,CAAC,EACZL,KAAK,CAACM,KAAK,EACXN,KAAK,CAACO,MAAM,EACZP,KAAK,CAACQ,UAAU,EAChBR,KAAK,CAACS,OACR,CAAC;YACD5B,UAAU,CAAC6B,GAAG,CAACV,KAAK,EAAE,GAAGF,EAAE,EAAE,CAAC;YAC9BK,cAAc,CAACL,EAAE,GAAG,GAAGA,EAAE,EAAE;UAC7B;UACA,KAAK,IAAI,CAACA,EAAE,EAAEa,CAAC,CAAC,IAAI1B,IAAI,CAAC2B,WAAW,CAACV,OAAO,CAAC,CAAC,EAAE;YAC9C,MAAMW,IAAI,GAAGF,CAAC,CAACG,OAAO,GAAG,MAAM,GAAG,aAAa;YAC/C,MAAMC,UAAU,GAAG,IAAI,CAACC,aAAa,CAACH,IAAI,EAAEF,CAAC,CAACM,IAAI,EAAEN,CAAC,CAACO,IAAI,CAAC;YAC3DH,UAAU,CAACjB,EAAE,GAAG,GAAGA,EAAE,EAAE;YACvB,IAAIa,CAAC,CAACG,OAAO,EAAE;cACbC,UAAU,CAACI,OAAO,GAAG,IAAI;YAC3B;UACF;QACF,CAAC,CAAC;QACF,IAAI,CAACP,WAAW,CAAChD,gBAAgB,CAAC,QAAQ,EAAE,MAAM;UAChD,IAAIwD,GAAG;UACP,MAAMC,YAAY,GAAG,EAAE,CAACD,GAAG,GAAG,CAAC,GAAG,IAAI,CAACR,WAAW,CAAC,CAACU,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACJ,OAAO,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGC,GAAG,CAACtB,EAAE,CAAC;UACtG,MAAM0B,YAAY,GAAG,IAAI,CAAC7E,GAAG,CAACiE,WAAW,CAACa,GAAG,CAAEF,CAAC,IAAKA,CAAC,CAACzB,EAAE,CAAC;UAC1D,IAAIuB,YAAY,IAAI,IAAI,CAAC1E,GAAG,CAACoE,UAAU,IAAIS,YAAY,CAACE,QAAQ,CAACL,YAAY,CAAC,EAAE;YAC9E,IAAI,CAAC1E,GAAG,CAACoE,UAAU,GAAGM,YAAY;UACpC;QACF,CAAC,CAAC;QACF,IAAI,CAAC1E,GAAG,CAACmB,EAAE,CAACpD,GAAG,CAACqD,MAAM,CAAC4D,cAAc,EAAE,CAAC3C,KAAK,EAAEC,IAAI,KAAK;UACtD,MAAMS,UAAU,GAAG,IAAI,CAACC,WAAW,CAAC,IAAI,CAACA,WAAW,CAACiC,aAAa,IAAI,CAAC,CAAC;UACxE,IAAI,CAAClC,UAAU,EAAE;UACjB,MAAMmC,QAAQ,GAAG5C,IAAI,CAACgB,MAAM,CAACwB,GAAG,CAAEK,CAAC,IAAKjD,UAAU,CAACkD,GAAG,CAACD,CAAC,CAAC,CAAC;UAC1D,KAAK,MAAME,SAAS,IAAI,IAAI,CAACC,eAAe,EAAE;YAC5C,IAAID,SAAS,CAAClC,EAAE,IAAI,CAAC+B,QAAQ,CAACH,QAAQ,CAACM,SAAS,CAAClC,EAAE,CAAC,EAAE;cACpDJ,UAAU,CAACwC,eAAe,CAACF,SAAS,CAAC;YACvC;UACF;QACF,CAAC,CAAC;QACF,MAAMG,eAAe,GAAInD,KAAK,IAAK;UACjC,MAAMgB,KAAK,GAAGhB,KAAK,CAACoD,MAAM,CAACR,aAAa;UACxC,IAAI5B,KAAK,IAAI,IAAI,CAACrD,GAAG,CAAC0F,SAAS,EAAE;YAC/B,IAAI,CAAC1F,GAAG,CAAC0F,SAAS,GAAGrC,KAAK;UAC5B;QACF,CAAC;QACD,CAAC1D,EAAE,GAAG,IAAI,CAAC2F,eAAe,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG3F,EAAE,CAACsB,gBAAgB,CAAC,QAAQ,EAAEuE,eAAe,CAAC;QAC7F,MAAM1C,oBAAoB,GAAGA,CAAA,KAAM;UACjC,KAAK,MAAMC,UAAU,IAAI,IAAI,CAACC,WAAW,EAAE;YACzC,IAAI,CAAC2C,gBAAgB,CAAC5C,UAAU,CAAC;UACnC;UACA,KAAK,MAAMqB,UAAU,IAAI,IAAI,CAACH,WAAW,EAAE;YACzC,IAAI,CAAC2B,gBAAgB,CAACxB,UAAU,CAAC;UACnC;QACF,CAAC;QACD,IAAI,CAACpE,GAAG,CAACkB,IAAI,CAACnD,GAAG,CAACqD,MAAM,CAACC,UAAU,EAAEyB,oBAAoB,CAAC;QAC1D;MACF;MACA,MAAMpC,OAAO,CAACC,OAAO,CAAC,CAAC;MACvB,IAAI,IAAI,CAACd,QAAQ,CAACgG,WAAW,CAAC,+BAA+B,CAAC,EAAE;QAC9D,IAAI,CAAChG,QAAQ,CAACnB,GAAG,GAAG,IAAI,CAACA,GAAG;MAC9B;IACF;IACA,CAACqB,aAAa,GAAG+F,CAAA,KAAM;MACrB,IAAIpG,EAAE,EAAEC,EAAE,EAAEoG,EAAE;MACd,IAAI,CAACrG,EAAE,GAAG,IAAI,CAACG,QAAQ,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGH,EAAE,CAACiC,qCAAqC,EAAE;QACpF,CAAChC,EAAE,GAAG,IAAI,CAACK,GAAG,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGL,EAAE,CAACiC,QAAQ,CAAC,CAAC;MAClD,CAAC,MAAM;QACL,CAACmE,EAAE,GAAG,IAAI,CAAC/F,GAAG,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG+F,EAAE,CAAC/E,SAAS,CAAC,CAAC;MACnD;IACF,CAAC;IACD;IACA;IACA;IACA,CAAC/B,eAAe+G,CAACC,IAAI,EAAE;MACrB,IAAIC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC,IAAI,EAAEJ,IAAI,CAAC,EAAE;QACpD,MAAM/G,KAAK,GAAG,IAAI,CAAC+G,IAAI,CAAC;QACxB,OAAO,IAAI,CAACA,IAAI,CAAC;QACjB,IAAI,CAACA,IAAI,CAAC,GAAG/G,KAAK;MACpB;IACF;EACF,CAAC;AACH,CAAC;AACD,MAAMoH,eAAe,GAAGtI,aAAa,CAACF,gBAAgB,CAACD,kBAAkB,CAAC,CAAC;AAC3E,IAAI0I,UAAU,CAACC,cAAc,IAAI,CAACD,UAAU,CAACC,cAAc,CAACpB,GAAG,CAAC,WAAW,CAAC,EAAE;EAC5EmB,UAAU,CAACC,cAAc,CAACC,MAAM,CAAC,WAAW,EAAEH,eAAe,CAAC;AAChE;AACA,IAAII,yBAAyB,GAAGJ,eAAe;AAC/C,SACEvI,GAAG,EACHuI,eAAe,EACftI,aAAa,EACb0I,yBAAyB,IAAIvC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}