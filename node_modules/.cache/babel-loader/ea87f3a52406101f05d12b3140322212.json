{"ast":null,"code":"const Events = [\"abort\", \"canplay\", \"canplaythrough\", \"durationchange\", \"emptied\", \"encrypted\", \"ended\", \"error\", \"loadeddata\", \"loadedmetadata\", \"loadstart\", \"pause\", \"play\", \"playing\", \"progress\", \"ratechange\", \"seeked\", \"seeking\", \"stalled\", \"suspend\", \"timeupdate\", \"volumechange\", \"waiting\", \"waitingforkey\", \"resize\", \"enterpictureinpicture\", \"leavepictureinpicture\", \"webkitbeginfullscreen\", \"webkitendfullscreen\", \"webkitpresentationmodechanged\"];\nconst Attributes = [\"autopictureinpicture\", \"disablepictureinpicture\", \"disableremoteplayback\", \"autoplay\", \"controls\", \"controlslist\", \"crossorigin\", \"loop\", \"muted\", \"playsinline\", \"poster\", \"preload\", \"src\"];\nfunction getAudioTemplateHTML(attrs) {\n  return /*html*/`\n    <style>\n      :host {\n        display: inline-flex;\n        line-height: 0;\n        flex-direction: column;\n        justify-content: end;\n      }\n\n      audio {\n        width: 100%;\n      }\n    </style>\n    <slot name=\"media\">\n      <audio${serializeAttributes(attrs)}></audio>\n    </slot>\n    <slot></slot>\n  `;\n}\nfunction getVideoTemplateHTML(attrs) {\n  return /*html*/`\n    <style>\n      :host {\n        display: inline-block;\n        line-height: 0;\n      }\n\n      video {\n        max-width: 100%;\n        max-height: 100%;\n        min-width: 100%;\n        min-height: 100%;\n        object-fit: var(--media-object-fit, contain);\n        object-position: var(--media-object-position, 50% 50%);\n      }\n\n      video::-webkit-media-text-track-container {\n        transform: var(--media-webkit-text-track-transform);\n        transition: var(--media-webkit-text-track-transition);\n      }\n    </style>\n    <slot name=\"media\">\n      <video${serializeAttributes(attrs)}></video>\n    </slot>\n    <slot></slot>\n  `;\n}\nfunction CustomMediaMixin(superclass, _ref) {\n  var _globalThis$document, _globalThis$document$;\n  let {\n    tag,\n    is\n  } = _ref;\n  const nativeElTest = (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : (_globalThis$document$ = _globalThis$document.createElement) === null || _globalThis$document$ === void 0 ? void 0 : _globalThis$document$.call(_globalThis$document, tag, {\n    is\n  });\n  const nativeElProps = nativeElTest ? getNativeElProps(nativeElTest) : [];\n  return class CustomMedia extends superclass {\n    static getTemplateHTML = tag.endsWith(\"audio\") ? getAudioTemplateHTML : getVideoTemplateHTML;\n    static shadowRootOptions = {\n      mode: \"open\"\n    };\n    static Events = Events;\n    static #isDefined = false;\n    static get observedAttributes() {\n      var _nativeElTest$constru;\n      CustomMedia.#define();\n      const natAttrs = (nativeElTest === null || nativeElTest === void 0 ? void 0 : (_nativeElTest$constru = nativeElTest.constructor) === null || _nativeElTest$constru === void 0 ? void 0 : _nativeElTest$constru.observedAttributes) ?? [];\n      return [...natAttrs, ...Attributes];\n    }\n    static #define() {\n      if (this.#isDefined) return;\n      this.#isDefined = true;\n      const propsToAttrs = new Set(this.observedAttributes);\n      propsToAttrs.delete(\"muted\");\n      for (const prop of nativeElProps) {\n        if (prop in this.prototype) continue;\n        if (typeof nativeElTest[prop] === \"function\") {\n          this.prototype[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            this.#init();\n            const fn = () => {\n              var _this$nativeEl;\n              if (this.call) return this.call(prop, ...args);\n              const nativeFn = (_this$nativeEl = this.nativeEl) === null || _this$nativeEl === void 0 ? void 0 : _this$nativeEl[prop];\n              return nativeFn === null || nativeFn === void 0 ? void 0 : nativeFn.apply(this.nativeEl, args);\n            };\n            return fn();\n          };\n        } else {\n          const config = {\n            get() {\n              var _this$get, _this$nativeEl2;\n              this.#init();\n              const attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                const val = this.getAttribute(attr);\n                return val === null ? false : val === \"\" ? true : val;\n              }\n              return ((_this$get = this.get) === null || _this$get === void 0 ? void 0 : _this$get.call(this, prop)) ?? ((_this$nativeEl2 = this.nativeEl) === null || _this$nativeEl2 === void 0 ? void 0 : _this$nativeEl2[prop]);\n            }\n          };\n          if (prop !== prop.toUpperCase()) {\n            config.set = function (val) {\n              this.#init();\n              const attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                if (val === true || val === false || val == null) {\n                  this.toggleAttribute(attr, Boolean(val));\n                } else {\n                  this.setAttribute(attr, val);\n                }\n                return;\n              }\n              if (this.set) {\n                this.set(prop, val);\n                return;\n              }\n              if (this.nativeEl) {\n                this.nativeEl[prop] = val;\n              }\n            };\n          }\n          Object.defineProperty(this.prototype, prop, config);\n        }\n      }\n    }\n    // Private fields\n    #isInit = false;\n    #nativeEl = null;\n    #childMap = /* @__PURE__ */new Map();\n    #childObserver;\n    get;\n    set;\n    call;\n    // If the custom element is defined before the custom element's HTML is parsed\n    // no attributes will be available in the constructor (construction process).\n    // Wait until initializing in the attributeChangedCallback or\n    // connectedCallback or accessing any properties.\n    get nativeEl() {\n      var _this$shadowRoot;\n      this.#init();\n      return this.#nativeEl ?? this.querySelector(\":scope > [slot=media]\") ?? this.querySelector(tag) ?? ((_this$shadowRoot = this.shadowRoot) === null || _this$shadowRoot === void 0 ? void 0 : _this$shadowRoot.querySelector(tag)) ?? null;\n    }\n    set nativeEl(val) {\n      this.#nativeEl = val;\n    }\n    get defaultMuted() {\n      return this.hasAttribute(\"muted\");\n    }\n    set defaultMuted(val) {\n      this.toggleAttribute(\"muted\", val);\n    }\n    get src() {\n      return this.getAttribute(\"src\");\n    }\n    set src(val) {\n      this.setAttribute(\"src\", `${val}`);\n    }\n    get preload() {\n      var _this$nativeEl3;\n      return this.getAttribute(\"preload\") ?? ((_this$nativeEl3 = this.nativeEl) === null || _this$nativeEl3 === void 0 ? void 0 : _this$nativeEl3.preload);\n    }\n    set preload(val) {\n      this.setAttribute(\"preload\", `${val}`);\n    }\n    #init() {\n      if (this.#isInit) return;\n      this.#isInit = true;\n      this.init();\n    }\n    init() {\n      if (!this.shadowRoot) {\n        this.attachShadow({\n          mode: \"open\"\n        });\n        const attrs = namedNodeMapToObject(this.attributes);\n        if (is) attrs.is = is;\n        if (tag) attrs.part = tag;\n        this.shadowRoot.innerHTML = this.constructor.getTemplateHTML(attrs);\n      }\n      this.nativeEl.muted = this.hasAttribute(\"muted\");\n      for (const prop of nativeElProps) {\n        this.#upgradeProperty(prop);\n      }\n      this.#childObserver = new MutationObserver(this.#syncMediaChildAttribute.bind(this));\n      this.shadowRoot.addEventListener(\"slotchange\", () => this.#syncMediaChildren());\n      this.#syncMediaChildren();\n      for (const type of this.constructor.Events) {\n        this.shadowRoot.addEventListener(type, this, true);\n      }\n    }\n    handleEvent(event) {\n      if (event.target === this.nativeEl) {\n        this.dispatchEvent(new CustomEvent(event.type, {\n          detail: event.detail\n        }));\n      }\n    }\n    #syncMediaChildren() {\n      var _this$shadowRoot2;\n      const removeNativeChildren = new Map(this.#childMap);\n      const defaultSlot = (_this$shadowRoot2 = this.shadowRoot) === null || _this$shadowRoot2 === void 0 ? void 0 : _this$shadowRoot2.querySelector(\"slot:not([name])\");\n      const mediaChildren = defaultSlot === null || defaultSlot === void 0 ? void 0 : defaultSlot.assignedElements({\n        flatten: true\n      }).filter(el => [\"track\", \"source\"].includes(el.localName));\n      mediaChildren.forEach(el => {\n        var _this$nativeEl4;\n        removeNativeChildren.delete(el);\n        let clone = this.#childMap.get(el);\n        if (!clone) {\n          var _this$childObserver;\n          clone = el.cloneNode();\n          this.#childMap.set(el, clone);\n          (_this$childObserver = this.#childObserver) === null || _this$childObserver === void 0 ? void 0 : _this$childObserver.observe(el, {\n            attributes: true\n          });\n        }\n        (_this$nativeEl4 = this.nativeEl) === null || _this$nativeEl4 === void 0 ? void 0 : _this$nativeEl4.append(clone);\n        this.#enableDefaultTrack(clone);\n      });\n      removeNativeChildren.forEach((clone, el) => {\n        clone.remove();\n        this.#childMap.delete(el);\n      });\n    }\n    #syncMediaChildAttribute(mutations) {\n      for (const mutation of mutations) {\n        if (mutation.type === \"attributes\") {\n          const {\n            target,\n            attributeName\n          } = mutation;\n          const clone = this.#childMap.get(target);\n          if (clone && attributeName) {\n            clone.setAttribute(attributeName, target.getAttribute(attributeName) ?? \"\");\n            this.#enableDefaultTrack(clone);\n          }\n        }\n      }\n    }\n    #enableDefaultTrack(trackEl) {\n      if (trackEl && trackEl.localName === \"track\" && trackEl.default && (trackEl.kind === \"chapters\" || trackEl.kind === \"metadata\") && trackEl.track.mode === \"disabled\") {\n        trackEl.track.mode = \"hidden\";\n      }\n    }\n    #upgradeProperty(prop) {\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        delete this[prop];\n        this[prop] = value;\n      }\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      this.#init();\n      this.#forwardAttribute(attrName, oldValue, newValue);\n    }\n    #forwardAttribute(attrName, _oldValue, newValue) {\n      var _this$nativeEl6;\n      if ([\"id\", \"class\"].includes(attrName)) return;\n      if (!CustomMedia.observedAttributes.includes(attrName) && this.constructor.observedAttributes.includes(attrName)) {\n        return;\n      }\n      if (newValue === null) {\n        var _this$nativeEl5;\n        (_this$nativeEl5 = this.nativeEl) === null || _this$nativeEl5 === void 0 ? void 0 : _this$nativeEl5.removeAttribute(attrName);\n      } else if (((_this$nativeEl6 = this.nativeEl) === null || _this$nativeEl6 === void 0 ? void 0 : _this$nativeEl6.getAttribute(attrName)) !== newValue) {\n        var _this$nativeEl7;\n        (_this$nativeEl7 = this.nativeEl) === null || _this$nativeEl7 === void 0 ? void 0 : _this$nativeEl7.setAttribute(attrName, newValue);\n      }\n    }\n    connectedCallback() {\n      this.#init();\n    }\n  };\n}\nfunction getNativeElProps(nativeElTest) {\n  const nativeElProps = [];\n  for (let proto = Object.getPrototypeOf(nativeElTest); proto && proto !== HTMLElement.prototype; proto = Object.getPrototypeOf(proto)) {\n    const props = Object.getOwnPropertyNames(proto);\n    nativeElProps.push(...props);\n  }\n  return nativeElProps;\n}\nfunction serializeAttributes(attrs) {\n  let html = \"\";\n  for (const key in attrs) {\n    if (!Attributes.includes(key)) continue;\n    const value = attrs[key];\n    if (value === \"\") html += ` ${key}`;else html += ` ${key}=\"${value}\"`;\n  }\n  return html;\n}\nfunction namedNodeMapToObject(namedNodeMap) {\n  const obj = {};\n  for (const attr of namedNodeMap) {\n    obj[attr.name] = attr.value;\n  }\n  return obj;\n}\nconst CustomVideoElement = CustomMediaMixin(globalThis.HTMLElement ?? class {}, {\n  tag: \"video\"\n});\nconst CustomAudioElement = CustomMediaMixin(globalThis.HTMLElement ?? class {}, {\n  tag: \"audio\"\n});\nexport { Attributes, CustomAudioElement, CustomMediaMixin, CustomVideoElement, Events };","map":{"version":3,"names":["Events","Attributes","getAudioTemplateHTML","attrs","serializeAttributes","getVideoTemplateHTML","CustomMediaMixin","superclass","_ref","_globalThis$document","_globalThis$document$","tag","is","nativeElTest","globalThis","document","createElement","call","nativeElProps","getNativeElProps","CustomMedia","getTemplateHTML","endsWith","shadowRootOptions","mode","isDefined","observedAttributes","_nativeElTest$constru","define","natAttrs","constructor","#define","propsToAttrs","Set","delete","prop","prototype","_len","arguments","length","args","Array","_key","init","fn","_this$nativeEl","nativeFn","nativeEl","apply","config","get","_this$get","_this$nativeEl2","attr","toLowerCase","has","val","getAttribute","toUpperCase","set","toggleAttribute","Boolean","setAttribute","Object","defineProperty","isInit","childMap","Map","childObserver","_this$shadowRoot","querySelector","shadowRoot","defaultMuted","hasAttribute","src","preload","_this$nativeEl3","#init","attachShadow","namedNodeMapToObject","attributes","part","innerHTML","muted","upgradeProperty","MutationObserver","syncMediaChildAttribute","bind","addEventListener","syncMediaChildren","type","handleEvent","event","target","dispatchEvent","CustomEvent","detail","#syncMediaChildren","_this$shadowRoot2","removeNativeChildren","defaultSlot","mediaChildren","assignedElements","flatten","filter","el","includes","localName","forEach","_this$nativeEl4","clone","_this$childObserver","cloneNode","observe","append","enableDefaultTrack","remove","#syncMediaChildAttribute","mutations","mutation","attributeName","#enableDefaultTrack","trackEl","default","kind","track","#upgradeProperty","hasOwnProperty","value","attributeChangedCallback","attrName","oldValue","newValue","forwardAttribute","#forwardAttribute","_oldValue","_this$nativeEl6","_this$nativeEl5","removeAttribute","_this$nativeEl7","connectedCallback","proto","getPrototypeOf","HTMLElement","props","getOwnPropertyNames","push","html","key","namedNodeMap","obj","name","CustomVideoElement","CustomAudioElement"],"sources":["/Users/monawiebkeurban/Documents/portfolio/node_modules/custom-media-element/dist/custom-media-element.js"],"sourcesContent":["const Events = [\n  \"abort\",\n  \"canplay\",\n  \"canplaythrough\",\n  \"durationchange\",\n  \"emptied\",\n  \"encrypted\",\n  \"ended\",\n  \"error\",\n  \"loadeddata\",\n  \"loadedmetadata\",\n  \"loadstart\",\n  \"pause\",\n  \"play\",\n  \"playing\",\n  \"progress\",\n  \"ratechange\",\n  \"seeked\",\n  \"seeking\",\n  \"stalled\",\n  \"suspend\",\n  \"timeupdate\",\n  \"volumechange\",\n  \"waiting\",\n  \"waitingforkey\",\n  \"resize\",\n  \"enterpictureinpicture\",\n  \"leavepictureinpicture\",\n  \"webkitbeginfullscreen\",\n  \"webkitendfullscreen\",\n  \"webkitpresentationmodechanged\"\n];\nconst Attributes = [\n  \"autopictureinpicture\",\n  \"disablepictureinpicture\",\n  \"disableremoteplayback\",\n  \"autoplay\",\n  \"controls\",\n  \"controlslist\",\n  \"crossorigin\",\n  \"loop\",\n  \"muted\",\n  \"playsinline\",\n  \"poster\",\n  \"preload\",\n  \"src\"\n];\nfunction getAudioTemplateHTML(attrs) {\n  return (\n    /*html*/\n    `\n    <style>\n      :host {\n        display: inline-flex;\n        line-height: 0;\n        flex-direction: column;\n        justify-content: end;\n      }\n\n      audio {\n        width: 100%;\n      }\n    </style>\n    <slot name=\"media\">\n      <audio${serializeAttributes(attrs)}></audio>\n    </slot>\n    <slot></slot>\n  `\n  );\n}\nfunction getVideoTemplateHTML(attrs) {\n  return (\n    /*html*/\n    `\n    <style>\n      :host {\n        display: inline-block;\n        line-height: 0;\n      }\n\n      video {\n        max-width: 100%;\n        max-height: 100%;\n        min-width: 100%;\n        min-height: 100%;\n        object-fit: var(--media-object-fit, contain);\n        object-position: var(--media-object-position, 50% 50%);\n      }\n\n      video::-webkit-media-text-track-container {\n        transform: var(--media-webkit-text-track-transform);\n        transition: var(--media-webkit-text-track-transition);\n      }\n    </style>\n    <slot name=\"media\">\n      <video${serializeAttributes(attrs)}></video>\n    </slot>\n    <slot></slot>\n  `\n  );\n}\nfunction CustomMediaMixin(superclass, { tag, is }) {\n  const nativeElTest = globalThis.document?.createElement?.(tag, { is });\n  const nativeElProps = nativeElTest ? getNativeElProps(nativeElTest) : [];\n  return class CustomMedia extends superclass {\n    static getTemplateHTML = tag.endsWith(\"audio\") ? getAudioTemplateHTML : getVideoTemplateHTML;\n    static shadowRootOptions = { mode: \"open\" };\n    static Events = Events;\n    static #isDefined = false;\n    static get observedAttributes() {\n      CustomMedia.#define();\n      const natAttrs = nativeElTest?.constructor?.observedAttributes ?? [];\n      return [\n        ...natAttrs,\n        ...Attributes\n      ];\n    }\n    static #define() {\n      if (this.#isDefined) return;\n      this.#isDefined = true;\n      const propsToAttrs = new Set(this.observedAttributes);\n      propsToAttrs.delete(\"muted\");\n      for (const prop of nativeElProps) {\n        if (prop in this.prototype) continue;\n        if (typeof nativeElTest[prop] === \"function\") {\n          this.prototype[prop] = function(...args) {\n            this.#init();\n            const fn = () => {\n              if (this.call) return this.call(prop, ...args);\n              const nativeFn = this.nativeEl?.[prop];\n              return nativeFn?.apply(this.nativeEl, args);\n            };\n            return fn();\n          };\n        } else {\n          const config = {\n            get() {\n              this.#init();\n              const attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                const val = this.getAttribute(attr);\n                return val === null ? false : val === \"\" ? true : val;\n              }\n              return this.get?.(prop) ?? this.nativeEl?.[prop];\n            }\n          };\n          if (prop !== prop.toUpperCase()) {\n            config.set = function(val) {\n              this.#init();\n              const attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                if (val === true || val === false || val == null) {\n                  this.toggleAttribute(attr, Boolean(val));\n                } else {\n                  this.setAttribute(attr, val);\n                }\n                return;\n              }\n              if (this.set) {\n                this.set(prop, val);\n                return;\n              }\n              if (this.nativeEl) {\n                this.nativeEl[prop] = val;\n              }\n            };\n          }\n          Object.defineProperty(this.prototype, prop, config);\n        }\n      }\n    }\n    // Private fields\n    #isInit = false;\n    #nativeEl = null;\n    #childMap = /* @__PURE__ */ new Map();\n    #childObserver;\n    get;\n    set;\n    call;\n    // If the custom element is defined before the custom element's HTML is parsed\n    // no attributes will be available in the constructor (construction process).\n    // Wait until initializing in the attributeChangedCallback or\n    // connectedCallback or accessing any properties.\n    get nativeEl() {\n      this.#init();\n      return this.#nativeEl ?? this.querySelector(\":scope > [slot=media]\") ?? this.querySelector(tag) ?? this.shadowRoot?.querySelector(tag) ?? null;\n    }\n    set nativeEl(val) {\n      this.#nativeEl = val;\n    }\n    get defaultMuted() {\n      return this.hasAttribute(\"muted\");\n    }\n    set defaultMuted(val) {\n      this.toggleAttribute(\"muted\", val);\n    }\n    get src() {\n      return this.getAttribute(\"src\");\n    }\n    set src(val) {\n      this.setAttribute(\"src\", `${val}`);\n    }\n    get preload() {\n      return this.getAttribute(\"preload\") ?? this.nativeEl?.preload;\n    }\n    set preload(val) {\n      this.setAttribute(\"preload\", `${val}`);\n    }\n    #init() {\n      if (this.#isInit) return;\n      this.#isInit = true;\n      this.init();\n    }\n    init() {\n      if (!this.shadowRoot) {\n        this.attachShadow({ mode: \"open\" });\n        const attrs = namedNodeMapToObject(this.attributes);\n        if (is) attrs.is = is;\n        if (tag) attrs.part = tag;\n        this.shadowRoot.innerHTML = this.constructor.getTemplateHTML(attrs);\n      }\n      this.nativeEl.muted = this.hasAttribute(\"muted\");\n      for (const prop of nativeElProps) {\n        this.#upgradeProperty(prop);\n      }\n      this.#childObserver = new MutationObserver(this.#syncMediaChildAttribute.bind(this));\n      this.shadowRoot.addEventListener(\"slotchange\", () => this.#syncMediaChildren());\n      this.#syncMediaChildren();\n      for (const type of this.constructor.Events) {\n        this.shadowRoot.addEventListener(type, this, true);\n      }\n    }\n    handleEvent(event) {\n      if (event.target === this.nativeEl) {\n        this.dispatchEvent(new CustomEvent(event.type, { detail: event.detail }));\n      }\n    }\n    #syncMediaChildren() {\n      const removeNativeChildren = new Map(this.#childMap);\n      const defaultSlot = this.shadowRoot?.querySelector(\"slot:not([name])\");\n      const mediaChildren = defaultSlot?.assignedElements({ flatten: true }).filter((el) => [\"track\", \"source\"].includes(el.localName));\n      mediaChildren.forEach((el) => {\n        removeNativeChildren.delete(el);\n        let clone = this.#childMap.get(el);\n        if (!clone) {\n          clone = el.cloneNode();\n          this.#childMap.set(el, clone);\n          this.#childObserver?.observe(el, { attributes: true });\n        }\n        this.nativeEl?.append(clone);\n        this.#enableDefaultTrack(clone);\n      });\n      removeNativeChildren.forEach((clone, el) => {\n        clone.remove();\n        this.#childMap.delete(el);\n      });\n    }\n    #syncMediaChildAttribute(mutations) {\n      for (const mutation of mutations) {\n        if (mutation.type === \"attributes\") {\n          const { target, attributeName } = mutation;\n          const clone = this.#childMap.get(target);\n          if (clone && attributeName) {\n            clone.setAttribute(attributeName, target.getAttribute(attributeName) ?? \"\");\n            this.#enableDefaultTrack(clone);\n          }\n        }\n      }\n    }\n    #enableDefaultTrack(trackEl) {\n      if (trackEl && trackEl.localName === \"track\" && trackEl.default && (trackEl.kind === \"chapters\" || trackEl.kind === \"metadata\") && trackEl.track.mode === \"disabled\") {\n        trackEl.track.mode = \"hidden\";\n      }\n    }\n    #upgradeProperty(prop) {\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        delete this[prop];\n        this[prop] = value;\n      }\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      this.#init();\n      this.#forwardAttribute(attrName, oldValue, newValue);\n    }\n    #forwardAttribute(attrName, _oldValue, newValue) {\n      if ([\"id\", \"class\"].includes(attrName)) return;\n      if (!CustomMedia.observedAttributes.includes(attrName) && this.constructor.observedAttributes.includes(attrName)) {\n        return;\n      }\n      if (newValue === null) {\n        this.nativeEl?.removeAttribute(attrName);\n      } else if (this.nativeEl?.getAttribute(attrName) !== newValue) {\n        this.nativeEl?.setAttribute(attrName, newValue);\n      }\n    }\n    connectedCallback() {\n      this.#init();\n    }\n  };\n}\nfunction getNativeElProps(nativeElTest) {\n  const nativeElProps = [];\n  for (let proto = Object.getPrototypeOf(nativeElTest); proto && proto !== HTMLElement.prototype; proto = Object.getPrototypeOf(proto)) {\n    const props = Object.getOwnPropertyNames(proto);\n    nativeElProps.push(...props);\n  }\n  return nativeElProps;\n}\nfunction serializeAttributes(attrs) {\n  let html = \"\";\n  for (const key in attrs) {\n    if (!Attributes.includes(key)) continue;\n    const value = attrs[key];\n    if (value === \"\") html += ` ${key}`;\n    else html += ` ${key}=\"${value}\"`;\n  }\n  return html;\n}\nfunction namedNodeMapToObject(namedNodeMap) {\n  const obj = {};\n  for (const attr of namedNodeMap) {\n    obj[attr.name] = attr.value;\n  }\n  return obj;\n}\nconst CustomVideoElement = CustomMediaMixin(globalThis.HTMLElement ?? class {\n}, {\n  tag: \"video\"\n});\nconst CustomAudioElement = CustomMediaMixin(globalThis.HTMLElement ?? class {\n}, {\n  tag: \"audio\"\n});\nexport {\n  Attributes,\n  CustomAudioElement,\n  CustomMediaMixin,\n  CustomVideoElement,\n  Events\n};\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,CACb,OAAO,EACP,SAAS,EACT,gBAAgB,EAChB,gBAAgB,EAChB,SAAS,EACT,WAAW,EACX,OAAO,EACP,OAAO,EACP,YAAY,EACZ,gBAAgB,EAChB,WAAW,EACX,OAAO,EACP,MAAM,EACN,SAAS,EACT,UAAU,EACV,YAAY,EACZ,QAAQ,EACR,SAAS,EACT,SAAS,EACT,SAAS,EACT,YAAY,EACZ,cAAc,EACd,SAAS,EACT,eAAe,EACf,QAAQ,EACR,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,qBAAqB,EACrB,+BAA+B,CAChC;AACD,MAAMC,UAAU,GAAG,CACjB,sBAAsB,EACtB,yBAAyB,EACzB,uBAAuB,EACvB,UAAU,EACV,UAAU,EACV,cAAc,EACd,aAAa,EACb,MAAM,EACN,OAAO,EACP,aAAa,EACb,QAAQ,EACR,SAAS,EACT,KAAK,CACN;AACD,SAASC,oBAAoBA,CAACC,KAAK,EAAE;EACnC,OACE,QACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAcC,mBAAmB,CAACD,KAAK,CAAC;AACxC;AACA;AACA,GAAG;AAEH;AACA,SAASE,oBAAoBA,CAACF,KAAK,EAAE;EACnC,OACE,QACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAcC,mBAAmB,CAACD,KAAK,CAAC;AACxC;AACA;AACA,GAAG;AAEH;AACA,SAASG,gBAAgBA,CAACC,UAAU,EAAAC,IAAA,EAAe;EAAA,IAAAC,oBAAA,EAAAC,qBAAA;EAAA,IAAb;IAAEC,GAAG;IAAEC;EAAG,CAAC,GAAAJ,IAAA;EAC/C,MAAMK,YAAY,IAAAJ,oBAAA,GAAGK,UAAU,CAACC,QAAQ,cAAAN,oBAAA,wBAAAC,qBAAA,GAAnBD,oBAAA,CAAqBO,aAAa,cAAAN,qBAAA,uBAAlCA,qBAAA,CAAAO,IAAA,CAAAR,oBAAA,EAAqCE,GAAG,EAAE;IAAEC;EAAG,CAAC,CAAC;EACtE,MAAMM,aAAa,GAAGL,YAAY,GAAGM,gBAAgB,CAACN,YAAY,CAAC,GAAG,EAAE;EACxE,OAAO,MAAMO,WAAW,SAASb,UAAU,CAAC;IAC1C,OAAOc,eAAe,GAAGV,GAAG,CAACW,QAAQ,CAAC,OAAO,CAAC,GAAGpB,oBAAoB,GAAGG,oBAAoB;IAC5F,OAAOkB,iBAAiB,GAAG;MAAEC,IAAI,EAAE;IAAO,CAAC;IAC3C,OAAOxB,MAAM,GAAGA,MAAM;IACtB,OAAO,CAACyB,SAAS,GAAG,KAAK;IACzB,WAAWC,kBAAkBA,CAAA,EAAG;MAAA,IAAAC,qBAAA;MAC9BP,WAAW,CAAC,CAACQ,MAAM,CAAC,CAAC;MACrB,MAAMC,QAAQ,GAAG,CAAAhB,YAAY,aAAZA,YAAY,wBAAAc,qBAAA,GAAZd,YAAY,CAAEiB,WAAW,cAAAH,qBAAA,uBAAzBA,qBAAA,CAA2BD,kBAAkB,KAAI,EAAE;MACpE,OAAO,CACL,GAAGG,QAAQ,EACX,GAAG5B,UAAU,CACd;IACH;IACA,OAAO,CAAC2B,MAAMG,CAAA,EAAG;MACf,IAAI,IAAI,CAAC,CAACN,SAAS,EAAE;MACrB,IAAI,CAAC,CAACA,SAAS,GAAG,IAAI;MACtB,MAAMO,YAAY,GAAG,IAAIC,GAAG,CAAC,IAAI,CAACP,kBAAkB,CAAC;MACrDM,YAAY,CAACE,MAAM,CAAC,OAAO,CAAC;MAC5B,KAAK,MAAMC,IAAI,IAAIjB,aAAa,EAAE;QAChC,IAAIiB,IAAI,IAAI,IAAI,CAACC,SAAS,EAAE;QAC5B,IAAI,OAAOvB,YAAY,CAACsB,IAAI,CAAC,KAAK,UAAU,EAAE;UAC5C,IAAI,CAACC,SAAS,CAACD,IAAI,CAAC,GAAG,YAAkB;YAAA,SAAAE,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;cAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;YAAA;YACrC,IAAI,CAAC,CAACC,IAAI,CAAC,CAAC;YACZ,MAAMC,EAAE,GAAGA,CAAA,KAAM;cAAA,IAAAC,cAAA;cACf,IAAI,IAAI,CAAC5B,IAAI,EAAE,OAAO,IAAI,CAACA,IAAI,CAACkB,IAAI,EAAE,GAAGK,IAAI,CAAC;cAC9C,MAAMM,QAAQ,IAAAD,cAAA,GAAG,IAAI,CAACE,QAAQ,cAAAF,cAAA,uBAAbA,cAAA,CAAgBV,IAAI,CAAC;cACtC,OAAOW,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,KAAK,CAAC,IAAI,CAACD,QAAQ,EAAEP,IAAI,CAAC;YAC7C,CAAC;YACD,OAAOI,EAAE,CAAC,CAAC;UACb,CAAC;QACH,CAAC,MAAM;UACL,MAAMK,MAAM,GAAG;YACbC,GAAGA,CAAA,EAAG;cAAA,IAAAC,SAAA,EAAAC,eAAA;cACJ,IAAI,CAAC,CAACT,IAAI,CAAC,CAAC;cACZ,MAAMU,IAAI,GAAGlB,IAAI,CAACmB,WAAW,CAAC,CAAC;cAC/B,IAAItB,YAAY,CAACuB,GAAG,CAACF,IAAI,CAAC,EAAE;gBAC1B,MAAMG,GAAG,GAAG,IAAI,CAACC,YAAY,CAACJ,IAAI,CAAC;gBACnC,OAAOG,GAAG,KAAK,IAAI,GAAG,KAAK,GAAGA,GAAG,KAAK,EAAE,GAAG,IAAI,GAAGA,GAAG;cACvD;cACA,OAAO,EAAAL,SAAA,OAAI,CAACD,GAAG,cAAAC,SAAA,uBAARA,SAAA,CAAAlC,IAAA,KAAI,EAAOkB,IAAI,CAAC,OAAAiB,eAAA,GAAI,IAAI,CAACL,QAAQ,cAAAK,eAAA,uBAAbA,eAAA,CAAgBjB,IAAI,CAAC;YAClD;UACF,CAAC;UACD,IAAIA,IAAI,KAAKA,IAAI,CAACuB,WAAW,CAAC,CAAC,EAAE;YAC/BT,MAAM,CAACU,GAAG,GAAG,UAASH,GAAG,EAAE;cACzB,IAAI,CAAC,CAACb,IAAI,CAAC,CAAC;cACZ,MAAMU,IAAI,GAAGlB,IAAI,CAACmB,WAAW,CAAC,CAAC;cAC/B,IAAItB,YAAY,CAACuB,GAAG,CAACF,IAAI,CAAC,EAAE;gBAC1B,IAAIG,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,KAAK,IAAIA,GAAG,IAAI,IAAI,EAAE;kBAChD,IAAI,CAACI,eAAe,CAACP,IAAI,EAAEQ,OAAO,CAACL,GAAG,CAAC,CAAC;gBAC1C,CAAC,MAAM;kBACL,IAAI,CAACM,YAAY,CAACT,IAAI,EAAEG,GAAG,CAAC;gBAC9B;gBACA;cACF;cACA,IAAI,IAAI,CAACG,GAAG,EAAE;gBACZ,IAAI,CAACA,GAAG,CAACxB,IAAI,EAAEqB,GAAG,CAAC;gBACnB;cACF;cACA,IAAI,IAAI,CAACT,QAAQ,EAAE;gBACjB,IAAI,CAACA,QAAQ,CAACZ,IAAI,CAAC,GAAGqB,GAAG;cAC3B;YACF,CAAC;UACH;UACAO,MAAM,CAACC,cAAc,CAAC,IAAI,CAAC5B,SAAS,EAAED,IAAI,EAAEc,MAAM,CAAC;QACrD;MACF;IACF;IACA;IACA,CAACgB,MAAM,GAAG,KAAK;IACf,CAAClB,QAAQ,GAAG,IAAI;IAChB,CAACmB,QAAQ,GAAG,eAAgB,IAAIC,GAAG,CAAC,CAAC;IACrC,CAACC,aAAa;IACdlB,GAAG;IACHS,GAAG;IACH1C,IAAI;IACJ;IACA;IACA;IACA;IACA,IAAI8B,QAAQA,CAAA,EAAG;MAAA,IAAAsB,gBAAA;MACb,IAAI,CAAC,CAAC1B,IAAI,CAAC,CAAC;MACZ,OAAO,IAAI,CAAC,CAACI,QAAQ,IAAI,IAAI,CAACuB,aAAa,CAAC,uBAAuB,CAAC,IAAI,IAAI,CAACA,aAAa,CAAC3D,GAAG,CAAC,MAAA0D,gBAAA,GAAI,IAAI,CAACE,UAAU,cAAAF,gBAAA,uBAAfA,gBAAA,CAAiBC,aAAa,CAAC3D,GAAG,CAAC,KAAI,IAAI;IAChJ;IACA,IAAIoC,QAAQA,CAACS,GAAG,EAAE;MAChB,IAAI,CAAC,CAACT,QAAQ,GAAGS,GAAG;IACtB;IACA,IAAIgB,YAAYA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACC,YAAY,CAAC,OAAO,CAAC;IACnC;IACA,IAAID,YAAYA,CAAChB,GAAG,EAAE;MACpB,IAAI,CAACI,eAAe,CAAC,OAAO,EAAEJ,GAAG,CAAC;IACpC;IACA,IAAIkB,GAAGA,CAAA,EAAG;MACR,OAAO,IAAI,CAACjB,YAAY,CAAC,KAAK,CAAC;IACjC;IACA,IAAIiB,GAAGA,CAAClB,GAAG,EAAE;MACX,IAAI,CAACM,YAAY,CAAC,KAAK,EAAE,GAAGN,GAAG,EAAE,CAAC;IACpC;IACA,IAAImB,OAAOA,CAAA,EAAG;MAAA,IAAAC,eAAA;MACZ,OAAO,IAAI,CAACnB,YAAY,CAAC,SAAS,CAAC,MAAAmB,eAAA,GAAI,IAAI,CAAC7B,QAAQ,cAAA6B,eAAA,uBAAbA,eAAA,CAAeD,OAAO;IAC/D;IACA,IAAIA,OAAOA,CAACnB,GAAG,EAAE;MACf,IAAI,CAACM,YAAY,CAAC,SAAS,EAAE,GAAGN,GAAG,EAAE,CAAC;IACxC;IACA,CAACb,IAAIkC,CAAA,EAAG;MACN,IAAI,IAAI,CAAC,CAACZ,MAAM,EAAE;MAClB,IAAI,CAAC,CAACA,MAAM,GAAG,IAAI;MACnB,IAAI,CAACtB,IAAI,CAAC,CAAC;IACb;IACAA,IAAIA,CAAA,EAAG;MACL,IAAI,CAAC,IAAI,CAAC4B,UAAU,EAAE;QACpB,IAAI,CAACO,YAAY,CAAC;UAAEtD,IAAI,EAAE;QAAO,CAAC,CAAC;QACnC,MAAMrB,KAAK,GAAG4E,oBAAoB,CAAC,IAAI,CAACC,UAAU,CAAC;QACnD,IAAIpE,EAAE,EAAET,KAAK,CAACS,EAAE,GAAGA,EAAE;QACrB,IAAID,GAAG,EAAER,KAAK,CAAC8E,IAAI,GAAGtE,GAAG;QACzB,IAAI,CAAC4D,UAAU,CAACW,SAAS,GAAG,IAAI,CAACpD,WAAW,CAACT,eAAe,CAAClB,KAAK,CAAC;MACrE;MACA,IAAI,CAAC4C,QAAQ,CAACoC,KAAK,GAAG,IAAI,CAACV,YAAY,CAAC,OAAO,CAAC;MAChD,KAAK,MAAMtC,IAAI,IAAIjB,aAAa,EAAE;QAChC,IAAI,CAAC,CAACkE,eAAe,CAACjD,IAAI,CAAC;MAC7B;MACA,IAAI,CAAC,CAACiC,aAAa,GAAG,IAAIiB,gBAAgB,CAAC,IAAI,CAAC,CAACC,uBAAuB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MACpF,IAAI,CAAChB,UAAU,CAACiB,gBAAgB,CAAC,YAAY,EAAE,MAAM,IAAI,CAAC,CAACC,iBAAiB,CAAC,CAAC,CAAC;MAC/E,IAAI,CAAC,CAACA,iBAAiB,CAAC,CAAC;MACzB,KAAK,MAAMC,IAAI,IAAI,IAAI,CAAC5D,WAAW,CAAC9B,MAAM,EAAE;QAC1C,IAAI,CAACuE,UAAU,CAACiB,gBAAgB,CAACE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MACpD;IACF;IACAC,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAIA,KAAK,CAACC,MAAM,KAAK,IAAI,CAAC9C,QAAQ,EAAE;QAClC,IAAI,CAAC+C,aAAa,CAAC,IAAIC,WAAW,CAACH,KAAK,CAACF,IAAI,EAAE;UAAEM,MAAM,EAAEJ,KAAK,CAACI;QAAO,CAAC,CAAC,CAAC;MAC3E;IACF;IACA,CAACP,iBAAiBQ,CAAA,EAAG;MAAA,IAAAC,iBAAA;MACnB,MAAMC,oBAAoB,GAAG,IAAIhC,GAAG,CAAC,IAAI,CAAC,CAACD,QAAQ,CAAC;MACpD,MAAMkC,WAAW,IAAAF,iBAAA,GAAG,IAAI,CAAC3B,UAAU,cAAA2B,iBAAA,uBAAfA,iBAAA,CAAiB5B,aAAa,CAAC,kBAAkB,CAAC;MACtE,MAAM+B,aAAa,GAAGD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,gBAAgB,CAAC;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC,CAACC,MAAM,CAAEC,EAAE,IAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAACD,EAAE,CAACE,SAAS,CAAC,CAAC;MACjIN,aAAa,CAACO,OAAO,CAAEH,EAAE,IAAK;QAAA,IAAAI,eAAA;QAC5BV,oBAAoB,CAACjE,MAAM,CAACuE,EAAE,CAAC;QAC/B,IAAIK,KAAK,GAAG,IAAI,CAAC,CAAC5C,QAAQ,CAAChB,GAAG,CAACuD,EAAE,CAAC;QAClC,IAAI,CAACK,KAAK,EAAE;UAAA,IAAAC,mBAAA;UACVD,KAAK,GAAGL,EAAE,CAACO,SAAS,CAAC,CAAC;UACtB,IAAI,CAAC,CAAC9C,QAAQ,CAACP,GAAG,CAAC8C,EAAE,EAAEK,KAAK,CAAC;UAC7B,CAAAC,mBAAA,OAAI,CAAC,CAAC3C,aAAa,cAAA2C,mBAAA,uBAAnBA,mBAAA,CAAqBE,OAAO,CAACR,EAAE,EAAE;YAAEzB,UAAU,EAAE;UAAK,CAAC,CAAC;QACxD;QACA,CAAA6B,eAAA,OAAI,CAAC9D,QAAQ,cAAA8D,eAAA,uBAAbA,eAAA,CAAeK,MAAM,CAACJ,KAAK,CAAC;QAC5B,IAAI,CAAC,CAACK,kBAAkB,CAACL,KAAK,CAAC;MACjC,CAAC,CAAC;MACFX,oBAAoB,CAACS,OAAO,CAAC,CAACE,KAAK,EAAEL,EAAE,KAAK;QAC1CK,KAAK,CAACM,MAAM,CAAC,CAAC;QACd,IAAI,CAAC,CAAClD,QAAQ,CAAChC,MAAM,CAACuE,EAAE,CAAC;MAC3B,CAAC,CAAC;IACJ;IACA,CAACnB,uBAAuB+B,CAACC,SAAS,EAAE;MAClC,KAAK,MAAMC,QAAQ,IAAID,SAAS,EAAE;QAChC,IAAIC,QAAQ,CAAC7B,IAAI,KAAK,YAAY,EAAE;UAClC,MAAM;YAAEG,MAAM;YAAE2B;UAAc,CAAC,GAAGD,QAAQ;UAC1C,MAAMT,KAAK,GAAG,IAAI,CAAC,CAAC5C,QAAQ,CAAChB,GAAG,CAAC2C,MAAM,CAAC;UACxC,IAAIiB,KAAK,IAAIU,aAAa,EAAE;YAC1BV,KAAK,CAAChD,YAAY,CAAC0D,aAAa,EAAE3B,MAAM,CAACpC,YAAY,CAAC+D,aAAa,CAAC,IAAI,EAAE,CAAC;YAC3E,IAAI,CAAC,CAACL,kBAAkB,CAACL,KAAK,CAAC;UACjC;QACF;MACF;IACF;IACA,CAACK,kBAAkBM,CAACC,OAAO,EAAE;MAC3B,IAAIA,OAAO,IAAIA,OAAO,CAACf,SAAS,KAAK,OAAO,IAAIe,OAAO,CAACC,OAAO,KAAKD,OAAO,CAACE,IAAI,KAAK,UAAU,IAAIF,OAAO,CAACE,IAAI,KAAK,UAAU,CAAC,IAAIF,OAAO,CAACG,KAAK,CAACrG,IAAI,KAAK,UAAU,EAAE;QACpKkG,OAAO,CAACG,KAAK,CAACrG,IAAI,GAAG,QAAQ;MAC/B;IACF;IACA,CAAC4D,eAAe0C,CAAC3F,IAAI,EAAE;MACrB,IAAI4B,MAAM,CAAC3B,SAAS,CAAC2F,cAAc,CAAC9G,IAAI,CAAC,IAAI,EAAEkB,IAAI,CAAC,EAAE;QACpD,MAAM6F,KAAK,GAAG,IAAI,CAAC7F,IAAI,CAAC;QACxB,OAAO,IAAI,CAACA,IAAI,CAAC;QACjB,IAAI,CAACA,IAAI,CAAC,GAAG6F,KAAK;MACpB;IACF;IACAC,wBAAwBA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;MACrD,IAAI,CAAC,CAACzF,IAAI,CAAC,CAAC;MACZ,IAAI,CAAC,CAAC0F,gBAAgB,CAACH,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;IACtD;IACA,CAACC,gBAAgBC,CAACJ,QAAQ,EAAEK,SAAS,EAAEH,QAAQ,EAAE;MAAA,IAAAI,eAAA;MAC/C,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC9B,QAAQ,CAACwB,QAAQ,CAAC,EAAE;MACxC,IAAI,CAAC9G,WAAW,CAACM,kBAAkB,CAACgF,QAAQ,CAACwB,QAAQ,CAAC,IAAI,IAAI,CAACpG,WAAW,CAACJ,kBAAkB,CAACgF,QAAQ,CAACwB,QAAQ,CAAC,EAAE;QAChH;MACF;MACA,IAAIE,QAAQ,KAAK,IAAI,EAAE;QAAA,IAAAK,eAAA;QACrB,CAAAA,eAAA,OAAI,CAAC1F,QAAQ,cAAA0F,eAAA,uBAAbA,eAAA,CAAeC,eAAe,CAACR,QAAQ,CAAC;MAC1C,CAAC,MAAM,IAAI,EAAAM,eAAA,OAAI,CAACzF,QAAQ,cAAAyF,eAAA,uBAAbA,eAAA,CAAe/E,YAAY,CAACyE,QAAQ,CAAC,MAAKE,QAAQ,EAAE;QAAA,IAAAO,eAAA;QAC7D,CAAAA,eAAA,OAAI,CAAC5F,QAAQ,cAAA4F,eAAA,uBAAbA,eAAA,CAAe7E,YAAY,CAACoE,QAAQ,EAAEE,QAAQ,CAAC;MACjD;IACF;IACAQ,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAAC,CAACjG,IAAI,CAAC,CAAC;IACd;EACF,CAAC;AACH;AACA,SAASxB,gBAAgBA,CAACN,YAAY,EAAE;EACtC,MAAMK,aAAa,GAAG,EAAE;EACxB,KAAK,IAAI2H,KAAK,GAAG9E,MAAM,CAAC+E,cAAc,CAACjI,YAAY,CAAC,EAAEgI,KAAK,IAAIA,KAAK,KAAKE,WAAW,CAAC3G,SAAS,EAAEyG,KAAK,GAAG9E,MAAM,CAAC+E,cAAc,CAACD,KAAK,CAAC,EAAE;IACpI,MAAMG,KAAK,GAAGjF,MAAM,CAACkF,mBAAmB,CAACJ,KAAK,CAAC;IAC/C3H,aAAa,CAACgI,IAAI,CAAC,GAAGF,KAAK,CAAC;EAC9B;EACA,OAAO9H,aAAa;AACtB;AACA,SAASd,mBAAmBA,CAACD,KAAK,EAAE;EAClC,IAAIgJ,IAAI,GAAG,EAAE;EACb,KAAK,MAAMC,GAAG,IAAIjJ,KAAK,EAAE;IACvB,IAAI,CAACF,UAAU,CAACyG,QAAQ,CAAC0C,GAAG,CAAC,EAAE;IAC/B,MAAMpB,KAAK,GAAG7H,KAAK,CAACiJ,GAAG,CAAC;IACxB,IAAIpB,KAAK,KAAK,EAAE,EAAEmB,IAAI,IAAI,IAAIC,GAAG,EAAE,CAAC,KAC/BD,IAAI,IAAI,IAAIC,GAAG,KAAKpB,KAAK,GAAG;EACnC;EACA,OAAOmB,IAAI;AACb;AACA,SAASpE,oBAAoBA,CAACsE,YAAY,EAAE;EAC1C,MAAMC,GAAG,GAAG,CAAC,CAAC;EACd,KAAK,MAAMjG,IAAI,IAAIgG,YAAY,EAAE;IAC/BC,GAAG,CAACjG,IAAI,CAACkG,IAAI,CAAC,GAAGlG,IAAI,CAAC2E,KAAK;EAC7B;EACA,OAAOsB,GAAG;AACZ;AACA,MAAME,kBAAkB,GAAGlJ,gBAAgB,CAACQ,UAAU,CAACiI,WAAW,IAAI,MAAM,EAC3E,EAAE;EACDpI,GAAG,EAAE;AACP,CAAC,CAAC;AACF,MAAM8I,kBAAkB,GAAGnJ,gBAAgB,CAACQ,UAAU,CAACiI,WAAW,IAAI,MAAM,EAC3E,EAAE;EACDpI,GAAG,EAAE;AACP,CAAC,CAAC;AACF,SACEV,UAAU,EACVwJ,kBAAkB,EAClBnJ,gBAAgB,EAChBkJ,kBAAkB,EAClBxJ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}