{"ast":null,"code":"import React, { useCallback, useEffect, useRef } from \"react\";\nconst Player = React.forwardRef((props, ref) => {\n  const {\n    playing,\n    pip\n  } = props;\n  const Player2 = props.activePlayer;\n  const playerRef = useRef(null);\n  const startOnPlayRef = useRef(true);\n  useEffect(() => {\n    var _a, _b;\n    if (!playerRef.current) return;\n    if (playerRef.current.paused && playing === true) {\n      playerRef.current.play();\n    }\n    if (!playerRef.current.paused && playing === false) {\n      playerRef.current.pause();\n    }\n    playerRef.current.playbackRate = (_a = props.playbackRate) != null ? _a : 1;\n    playerRef.current.volume = (_b = props.volume) != null ? _b : 1;\n  });\n  useEffect(() => {\n    var _a, _b, _c, _d, _e;\n    if (!playerRef.current || !globalThis.document) return;\n    if (pip && !document.pictureInPictureElement) {\n      try {\n        (_b = (_a = playerRef.current).requestPictureInPicture) == null ? void 0 : _b.call(_a);\n      } catch (err) {}\n    }\n    if (!pip && document.pictureInPictureElement) {\n      try {\n        (_d = (_c = playerRef.current).exitPictureInPicture) == null ? void 0 : _d.call(_c);\n        (_e = document.exitPictureInPicture) == null ? void 0 : _e.call(document);\n      } catch (err) {}\n    }\n  }, [pip]);\n  const handleLoadStart = event => {\n    var _a, _b;\n    startOnPlayRef.current = true;\n    (_a = props.onReady) == null ? void 0 : _a.call(props);\n    (_b = props.onLoadStart) == null ? void 0 : _b.call(props, event);\n  };\n  const handlePlay = event => {\n    var _a, _b;\n    if (startOnPlayRef.current) {\n      startOnPlayRef.current = false;\n      (_a = props.onStart) == null ? void 0 : _a.call(props, event);\n    }\n    (_b = props.onPlay) == null ? void 0 : _b.call(props, event);\n  };\n  if (!Player2) {\n    return null;\n  }\n  const eventProps = {};\n  for (const key in props) {\n    if (key.startsWith(\"on\")) {\n      eventProps[key] = props[key];\n    }\n  }\n  return /* @__PURE__ */React.createElement(Player2, {\n    ...eventProps,\n    style: props.style,\n    className: props.className,\n    slot: props.slot,\n    ref: useCallback(node => {\n      playerRef.current = node;\n      if (typeof ref === \"function\") {\n        ref(node);\n      } else if (ref !== null) {\n        ref.current = node;\n      }\n    }, [ref]),\n    src: props.src,\n    crossOrigin: props.crossOrigin,\n    preload: props.preload,\n    controls: props.controls,\n    muted: props.muted,\n    autoPlay: props.autoPlay,\n    loop: props.loop,\n    playsInline: props.playsInline,\n    config: props.config,\n    onLoadStart: handleLoadStart,\n    onPlay: handlePlay\n  }, props.children);\n});\nPlayer.displayName = \"Player\";\nvar Player_default = Player;\nexport { Player_default as default };","map":null,"metadata":{},"sourceType":"module"}